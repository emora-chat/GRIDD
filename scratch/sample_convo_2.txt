ssh://ubuntu@ec2-54-80-183-71.compute-1.amazonaws.com:22/home/ubuntu/miniconda3/envs/gridd/bin/python3.8 -u /home/ubuntu/EmoraAll/GRIDD/intcore_chatbot_server.py
device (cpu/cuda:0/cuda:1/...) >>> debug (n/y) >>> checking kb
checking templates
checking rules
	work_of_art_ner (GRIDD/resources/kg_files/rules/movies.kg)
IntelligenceCore load: 17.61
checking kb
NLU load: 12.06
User: ARG REQUESTS: []
TRUTH REQUESTS: []
ARG REQUESTS: []
TRUTH REQUESTS: []

Present Options:
	You know , I don't think we have met before . What would you like me to call you ? (s: 0.55, pr: 0.50)


0.000076: next turn
0.000021: sentence caser
0.128410: elit
0.050419: parse2logic
  0.000637: facts graph types
  0.001062: convert facts graph
    0.000221: to digraph
    0.000803: flatten types (45 concepts)
    0.000024: quantities
  0.000022: process dynamic rules
  0.044302: match
    0.044203: match
      0.000124: querygen
      0.006672: creating graph tensor (53 nodes, 161 edges)
        0.000991: setup
        0.001732: key tensor
        0.000419: target tensor
        0.003477: edge tensor
      0.000073: initializing solutions matrix
      0.037133: loop
      0.000013: postprocessing (MAX MEMORY: 0.002GB)
  0.000457: postprocess solutions
0.000037: multiword mentions
0.000012: ner mentions
0.001991: mention bridge
0.000238: merge bridge
0.003461: knowledge pull
0.000040: reference id
0.003358: reference infer
  0.001173: facts graph types
  0.002040: convert facts graph
    0.000271: to digraph
    0.001727: flatten types (62 concepts)
    0.000028: quantities
  0.000020: process dynamic rules
  0.000035: match
  0.000008: postprocess solutions
0.000011: reference resolution
0.003615: fragment resolution
  0.000084: identify previous emora questions
  0.003516: sal
0.044111: dialogue infer
  0.001175: facts graph types
  0.001993: convert facts graph
    0.000261: to digraph
    0.001693: flatten types (62 concepts)
    0.000027: quantities
  0.000020: process dynamic rules
  0.040725: match
    0.040673: match
      0.000256: querygen
      0.022615: creating graph tensor (128 nodes, 446 edges)
        0.002476: setup
        0.008176: key tensor
        0.000732: target tensor
        0.011136: edge tensor
      0.000077: initializing solutions matrix
      0.017542: loop
      0.000014: postprocessing (MAX MEMORY: 0.010GB)
  0.000106: postprocess solutions
0.009003: apply inferences
  0.001108: apply
  0.001882: update types
  0.000047: operate
  0.005950: sal
0.000551: reference id 2
0.027909: reference infer 2
  0.001824: facts graph types
  0.002954: convert facts graph
    0.000459: to digraph
    0.002443: flatten types (98 concepts)
    0.000038: quantities
  0.000819: process dynamic rules
  0.022187: match
    0.022135: match
      0.001261: querygen
      0.012894: creating graph tensor (179 nodes, 628 edges)
        0.003485: setup
        0.001191: key tensor
        0.001259: target tensor
        0.006814: edge tensor
      0.000079: initializing solutions matrix
      0.007723: loop
      0.000019: postprocessing (MAX MEMORY: 0.019GB)
  0.000008: postprocess solutions
0.000010: reference resolution 2
0.006024: fragment resolution 2
  0.000118: identify previous emora questions
  0.005892: sal
0.078697: dialogue infer 2
  0.001812: facts graph types
  0.003182: convert facts graph
    0.000441: to digraph
    0.002690: flatten types (98 concepts)
    0.000038: quantities
  0.000020: process dynamic rules
  0.073375: match
    0.073323: match
      0.000387: querygen
      0.025138: creating graph tensor (198 nodes, 704 edges)
        0.003731: setup
        0.009772: key tensor
        0.001032: target tensor
        0.010437: edge tensor
      0.000082: initializing solutions matrix
      0.047518: loop
      0.000014: postprocessing (MAX MEMORY: 0.024GB)
  0.000113: postprocess solutions
0.006428: apply inferences 2
  0.000307: apply
  0.000160: update types
  0.000060: operate
  0.005885: sal
0.002865: prepare template nlg
0.074332: template infer
  0.001800: facts graph types
  0.003208: convert facts graph
    0.000471: to digraph
    0.002687: flatten types (98 concepts)
    0.000039: quantities
  0.000021: process dynamic rules
  0.068793: match
    0.068736: match
      0.000388: querygen
      0.014078: creating graph tensor (198 nodes, 704 edges)
        0.003886: setup
        0.002650: key tensor
        0.001003: target tensor
        0.006376: edge tensor
      0.000080: initializing solutions matrix
      0.053987: loop
      0.000014: postprocessing (MAX MEMORY: 0.024GB)
  0.000309: postprocess solutions
0.000183: template fillers
0.000014: response sel
0.000155: response exp
0.000013: response rules
0.011045: response assembler
  0.000016: response assembly
  0.006137: update sal
  0.000264: decay sal
  0.004616: prune
    0.000010: setup
    0.000110: select keep
    0.000037: delete old spans
    0.003160: setup essentials
    0.000293: identify essentials
    0.000947: remove not keep

[0.45 s] Hi, this is an Alexa Prize Socialbot.  You know , I don't think we have met before . What would you like me to call you ?

User: ARG REQUESTS: [('emora', 'request', 'wm29', 'wm30')]
TRUTH REQUESTS: []
CURRENT USER CONCEPTS: {'"sally joe"', 'name', 'wm42', 'wm47', 'wm41', 'be', 'user', 'wm52', 'wm48', 'wm40', 'person_ner'}
FRAGMENT REQUEST MERGES: [('wm40', 'wm29')]
ARG REQUESTS: []
TRUTH REQUESTS: []

Present Options:
	I hope you've been doing well today . What have you been up to ? (s: 0.15, pr: 0.50)

React Options:
	I am really happy to meet you , sally joe ! (s: 0.47, pr: 0.50)


0.000033: next turn
0.000014: sentence caser
0.110701: elit
0.181342: parse2logic
  0.001765: facts graph types
  0.002790: convert facts graph
    0.000538: to digraph
    0.002198: flatten types (110 concepts)
    0.000040: quantities
  0.000020: process dynamic rules
  0.166710: match
    0.166642: match
      0.000291: querygen
      0.015745: creating graph tensor (146 nodes, 487 edges)
        0.002702: setup
        0.001327: key tensor
        0.000803: target tensor
        0.010793: edge tensor
      0.000081: initializing solutions matrix
      0.150262: loop
      0.000015: postprocessing (MAX MEMORY: 0.012GB)
  0.002237: postprocess solutions
0.000046: multiword mentions
0.000140: ner mentions
0.002836: mention bridge
0.000635: merge bridge
0.005473: knowledge pull
0.001484: reference id
0.038780: reference infer
  0.002406: facts graph types
  0.003738: convert facts graph
    0.000533: to digraph
    0.003145: flatten types (122 concepts)
    0.000043: quantities
  0.001261: process dynamic rules
  0.031193: match
    0.031133: match
      0.001517: querygen
      0.015450: creating graph tensor (241 nodes, 828 edges)
        0.004435: setup
        0.001287: key tensor
        0.001151: target tensor
        0.008366: edge tensor
      0.000083: initializing solutions matrix
      0.013894: loop
      0.000019: postprocessing (MAX MEMORY: 0.033GB)
  0.000008: postprocess solutions
0.000011: reference resolution
0.010463: fragment resolution
  0.000128: identify previous emora questions
  0.003111: find answer
  0.007206: sal
0.119987: dialogue infer
  0.002389: facts graph types
  0.004016: convert facts graph
    0.000566: to digraph
    0.003394: flatten types (122 concepts)
    0.000044: quantities
  0.000021: process dynamic rules
  0.112866: match
    0.112808: match
      0.000505: querygen
      0.027266: creating graph tensor (257 nodes, 914 edges)
        0.004815: setup
        0.009915: key tensor
        0.001658: target tensor
        0.010678: edge tensor
      0.000082: initializing solutions matrix
      0.084726: loop
      0.000014: postprocessing (MAX MEMORY: 0.040GB)
  0.000417: postprocess solutions
0.014180: apply inferences
  0.001936: apply
  0.002027: update types
  0.000059: operate
  0.010138: sal
0.001045: reference id 2
0.053745: reference infer 2
  0.003267: facts graph types
  0.005425: convert facts graph
    0.000763: to digraph
    0.004595: flatten types (167 concepts)
    0.000052: quantities
  0.001567: process dynamic rules
  0.043116: match
    0.043052: match
      0.001688: querygen
      0.024098: creating graph tensor (349 nodes, 1241 edges)
        0.006692: setup
        0.001397: key tensor
        0.002002: target tensor
        0.013735: edge tensor
      0.000083: initializing solutions matrix
      0.016999: loop
      0.000019: postprocessing (MAX MEMORY: 0.072GB)
  0.000152: postprocess solutions
0.001603: reference resolution 2
0.010057: fragment resolution 2
  0.000122: identify previous emora questions
  0.009919: sal
0.100048: dialogue infer 2
  0.003155: facts graph types
  0.005498: convert facts graph
    0.000766: to digraph
    0.004667: flatten types (163 concepts)
    0.000052: quantities
  0.000022: process dynamic rules
  0.090436: match
    0.090377: match
      0.000707: querygen
      0.021894: creating graph tensor (353 nodes, 1271 edges)
        0.007181: setup
        0.001402: key tensor
        0.001587: target tensor
        0.011450: edge tensor
      0.000083: initializing solutions matrix
      0.067486: loop
      0.000014: postprocessing (MAX MEMORY: 0.075GB)
  0.000591: postprocess solutions
0.011344: apply inferences 2
  0.000983: apply
  0.000246: update types
  0.000059: operate
  0.010039: sal
0.004142: prepare template nlg
0.150549: template infer
  0.003197: facts graph types
  0.005560: convert facts graph
    0.000777: to digraph
    0.004718: flatten types (164 concepts)
    0.000051: quantities
  0.000022: process dynamic rules
  0.140118: match
    0.140055: match
      0.000762: querygen
      0.043305: creating graph tensor (357 nodes, 1287 edges)
        0.007468: setup
        0.021024: key tensor
        0.001629: target tensor
        0.012894: edge tensor
      0.000084: initializing solutions matrix
      0.095675: loop
      0.000015: postprocessing (MAX MEMORY: 0.077GB)
  0.001256: postprocess solutions
0.000283: template fillers
0.000015: response sel
0.000223: response exp
0.000014: response rules
0.018394: response assembler
  0.000015: response assembly
  0.010264: update sal
  0.000425: decay sal
  0.007676: prune
    0.000010: setup
    0.000172: select keep
    0.000042: delete old spans
    0.005558: setup essentials
    0.000849: identify essentials
    0.000953: remove not keep

[0.84 s] I am really happy to meet you , sally joe ! I hope you've been doing well today . What have you been up to ?

User: ARG REQUESTS: [('emora', 'request', 'wm80', 'wm81')]
TRUTH REQUESTS: []
CURRENT USER CONCEPTS: {'wm157', 'wm112', 'unknown_noun', 'past', 'wm126', 'wm141', 'wm135', 'wm113', 'street', 'wm153', 'wm162', 'unknown_other', 'wm115', 'wm144', 'wm116', 'walk', 'user', 'apartment', 'prp', 'wm134', 'wm131', 'wm119', 'wm145', 'wm108', 'wm140', 'wm125', 'wm149', 'now', 'wm121', 'wm148', 'wm139'}
FRAGMENT REQUEST MERGES: [('wm119', 'wm80')]
ARG REQUESTS: []
TRUTH REQUESTS: []

Present Options:
	I was just thinking , the most fun I had today was taking a walk with my dog . Do you have a pet ? (s: 0.12, pr: 0.10)


0.000019: next turn
0.000014: sentence caser
0.115571: elit
0.226176: parse2logic
  0.004416: facts graph types
  0.006644: convert facts graph
    0.001262: to digraph
    0.005300: flatten types (248 concepts)
    0.000069: quantities
  0.000022: process dynamic rules
  0.193702: match
    0.193633: match
      0.000708: querygen
      0.018254: creating graph tensor (342 nodes, 1194 edges)
        0.007155: setup
        0.001570: key tensor
        0.001605: target tensor
        0.007627: edge tensor
      0.000086: initializing solutions matrix
      0.174327: loop
      0.000015: postprocessing (MAX MEMORY: 0.067GB)
  0.003876: postprocess solutions
0.000071: multiword mentions
0.000013: ner mentions
0.008844: mention bridge
0.007917: merge bridge
0.016046: knowledge pull
0.010273: reference id
0.073481: reference infer
  0.007131: facts graph types
  0.010823: convert facts graph
    0.001320: to digraph
    0.009397: flatten types (309 concepts)
    0.000088: quantities
  0.003659: process dynamic rules
  0.051311: match
    0.051243: match
      0.003457: querygen
      0.032252: creating graph tensor (687 nodes, 2430 edges)
        0.014177: setup
        0.001980: key tensor
        0.003452: target tensor
        0.012131: edge tensor
      0.000085: initializing solutions matrix
      0.015255: loop
      0.000023: postprocessing (MAX MEMORY: 0.271GB)
  0.000009: postprocess solutions
0.000013: reference resolution
0.027300: fragment resolution
  0.000164: identify previous emora questions
  0.009091: find answer
  0.018027: sal
0.130253: dialogue infer
  0.006908: facts graph types
  0.011002: convert facts graph
    0.001396: to digraph
    0.009513: flatten types (306 concepts)
    0.000079: quantities
  0.000023: process dynamic rules
  0.110819: match
    0.110752: match
      0.001423: querygen
      0.036781: creating graph tensor (715 nodes, 2605 edges)
        0.014689: setup
        0.002197: key tensor
        0.003441: target tensor
        0.015919: edge tensor
      0.000086: initializing solutions matrix
      0.072249: loop
      0.000014: postprocessing (MAX MEMORY: 0.310GB)
  0.000815: postprocess solutions
0.023405: apply inferences
  0.002010: apply
  0.001385: update types
  0.000091: operate
  0.019899: sal
0.003452: reference id 2
0.077643: reference infer 2
  0.007691: facts graph types
  0.011447: convert facts graph
    0.001768: to digraph
    0.009567: flatten types (332 concepts)
    0.000093: quantities
  0.003535: process dynamic rules
  0.054412: match
    0.054347: match
      0.003893: querygen
      0.036744: creating graph tensor (756 nodes, 2699 edges)
        0.014800: setup
        0.002255: key tensor
        0.003719: target tensor
        0.015381: edge tensor
      0.000085: initializing solutions matrix
      0.013433: loop
      0.000022: postprocessing (MAX MEMORY: 0.334GB)
  0.000008: postprocess solutions
0.000012: reference resolution 2
0.020125: fragment resolution 2
  0.000180: identify previous emora questions
  0.019930: sal
0.140523: dialogue infer 2
  0.007729: facts graph types
  0.012012: convert facts graph
    0.001513: to digraph
    0.010392: flatten types (332 concepts)
    0.000093: quantities
  0.000024: process dynamic rules
  0.119102: match
    0.119040: match
      0.001813: querygen
      0.040051: creating graph tensor (796 nodes, 2910 edges)
        0.015960: setup
        0.002389: key tensor
        0.004010: target tensor
        0.017088: edge tensor
      0.000085: initializing solutions matrix
      0.076873: loop
      0.000014: postprocessing (MAX MEMORY: 0.385GB)
  0.000819: postprocess solutions
0.021591: apply inferences 2
  0.001021: apply
  0.000439: update types
  0.000088: operate
  0.020024: sal
0.006574: prepare template nlg
0.166518: template infer
  0.007704: facts graph types
  0.012144: convert facts graph
    0.001534: to digraph
    0.010504: flatten types (332 concepts)
    0.000092: quantities
  0.000038: process dynamic rules
  0.144179: match
    0.144109: match
      0.001860: querygen
      0.039423: creating graph tensor (796 nodes, 2910 edges)
        0.016619: setup
        0.002490: key tensor
        0.003946: target tensor
        0.015757: edge tensor
      0.000085: initializing solutions matrix
      0.102494: loop
      0.000015: postprocessing (MAX MEMORY: 0.385GB)
  0.001542: postprocess solutions
0.000238: template fillers
0.000015: response sel
0.000207: response exp
0.000014: response rules
0.038813: response assembler
  0.000016: response assembly
  0.020502: update sal
  0.000853: decay sal
  0.017427: prune
    0.000010: setup
    0.000329: select keep
    0.000075: delete old spans
    0.013206: setup essentials
    0.001776: identify essentials
    0.001859: remove not keep

[1.12 s] I see . I was just thinking , the most fun I had today was taking a walk with my dog . Do you have a pet ?

User: ARG REQUESTS: []
TRUTH REQUESTS: [('emora', 'request_truth', 'wm250', 'wm251')]
CURRENT USER CONCEPTS: {'wm267', 'wm266', 'wm268', 'user', 'predicate'}
FRAGMENT REQUEST MERGES: [('wm266', 'wm250')]
ARG REQUESTS: []
TRUTH REQUESTS: []

Present Options:
	Actually , I got a puppy four months ago . Her name is Nyla and she's adorable . (s: 0.57, pr: 0.10)
	What is your Pet like ? (s: 0.50, pr: 0.50)
	What kind of pet do you have ? (s: 0.65, pr: 0.50)

React Options:
	Oh , I love pets ! (s: 0.60, pr: 0.50)


0.000019: next turn
0.000013: sentence caser
0.107800: elit
0.058913: parse2logic
  0.000350: facts graph types
  0.000749: convert facts graph
    0.000129: to digraph
    0.000586: flatten types (26 concepts)
    0.000021: quantities
  0.000020: process dynamic rules
  0.055233: match
    0.055160: match
      0.000082: querygen
      0.010353: creating graph tensor (30 nodes, 82 edges)
        0.000491: setup
        0.001269: key tensor
        0.000350: target tensor
        0.008198: edge tensor
      0.000071: initializing solutions matrix
      0.044451: loop
      0.000014: postprocessing (MAX MEMORY: 0.001GB)
  0.000444: postprocess solutions
0.000034: multiword mentions
0.000011: ner mentions
0.001483: mention bridge
0.001776: merge bridge
0.023649: knowledge pull
0.003558: reference id
0.083937: reference infer
  0.007765: facts graph types
  0.011946: convert facts graph
    0.001901: to digraph
    0.009917: flatten types (342 concepts)
    0.000110: quantities
  0.003542: process dynamic rules
  0.060066: match
    0.060000: match
      0.004196: querygen
      0.037517: creating graph tensor (739 nodes, 2650 edges)
        0.014619: setup
        0.002244: key tensor
        0.003525: target tensor
        0.016511: edge tensor
      0.000086: initializing solutions matrix
      0.018006: loop
      0.000022: postprocessing (MAX MEMORY: 0.321GB)
  0.000009: postprocess solutions
0.000014: reference resolution
0.030209: fragment resolution
  0.000201: identify previous emora questions
  0.009003: find answer
  0.020987: sal
0.395395: dialogue infer
  0.007596: facts graph types
  0.012164: convert facts graph
    0.001599: to digraph
    0.010456: flatten types (338 concepts)
    0.000095: quantities
  0.000024: process dynamic rules
  0.373154: match
    0.373086: match
      0.001766: querygen
      0.273484: creating graph tensor (767 nodes, 2803 edges)
        0.189519: setup
        0.002529: key tensor
        0.003555: target tensor
        0.077024: edge tensor
      0.000090: initializing solutions matrix
      0.097512: loop
      0.000014: postprocessing (MAX MEMORY: 0.357GB)
  0.001400: postprocess solutions
0.025461: apply inferences
  0.002580: apply
  0.000681: update types
  0.000356: operate
  0.021821: sal
0.005151: reference id 2
0.086072: reference infer 2
  0.007929: facts graph types
  0.011863: convert facts graph
    0.001582: to digraph
    0.010166: flatten types (349 concepts)
    0.000096: quantities
  0.003983: process dynamic rules
  0.061662: match
    0.061594: match
      0.003648: querygen
      0.037438: creating graph tensor (750 nodes, 2678 edges)
        0.014767: setup
        0.002119: key tensor
        0.003537: target tensor
        0.016435: edge tensor
      0.000085: initializing solutions matrix
      0.020223: loop
      0.000023: postprocessing (MAX MEMORY: 0.328GB)
  0.000008: postprocess solutions
0.000012: reference resolution 2
0.021829: fragment resolution 2
  0.000209: identify previous emora questions
  0.021604: sal
0.145792: dialogue infer 2
  0.007951: facts graph types
  0.012496: convert facts graph
    0.001624: to digraph
    0.010759: flatten types (349 concepts)
    0.000098: quantities
  0.000024: process dynamic rules
  0.122845: match
    0.122780: match
      0.001773: querygen
      0.038861: creating graph tensor (795 nodes, 2900 edges)
        0.015842: setup
        0.002579: key tensor
        0.003643: target tensor
        0.016195: edge tensor
      0.000086: initializing solutions matrix
      0.081833: loop
      0.000015: postprocessing (MAX MEMORY: 0.383GB)
  0.001546: postprocess solutions
0.024277: apply inferences 2
  0.001453: apply
  0.000724: update types
  0.000145: operate
  0.021936: sal
0.007275: prepare template nlg
0.174694: template infer
  0.007917: facts graph types
  0.012658: convert facts graph
    0.001647: to digraph
    0.010896: flatten types (350 concepts)
    0.000100: quantities
  0.000023: process dynamic rules
  0.151206: match
    0.151137: match
      0.001818: querygen
      0.039626: creating graph tensor (799 nodes, 2917 edges)
        0.016043: setup
        0.002592: key tensor
        0.003730: target tensor
        0.016647: edge tensor
      0.000101: initializing solutions matrix
      0.109361: loop
      0.000014: postprocessing (MAX MEMORY: 0.387GB)
  0.001899: postprocess solutions
0.001397: template fillers
0.000016: response sel
0.000097: response exp
0.000014: response rules
0.039463: response assembler
  0.000014: response assembly
  0.022031: update sal
  0.000885: decay sal
  0.016518: prune
    0.000014: setup
    0.000342: select keep
    0.000062: delete old spans
    0.012451: setup essentials
    0.002317: identify essentials
    0.000971: remove not keep

[1.24 s] Oh , I love pets ! What kind of pet do you have ?

User: ARG REQUESTS: [('emora', 'request', 'wm253', 'wm290')]
TRUTH REQUESTS: []
CURRENT USER CONCEPTS: {'wm310', 'wm297', 'wm298', 'wm305', 'horse', 'wm304', 'user', 'now', 'prp'}
FRAGMENT REQUEST MERGES: []
ARG REQUESTS: [('emora', 'request', 'wm253', 'wm290')]
TRUTH REQUESTS: []
CURRENT USER CONCEPTS: {'wm310', 'wm297', 'wm298', 'wm305', 'horse', 'wm304', 'user', 'now', 'prp'}
FRAGMENT REQUEST MERGES: []

Present Options:
	Actually , I got a puppy four months ago . Her name is Nyla and she's adorable . (s: 0.53, pr: 0.10)
	What is your Pet like ? (s: 0.46, pr: 0.50)


0.000019: next turn
0.000013: sentence caser
0.110284: elit
0.237822: parse2logic
  0.001388: facts graph types
  0.002316: convert facts graph
    0.000473: to digraph
    0.001795: flatten types (91 concepts)
    0.000036: quantities
  0.000021: process dynamic rules
  0.225711: match
    0.225638: match
      0.000244: querygen
      0.032379: creating graph tensor (119 nodes, 392 edges)
        0.002033: setup
        0.022287: key tensor
        0.000925: target tensor
        0.007024: edge tensor
      0.000079: initializing solutions matrix
      0.192660: loop
      0.000015: postprocessing (MAX MEMORY: 0.008GB)
  0.002475: postprocess solutions
0.000042: multiword mentions
0.000013: ner mentions
0.002750: mention bridge
0.003144: merge bridge
0.017850: knowledge pull
0.005245: reference id
0.093961: reference infer
  0.008443: facts graph types
  0.013026: convert facts graph
    0.001755: to digraph
    0.011153: flatten types (361 concepts)
    0.000099: quantities
  0.004028: process dynamic rules
  0.067785: match
    0.067715: match
      0.003738: querygen
      0.039623: creating graph tensor (794 nodes, 2845 edges)
        0.016183: setup
        0.002380: key tensor
        0.003708: target tensor
        0.016731: edge tensor
      0.000085: initializing solutions matrix
      0.024066: loop
      0.000023: postprocessing (MAX MEMORY: 0.370GB)
  0.000008: postprocess solutions
0.000013: reference resolution
0.031438: fragment resolution
  0.000222: identify previous emora questions
  0.008873: find answer
  0.022326: sal
0.147723: dialogue infer
  0.008507: facts graph types
  0.013126: convert facts graph
    0.001673: to digraph
    0.011339: flatten types (361 concepts)
    0.000099: quantities
  0.000025: process dynamic rules
  0.123734: match
    0.123666: match
      0.001915: querygen
      0.042002: creating graph tensor (842 nodes, 3078 edges)
        0.017087: setup
        0.002532: key tensor
        0.003941: target tensor
        0.017801: edge tensor
      0.000085: initializing solutions matrix
      0.079444: loop
      0.000014: postprocessing (MAX MEMORY: 0.431GB)
  0.001356: postprocess solutions
0.024389: apply inferences
  0.001387: apply
  0.000541: update types
  0.000112: operate
  0.022329: sal
0.005202: reference id 2
0.092797: reference infer 2
  0.008517: facts graph types
  0.012383: convert facts graph
    0.001980: to digraph
    0.010286: flatten types (361 concepts)
    0.000099: quantities
  0.004016: process dynamic rules
  0.067189: match
    0.067123: match
      0.004066: querygen
      0.038773: creating graph tensor (794 nodes, 2845 edges)
        0.015472: setup
        0.002371: key tensor
        0.003624: target tensor
        0.016693: edge tensor
      0.000084: initializing solutions matrix
      0.023998: loop
      0.000024: postprocessing (MAX MEMORY: 0.370GB)
  0.000008: postprocess solutions
0.000012: reference resolution 2
0.031395: fragment resolution 2
  0.000216: identify previous emora questions
  0.008866: find answer
  0.022294: sal
0.146487: dialogue infer 2
  0.008497: facts graph types
  0.012810: convert facts graph
    0.001755: to digraph
    0.010926: flatten types (361 concepts)
    0.000115: quantities
  0.000024: process dynamic rules
  0.122858: match
    0.122791: match
      0.002255: querygen
      0.040957: creating graph tensor (842 nodes, 3078 edges)
        0.016705: setup
        0.002553: key tensor
        0.004114: target tensor
        0.016939: edge tensor
      0.000085: initializing solutions matrix
      0.079277: loop
      0.000014: postprocessing (MAX MEMORY: 0.431GB)
  0.001376: postprocess solutions
0.024504: apply inferences 2
  0.001390: apply
  0.000543: update types
  0.000106: operate
  0.022447: sal
0.007219: prepare template nlg
0.175534: template infer
  0.008464: facts graph types
  0.013206: convert facts graph
    0.001676: to digraph
    0.011416: flatten types (361 concepts)
    0.000100: quantities
  0.000023: process dynamic rules
  0.150841: match
    0.150771: match
      0.001929: querygen
      0.041931: creating graph tensor (842 nodes, 3078 edges)
        0.016979: setup
        0.002572: key tensor
        0.003937: target tensor
        0.017788: edge tensor
      0.000086: initializing solutions matrix
      0.106588: loop
      0.000015: postprocessing (MAX MEMORY: 0.431GB)
  0.001895: postprocess solutions
0.001015: template fillers
0.000015: response sel
0.000121: response exp
0.000014: response rules
0.041466: response assembler
  0.000015: response assembly
  0.022787: update sal
  0.000913: decay sal
  0.017735: prune
    0.000010: setup
    0.000354: select keep
    0.000082: delete old spans
    0.013767: setup essentials
    0.002545: identify essentials
    0.000792: remove not keep

[1.20 s] I see . What is your Pet like ?

User: ARG REQUESTS: [('emora', 'request', 'wm285', 'wm286')]
TRUTH REQUESTS: []
CURRENT USER CONCEPTS: {'wm344', 'emora', 'wm338', 'wm342', 'wm372', 'wm356', 'wm353', 'wm357', 'wm366', 'wm343', 'dog', 'object', 'wm365', 'wm367', 'wm362', 'wm380', 'wm368', 'wm374', 'like', 'user', 'wm339', 'wm379', 'wm378', 'wm361', 'wm438', 'wm437', 'wm337', 'be', 'now', 'unknown_other', 'unknown_adj'}
FRAGMENT REQUEST MERGES: []
ARG REQUESTS: [('emora', 'request', 'wm285', 'wm286')]
TRUTH REQUESTS: []
CURRENT USER CONCEPTS: {'wm344', 'emora', 'wm338', 'wm342', 'wm372', 'wm356', 'wm353', 'wm357', 'wm366', 'wm343', 'dog', 'object', 'wm365', 'wm367', 'wm362', 'wm380', 'wm368', 'wm374', 'like', 'user', 'wm339', 'wm379', 'wm378', 'wm361', 'wm438', 'wm437', 'wm337', 'be', 'now', 'unknown_other', 'unknown_adj'}
FRAGMENT REQUEST MERGES: []

React + Present Options:
	You know, I can't think of the answer to that right now . (s: 0.60, pr: 0.10)
	You know, I can't think of the answer to that right now . (s: 0.60, pr: 0.10)


Present Options:
	Actually , I got a puppy four months ago . Her name is Nyla and she's adorable . (s: 0.51, pr: 0.10)
	Which animal's your favorite? (s: 0.29, pr: 0.10)
	What do you like to do with your Pet ? (s: 0.40, pr: 0.50)

React Options:
	Every pet has its quirks , but I think yours sounds sweet . (s: 0.64, pr: 0.50)


0.000020: next turn
0.000014: sentence caser
0.110433: elit
0.325006: parse2logic
  0.002550: facts graph types
  0.004075: convert facts graph
    0.000788: to digraph
    0.003222: flatten types (160 concepts)
    0.000050: quantities
  0.000022: process dynamic rules
  0.301072: match
    0.300977: match
      0.000443: querygen
      0.043261: creating graph tensor (205 nodes, 686 edges)
        0.003833: setup
        0.001500: key tensor
        0.001098: target tensor
        0.036571: edge tensor
      0.000084: initializing solutions matrix
      0.256983: loop
      0.000015: postprocessing (MAX MEMORY: 0.023GB)
  0.004418: postprocess solutions
0.000055: multiword mentions
0.000012: ner mentions
0.007615: mention bridge
0.012281: merge bridge
0.020926: knowledge pull
0.057046: reference id
0.293998: reference infer
  0.011881: facts graph types
  0.016660: convert facts graph
    0.002718: to digraph
    0.013804: flatten types (452 concepts)
    0.000117: quantities
  0.008427: process dynamic rules
  0.255753: match
    0.255677: match
      0.005495: querygen
      0.224768: creating graph tensor (1009 nodes, 3571 edges)
        0.199112: setup
        0.003356: key tensor
        0.005176: target tensor
        0.016177: edge tensor
      0.000090: initializing solutions matrix
      0.025101: loop
      0.000028: postprocessing (MAX MEMORY: 0.585GB)
  0.000009: postprocess solutions
0.000014: reference resolution
0.040876: fragment resolution
  0.000247: identify previous emora questions
  0.012652: find answer
  0.027957: sal
0.167869: dialogue infer
  0.011987: facts graph types
  0.016795: convert facts graph
    0.002199: to digraph
    0.014462: flatten types (452 concepts)
    0.000119: quantities
  0.000027: process dynamic rules
  0.136043: match
    0.135971: match
      0.002528: querygen
      0.050696: creating graph tensor (1073 nodes, 3922 edges)
        0.021868: setup
        0.003337: key tensor
        0.005622: target tensor
        0.019006: edge tensor
      0.000086: initializing solutions matrix
      0.082433: loop
      0.000015: postprocessing (MAX MEMORY: 0.698GB)
  0.001676: postprocess solutions
0.034321: apply inferences
  0.003531: apply
  0.000839: update types
  0.000115: operate
  0.029815: sal
0.012141: reference id 2
0.130944: reference infer 2
  0.012807: facts graph types
  0.015785: convert facts graph
    0.001999: to digraph
    0.013644: flatten types (471 concepts)
    0.000120: quantities
  0.010062: process dynamic rules
  0.091227: match
    0.091155: match
      0.005904: querygen
      0.049647: creating graph tensor (1036 nodes, 3665 edges)
        0.020053: setup
        0.003087: key tensor
        0.005213: target tensor
        0.020483: edge tensor
      0.000086: initializing solutions matrix
      0.035297: loop
      0.000029: postprocessing (MAX MEMORY: 0.616GB)
  0.000008: postprocess solutions
0.000013: reference resolution 2
0.042748: fragment resolution 2
  0.000258: identify previous emora questions
  0.013358: find answer
  0.029114: sal
0.187303: dialogue infer 2
  0.012807: facts graph types
  0.017262: convert facts graph
    0.002167: to digraph
    0.014960: flatten types (471 concepts)
    0.000122: quantities
  0.000026: process dynamic rules
  0.154125: match
    0.154056: match
      0.003082: querygen
      0.059951: creating graph tensor (1132 nodes, 4146 edges)
        0.022805: setup
        0.003532: key tensor
        0.005977: target tensor
        0.026679: edge tensor
      0.000086: initializing solutions matrix
      0.090704: loop
      0.000014: postprocessing (MAX MEMORY: 0.780GB)
  0.001681: postprocess solutions
0.031886: apply inferences 2
  0.001887: apply
  0.000565: update types
  0.000122: operate
  0.029293: sal
0.007913: prepare template nlg
0.213897: template infer
  0.012833: facts graph types
  0.017586: convert facts graph
    0.002152: to digraph
    0.015298: flatten types (471 concepts)
    0.000122: quantities
  0.000025: process dynamic rules
  0.179576: match
    0.179507: match
      0.002661: querygen
      0.065536: creating graph tensor (1132 nodes, 4146 edges)
        0.023615: setup
        0.003583: key tensor
        0.005565: target tensor
        0.031804: edge tensor
      0.000088: initializing solutions matrix
      0.110983: loop
      0.000015: postprocessing (MAX MEMORY: 0.780GB)
  0.002477: postprocess solutions
0.001845: template fillers
0.000015: response sel
0.000168: response exp
0.000014: response rules
0.059462: response assembler
  0.000015: response assembly
  0.029512: update sal
  0.001206: decay sal
  0.028714: prune
    0.000011: setup
    0.000470: select keep
    0.000082: delete old spans
    0.021498: setup essentials
    0.005002: identify essentials
    0.001420: remove not keep

[1.76 s] Every pet has its quirks , but I think yours sounds sweet . What do you like to do with your Pet ?

User: ARG REQUESTS: [('emora', 'request', 'wm461', 'wm463')]
TRUTH REQUESTS: []
CURRENT USER CONCEPTS: {'wm500', 'wm549', 'wm524', 'wm518', 'unknown_noun', 'wm489', 'wm508', 'dog', 'living_thing', 'wm536', 'wm529', 'wm484', 'wm502', 'wm474', 'wm499', 'wm523', 'wm506', 'wm544', 'wm483', 'wm501', 'wm513', 'wm539', 'wm545', 'wm514', 'wm476', 'wm507', 'wm528', 'user', 'wm546', 'prp', 'unknown_verb', 'wm542', 'house', 'wm495', 'wm494', 'wm493', 'wm517', 'wm481', 'wm521', 'wm512', 'wm527', 'wm496', 'wm532', 'now', 'unknown_other', 'wm472'}
FRAGMENT REQUEST MERGES: []
ARG REQUESTS: [('emora', 'request', 'wm461', 'wm463')]
TRUTH REQUESTS: []
CURRENT USER CONCEPTS: {'wm500', 'wm549', 'wm524', 'wm518', 'unknown_noun', 'wm489', 'wm508', 'dog', 'living_thing', 'wm536', 'wm529', 'wm484', 'wm502', 'wm474', 'wm499', 'wm523', 'wm506', 'wm544', 'wm483', 'wm501', 'wm513', 'wm539', 'wm545', 'wm514', 'wm476', 'wm507', 'wm528', 'user', 'wm546', 'prp', 'unknown_verb', 'wm542', 'house', 'wm495', 'wm494', 'wm493', 'wm517', 'wm481', 'wm521', 'wm512', 'wm527', 'wm496', 'wm532', 'now', 'unknown_other', 'wm472'}
FRAGMENT REQUEST MERGES: []

Present Options:
	Actually , I got a puppy four months ago . Her name is Nyla and she's adorable . (s: 0.19, pr: 0.10)
	Actually , I got a puppy four months ago . Her name is Nyla and she's adorable . (s: 0.49, pr: 0.10)
	Which animal's your favorite? (s: 0.27, pr: 0.10)


0.000021: next turn
0.000016: sentence caser
0.116021: elit
0.287985: parse2logic
  0.004475: facts graph types
  0.006575: convert facts graph
    0.001305: to digraph
    0.005185: flatten types (253 concepts)
    0.000069: quantities
  0.000021: process dynamic rules
  0.252326: match
    0.252251: match
      0.000698: querygen
      0.020265: creating graph tensor (331 nodes, 1151 edges)
        0.006803: setup
        0.001605: key tensor
        0.001629: target tensor
        0.009914: edge tensor
      0.000085: initializing solutions matrix
      0.230917: loop
      0.000015: postprocessing (MAX MEMORY: 0.070GB)
  0.005172: postprocess solutions
0.000065: multiword mentions
0.000012: ner mentions
0.011182: mention bridge
0.028563: merge bridge
0.027106: knowledge pull
0.027049: reference id
0.167514: reference infer
  0.018450: facts graph types
  0.021065: convert facts graph
    0.002628: to digraph
    0.018261: flatten types (607 concepts)
    0.000151: quantities
  0.013610: process dynamic rules
  0.112419: match
    0.112334: match
      0.007906: querygen
      0.066897: creating graph tensor (1339 nodes, 4683 edges)
        0.028241: setup
        0.004157: key tensor
        0.006381: target tensor
        0.026751: edge tensor
      0.000087: initializing solutions matrix
      0.037219: loop
      0.000033: postprocessing (MAX MEMORY: 1.007GB)
  0.000215: postprocess solutions
0.000658: reference resolution
0.056384: fragment resolution
  0.000218: identify previous emora questions
  0.019034: find answer
  0.037112: sal
0.398760: dialogue infer
  0.018540: facts graph types
  0.022606: convert facts graph
    0.002992: to digraph
    0.019433: flatten types (606 concepts)
    0.000167: quantities
  0.000025: process dynamic rules
  0.353411: match
    0.353334: match
      0.003828: querygen
      0.260676: creating graph tensor (1457 nodes, 5330 edges)
        0.216522: setup
        0.005141: key tensor
        0.006619: target tensor
        0.030850: edge tensor
      0.000090: initializing solutions matrix
      0.088506: loop
      0.000014: postprocessing (MAX MEMORY: 1.287GB)
  0.001946: postprocess solutions
0.040893: apply inferences
  0.002424: apply
  0.000611: update types
  0.000145: operate
  0.037664: sal
0.015188: reference id 2
0.164012: reference infer 2
  0.019266: facts graph types
  0.021023: convert facts graph
    0.002537: to digraph
    0.018316: flatten types (608 concepts)
    0.000148: quantities
  0.012431: process dynamic rules
  0.109728: match
    0.109648: match
      0.007626: querygen
      0.064348: creating graph tensor (1345 nodes, 4717 edges)
        0.027256: setup
        0.004414: key tensor
        0.005644: target tensor
        0.025813: edge tensor
      0.000086: initializing solutions matrix
      0.037338: loop
      0.000031: postprocessing (MAX MEMORY: 1.021GB)
  0.000008: postprocess solutions
0.000014: reference resolution 2
0.056357: fragment resolution 2
  0.000271: identify previous emora questions
  0.019168: find answer
  0.036899: sal
0.207294: dialogue infer 2
  0.018577: facts graph types
  0.022468: convert facts graph
    0.002877: to digraph
    0.019424: flatten types (608 concepts)
    0.000154: quantities
  0.000025: process dynamic rules
  0.162326: match
    0.162252: match
      0.004150: querygen
      0.075407: creating graph tensor (1464 nodes, 5358 edges)
        0.030691: setup
        0.004719: key tensor
        0.006698: target tensor
        0.031928: edge tensor
      0.000086: initializing solutions matrix
      0.082385: loop
      0.000014: postprocessing (MAX MEMORY: 1.301GB)
  0.001948: postprocess solutions
0.039700: apply inferences 2
  0.002012: apply
  0.000628: update types
  0.000149: operate
  0.036893: sal
0.008768: prepare template nlg
0.227839: template infer
  0.018555: facts graph types
  0.022371: convert facts graph
    0.002760: to digraph
    0.019441: flatten types (608 concepts)
    0.000155: quantities
  0.000026: process dynamic rules
  0.182487: match
    0.182413: match
      0.004090: querygen
      0.069045: creating graph tensor (1464 nodes, 5358 edges)
        0.030935: setup
        0.004697: key tensor
        0.006400: target tensor
        0.025617: edge tensor
      0.000087: initializing solutions matrix
      0.108961: loop
      0.000014: postprocessing (MAX MEMORY: 1.301GB)
  0.002438: postprocess solutions
0.001757: template fillers
0.000015: response sel
0.000116: response exp
0.000013: response rules
0.079781: response assembler
  0.000015: response assembly
  0.037023: update sal
  0.001548: decay sal
  0.041181: prune
    0.000011: setup
    0.000578: select keep
    0.000093: delete old spans
    0.031756: setup essentials
    0.005928: identify essentials
    0.002524: remove not keep

[1.96 s] Yeah . Actually , I got a puppy four months ago . Her name is Nyla and she's adorable .

User: ARG REQUESTS: []
TRUTH REQUESTS: []
ARG REQUESTS: []
TRUTH REQUESTS: []

React + Present Options:
	You know, I can't think of the answer to that right now . (s: 0.60, pr: 0.10)


Present Options:
	I love Nyla , but she can be difficult sometimes . I am trying to train her right now to stop chewing on the furniture . What tips do you have for teaching her ? (s: 0.45, pr: 0.50)
	Which animal's your favorite? (s: 0.20, pr: 0.10)


0.000020: next turn
0.000014: sentence caser
0.111030: elit
0.415725: parse2logic
  0.002372: facts graph types
  0.003762: convert facts graph
    0.000707: to digraph
    0.002994: flatten types (144 concepts)
    0.000047: quantities
  0.000021: process dynamic rules
  0.396205: match
    0.396128: match
      0.000416: querygen
      0.093925: creating graph tensor (193 nodes, 655 edges)
        0.003550: setup
        0.072039: key tensor
        0.002002: target tensor
        0.016164: edge tensor
      0.000083: initializing solutions matrix
      0.301379: loop
      0.000015: postprocessing (MAX MEMORY: 0.021GB)
  0.002984: postprocess solutions
0.000053: multiword mentions
0.000013: ner mentions
0.004579: mention bridge
0.008529: merge bridge
0.027206: knowledge pull
0.017226: reference id
0.159449: reference infer
  0.019237: facts graph types
  0.019959: convert facts graph
    0.002610: to digraph
    0.017176: flatten types (609 concepts)
    0.000149: quantities
  0.013704: process dynamic rules
  0.105121: match
    0.105047: match
      0.007645: querygen
      0.060258: creating graph tensor (1268 nodes, 4444 edges)
        0.025647: setup
        0.003785: key tensor
        0.005523: target tensor
        0.024125: edge tensor
      0.000086: initializing solutions matrix
      0.036834: loop
      0.000032: postprocessing (MAX MEMORY: 0.907GB)
  0.000008: postprocess solutions
0.000014: reference resolution
0.037925: fragment resolution
  0.000271: identify previous emora questions
  0.037637: sal
0.446619: dialogue infer
  0.018554: facts graph types
  0.022029: convert facts graph
    0.002832: to digraph
    0.019031: flatten types (609 concepts)
    0.000152: quantities
  0.000025: process dynamic rules
  0.401884: match
    0.401811: match
      0.003873: querygen
      0.299525: creating graph tensor (1407 nodes, 5143 edges)
        0.029574: setup
        0.004441: key tensor
        0.192097: target tensor
        0.071549: edge tensor
      0.000093: initializing solutions matrix
      0.098079: loop
      0.000014: postprocessing (MAX MEMORY: 1.199GB)
  0.002037: postprocess solutions
0.042746: apply inferences
  0.002397: apply
  0.001097: update types
  0.000157: operate
  0.039074: sal
0.016124: reference id 2
0.161523: reference infer 2
  0.018990: facts graph types
  0.020017: convert facts graph
    0.002550: to digraph
    0.017292: flatten types (616 concepts)
    0.000150: quantities
  0.013894: process dynamic rules
  0.107121: match
    0.107042: match
      0.007785: querygen
      0.062697: creating graph tensor (1284 nodes, 4506 edges)
        0.026529: setup
        0.003930: key tensor
        0.006006: target tensor
        0.025113: edge tensor
      0.000087: initializing solutions matrix
      0.036239: loop
      0.000031: postprocessing (MAX MEMORY: 0.932GB)
  0.000008: postprocess solutions
0.000014: reference resolution 2
0.038456: fragment resolution 2
  0.000283: identify previous emora questions
  0.038157: sal
0.205276: dialogue infer 2
  0.018753: facts graph types
  0.022405: convert facts graph
    0.003085: to digraph
    0.019154: flatten types (616 concepts)
    0.000152: quantities
  0.000026: process dynamic rules
  0.160218: match
    0.160144: match
      0.003475: querygen
      0.072386: creating graph tensor (1423 nodes, 5205 edges)
        0.030411: setup
        0.005047: key tensor
        0.006274: target tensor
        0.029341: edge tensor
      0.000089: initializing solutions matrix
      0.083967: loop
      0.000014: postprocessing (MAX MEMORY: 1.228GB)
  0.002023: postprocess solutions
0.041130: apply inferences 2
  0.002094: apply
  0.000628: update types
  0.000173: operate
  0.038217: sal
0.009000: prepare template nlg
0.234714: template infer
  0.018748: facts graph types
  0.022566: convert facts graph
    0.003100: to digraph
    0.019299: flatten types (616 concepts)
    0.000151: quantities
  0.000025: process dynamic rules
  0.188788: match
    0.188711: match
      0.003577: querygen
      0.071316: creating graph tensor (1423 nodes, 5205 edges)
        0.030254: setup
        0.005013: key tensor
        0.006407: target tensor
        0.028334: edge tensor
      0.000086: initializing solutions matrix
      0.113488: loop
      0.000014: postprocessing (MAX MEMORY: 1.228GB)
  0.002579: postprocess solutions
0.001823: template fillers
0.000015: response sel
0.000084: response exp
0.000012: response rules
0.079889: response assembler
  0.000015: response assembly
  0.038571: update sal
  0.001567: decay sal
  0.039721: prune
    0.000011: setup
    0.000593: select keep
    0.000102: delete old spans
    0.030866: setup essentials
    0.006714: identify essentials
    0.001133: remove not keep

[2.06 s] I see . I love Nyla , but she can be difficult sometimes . I am trying to train her right now to stop chewing on the furniture . What tips do you have for teaching her ?

User: ARG REQUESTS: []
TRUTH REQUESTS: []
ARG REQUESTS: []
TRUTH REQUESTS: []

Present Options:
	Which animal's your favorite? (s: 0.14, pr: 0.10)

React Options:
	Thanks , I will keep that in mind . (s: 0.80, pr: 0.50)


0.000020: next turn
0.000015: sentence caser
0.114177: elit
0.370031: parse2logic
  0.005249: facts graph types
  0.007578: convert facts graph
    0.001515: to digraph
    0.005975: flatten types (291 concepts)
    0.000075: quantities
  0.000021: process dynamic rules
  0.330787: match
    0.330709: match
      0.000845: querygen
      0.020564: creating graph tensor (381 nodes, 1344 edges)
        0.008116: setup
        0.001729: key tensor
        0.001862: target tensor
        0.008535: edge tensor
      0.000097: initializing solutions matrix
      0.308994: loop
      0.000014: postprocessing (MAX MEMORY: 0.256GB)
  0.005741: postprocess solutions
0.000060: multiword mentions
0.000012: ner mentions
0.007878: mention bridge
0.019623: merge bridge
0.031904: knowledge pull
0.017199: reference id
0.183332: reference infer
  0.023375: facts graph types
  0.024367: convert facts graph
    0.003109: to digraph
    0.021063: flatten types (711 concepts)
    0.000170: quantities
  0.013093: process dynamic rules
  0.120633: match
    0.120555: match
      0.009238: querygen
      0.073727: creating graph tensor (1513 nodes, 5347 edges)
        0.030497: setup
        0.004783: key tensor
        0.006925: target tensor
        0.030162: edge tensor
      0.000087: initializing solutions matrix
      0.037277: loop
      0.000033: postprocessing (MAX MEMORY: 1.309GB)
  0.000008: postprocess solutions
0.000014: reference resolution
0.044084: fragment resolution
  0.000313: identify previous emora questions
  0.043755: sal
0.627464: dialogue infer
  0.023472: facts graph types
  0.025911: convert facts graph
    0.003157: to digraph
    0.022566: flatten types (711 concepts)
    0.000175: quantities
  0.000027: process dynamic rules
  0.573410: match
    0.573334: match
      0.004093: querygen
      0.396484: creating graph tensor (1652 nodes, 6046 edges)
        0.035292: setup
        0.005493: key tensor
        0.195174: target tensor
        0.158423: edge tensor
      0.000097: initializing solutions matrix
      0.172365: loop
      0.000017: postprocessing (MAX MEMORY: 1.657GB)
  0.002054: postprocess solutions
0.047821: apply inferences
  0.002143: apply
  0.000690: update types
  0.000175: operate
  0.044792: sal
0.016544: reference id 2
0.181777: reference infer 2
  0.023712: facts graph types
  0.023995: convert facts graph
    0.003000: to digraph
    0.020800: flatten types (711 concepts)
    0.000171: quantities
  0.013196: process dynamic rules
  0.118807: match
    0.118726: match
      0.009216: querygen
      0.071799: creating graph tensor (1513 nodes, 5347 edges)
        0.030458: setup
        0.004774: key tensor
        0.006743: target tensor
        0.028356: edge tensor
      0.000088: initializing solutions matrix
      0.037370: loop
      0.000034: postprocessing (MAX MEMORY: 1.309GB)
  0.000008: postprocess solutions
0.000014: reference resolution 2
0.044789: fragment resolution 2
  0.000312: identify previous emora questions
  0.044459: sal
0.436934: dialogue infer 2
  0.023616: facts graph types
  0.026203: convert facts graph
    0.003226: to digraph
    0.022792: flatten types (711 concepts)
    0.000170: quantities
  0.000026: process dynamic rules
  0.382543: match
    0.382460: match
      0.004317: querygen
      0.205736: creating graph tensor (1652 nodes, 6046 edges)
        0.034827: setup
        0.005892: key tensor
        0.007635: target tensor
        0.155308: edge tensor
      0.000095: initializing solutions matrix
      0.172021: loop
      0.000016: postprocessing (MAX MEMORY: 1.657GB)
  0.002059: postprocess solutions
0.047937: apply inferences 2
  0.002132: apply
  0.000706: update types
  0.000177: operate
  0.044902: sal
0.009753: prepare template nlg
0.254143: template infer
  0.023724: facts graph types
  0.026420: convert facts graph
    0.003227: to digraph
    0.023008: flatten types (711 concepts)
    0.000169: quantities
  0.000026: process dynamic rules
  0.199016: match
    0.198935: match
      0.004122: querygen
      0.083150: creating graph tensor (1652 nodes, 6046 edges)
        0.035957: setup
        0.005470: key tensor
        0.007256: target tensor
        0.032909: edge tensor
      0.000103: initializing solutions matrix
      0.111319: loop
      0.000014: postprocessing (MAX MEMORY: 1.657GB)
  0.002594: postprocess solutions
0.001935: template fillers
0.000016: response sel
0.000142: response exp
0.000014: response rules
0.095780: response assembler
  0.000015: response assembly
  0.043934: update sal
  0.001835: decay sal
  0.049982: prune
    0.000011: setup
    0.000674: select keep
    0.000111: delete old spans
    0.039243: setup essentials
    0.007589: identify essentials
    0.002015: remove not keep

[2.55 s] Thanks , I will keep that in mind . Which animal's your favorite?

User: ARG REQUESTS: [('emora', 'request', 'wm450', 'wm456')]
TRUTH REQUESTS: []
CURRENT USER CONCEPTS: {'wm889', 'emora', 'what', 'wm883', 'lemur', 'wm864', 'wm879', 'favorite', 'wm871', 'animal', 'user', 'wm875', 'wm858', 'wm870', 'wm888', 'wm874', 'wm857', 'be', 'now', 'wm860'}
FRAGMENT REQUEST MERGES: [('wm860', 'wm450')]
ARG REQUESTS: []
TRUTH REQUESTS: []

React + Present Options:
	Oh, that's neat. The Lemur is a cool one. My favorite is definitely the cheetah. I watched a documentary on them once years ago, and I've loved them ever since. Their stripes are so interesting, and they can run super fast. (s: 0.17, pr: 0.50)


0.000029: next turn
0.000015: sentence caser
0.112711: elit
0.279574: parse2logic
  0.002853: facts graph types
  0.004568: convert facts graph
    0.000921: to digraph
    0.003580: flatten types (174 concepts)
    0.000053: quantities
  0.000021: process dynamic rules
  0.253010: match
    0.252931: match
      0.000494: querygen
      0.025455: creating graph tensor (230 nodes, 794 edges)
        0.004261: setup
        0.008905: key tensor
        0.001780: target tensor
        0.010316: edge tensor
      0.000082: initializing solutions matrix
      0.226706: loop
      0.000013: postprocessing (MAX MEMORY: 0.030GB)
  0.005169: postprocess solutions
0.000057: multiword mentions
0.000012: ner mentions
0.005884: mention bridge
0.027517: merge bridge
0.032612: knowledge pull
0.037481: reference id
0.189876: reference infer
  0.025043: facts graph types
  0.025207: convert facts graph
    0.003356: to digraph
    0.021651: flatten types (747 concepts)
    0.000177: quantities
  0.013763: process dynamic rules
  0.123910: match
    0.123817: match
      0.009613: querygen
      0.076281: creating graph tensor (1561 nodes, 5492 edges)
        0.031704: setup
        0.004877: key tensor
        0.006916: target tensor
        0.031226: edge tensor
      0.000089: initializing solutions matrix
      0.037606: loop
      0.000033: postprocessing (MAX MEMORY: 1.382GB)
  0.000008: postprocess solutions
0.000014: reference resolution
0.073061: fragment resolution
  0.000325: identify previous emora questions
  0.026915: find answer
  0.045800: sal
0.429738: dialogue infer
  0.025152: facts graph types
  0.026824: convert facts graph
    0.003505: to digraph
    0.023126: flatten types (746 concepts)
    0.000178: quantities
  0.000026: process dynamic rules
  0.372872: match
    0.372783: match
      0.188003: querygen
      0.092806: creating graph tensor (1710 nodes, 6263 edges)
        0.037104: setup
        0.005921: key tensor
        0.007625: target tensor
        0.040406: edge tensor
      0.000089: initializing solutions matrix
      0.091646: loop
      0.000014: postprocessing (MAX MEMORY: 1.777GB)
  0.002300: postprocess solutions
0.053435: apply inferences
  0.003055: apply
  0.001422: update types
  0.000172: operate
  0.048731: sal
0.017381: reference id 2
0.184507: reference infer 2
  0.026228: facts graph types
  0.026108: convert facts graph
    0.004020: to digraph
    0.021882: flatten types (763 concepts)
    0.000181: quantities
  0.013894: process dynamic rules
  0.116055: match
    0.115971: match
      0.009135: querygen
      0.079353: creating graph tensor (1625 nodes, 5748 edges)
        0.034739: setup
        0.005304: key tensor
        0.006928: target tensor
        0.030692: edge tensor
      0.000088: initializing solutions matrix
      0.027170: loop
      0.000033: postprocessing (MAX MEMORY: 1.512GB)
  0.000008: postprocess solutions
0.000013: reference resolution 2
0.047909: fragment resolution 2
  0.000352: identify previous emora questions
  0.047541: sal
0.245601: dialogue infer 2
  0.026237: facts graph types
  0.027727: convert facts graph
    0.003438: to digraph
    0.024091: flatten types (763 concepts)
    0.000184: quantities
  0.000027: process dynamic rules
  0.186728: match
    0.186648: match
      0.004930: querygen
      0.090225: creating graph tensor (1760 nodes, 6451 edges)
        0.036870: setup
        0.005956: key tensor
        0.007683: target tensor
        0.037829: edge tensor
      0.000090: initializing solutions matrix
      0.091175: loop
      0.000013: postprocessing (MAX MEMORY: 1.884GB)
  0.002285: postprocess solutions
0.051435: apply inferences 2
  0.002587: apply
  0.000739: update types
  0.000203: operate
  0.047886: sal
0.010164: prepare template nlg
0.276953: template infer
  0.026182: facts graph types
  0.028053: convert facts graph
    0.003436: to digraph
    0.024423: flatten types (763 concepts)
    0.000179: quantities
  0.000026: process dynamic rules
  0.217389: match
    0.217310: match
      0.004375: querygen
      0.091434: creating graph tensor (1760 nodes, 6451 edges)
        0.037196: setup
        0.006491: key tensor
        0.007680: target tensor
        0.038280: edge tensor
      0.000089: initializing solutions matrix
      0.121176: loop
      0.000014: postprocessing (MAX MEMORY: 1.884GB)
  0.002857: postprocess solutions
0.002896: template fillers
0.000016: response sel
0.000223: response exp
0.000014: response rules
0.105748: response assembler
  0.000015: response assembly
  0.047626: update sal
  0.001946: decay sal
  0.056144: prune
    0.000012: setup
    0.000761: select keep
    0.000109: delete old spans
    0.044099: setup essentials
    0.008025: identify essentials
    0.002748: remove not keep

[2.19 s] Oh, that's neat. The Lemur is a cool one. My favorite is definitely the cheetah. I watched a documentary on them once years ago, and I've loved them ever since. Their stripes are so interesting, and they can run super fast.

User: ARG REQUESTS: []
TRUTH REQUESTS: []
ARG REQUESTS: []
TRUTH REQUESTS: []

React + Present Options:
	You know, I can't think of the answer to that right now . (s: 0.60, pr: 0.10)
	Considering you like animals, I was wondering, do you like the zoo? There are plenty of different animals to see there. (s: 0.22, pr: 0.50)


0.000020: next turn
0.000014: sentence caser
0.111192: elit
0.280189: parse2logic
  0.003415: facts graph types
  0.005285: convert facts graph
    0.001069: to digraph
    0.004144: flatten types (203 concepts)
    0.000058: quantities
  0.000022: process dynamic rules
  0.253403: match
    0.253324: match
      0.000549: querygen
      0.016078: creating graph tensor (264 nodes, 907 edges)
        0.004872: setup
        0.001510: key tensor
        0.001903: target tensor
        0.007586: edge tensor
      0.000083: initializing solutions matrix
      0.236327: loop
      0.000015: postprocessing (MAX MEMORY: 0.039GB)
  0.003983: postprocess solutions
0.000056: multiword mentions
0.000013: ner mentions
0.006849: mention bridge
0.018429: merge bridge
0.035444: knowledge pull
0.026124: reference id
0.392992: reference infer
  0.027630: facts graph types
  0.027209: convert facts graph
    0.004216: to digraph
    0.022779: flatten types (801 concepts)
    0.000189: quantities
  0.196783: process dynamic rules
  0.139218: match
    0.139134: match
      0.010455: querygen
      0.094694: creating graph tensor (1714 nodes, 6044 edges)
        0.035681: setup
        0.005860: key tensor
        0.007325: target tensor
        0.044066: edge tensor
      0.000089: initializing solutions matrix
      0.033669: loop
      0.000033: postprocessing (MAX MEMORY: 1.673GB)
  0.000008: postprocess solutions
0.000014: reference resolution
0.050522: fragment resolution
  0.000366: identify previous emora questions
  0.050127: sal
0.407050: dialogue infer
  0.028053: facts graph types
  0.029351: convert facts graph
    0.003589: to digraph
    0.025558: flatten types (801 concepts)
    0.000190: quantities
  0.000027: process dynamic rules
  0.344424: match
    0.344345: match
      0.005317: querygen
      0.251596: creating graph tensor (1868 nodes, 6850 edges)
        0.038966: setup
        0.006483: key tensor
        0.008480: target tensor
        0.195364: edge tensor
      0.000093: initializing solutions matrix
      0.087101: loop
      0.000014: postprocessing (MAX MEMORY: 2.125GB)
  0.002443: postprocess solutions
0.054832: apply inferences
  0.003221: apply
  0.001102: update types
  0.000181: operate
  0.050306: sal
0.018719: reference id 2
0.204276: reference infer 2
  0.028390: facts graph types
  0.027417: convert facts graph
    0.003482: to digraph
    0.023719: flatten types (812 concepts)
    0.000190: quantities
  0.014653: process dynamic rules
  0.131609: match
    0.131528: match
      0.010212: querygen
      0.090016: creating graph tensor (1739 nodes, 6134 edges)
        0.035167: setup
        0.004949: key tensor
        0.007558: target tensor
        0.040609: edge tensor
      0.000083: initializing solutions matrix
      0.030974: loop
      0.000034: postprocessing (MAX MEMORY: 1.723GB)
  0.000009: postprocess solutions
0.000013: reference resolution 2
0.050566: fragment resolution 2
  0.000359: identify previous emora questions
  0.050191: sal
0.248610: dialogue infer 2
  0.028462: facts graph types
  0.029959: convert facts graph
    0.003633: to digraph
    0.026119: flatten types (812 concepts)
    0.000192: quantities
  0.000026: process dynamic rules
  0.185033: match
    0.184953: match
      0.004764: querygen
      0.101272: creating graph tensor (1905 nodes, 6990 edges)
        0.039586: setup
        0.005972: key tensor
        0.008849: target tensor
        0.044907: edge tensor
      0.000087: initializing solutions matrix
      0.078595: loop
      0.000014: postprocessing (MAX MEMORY: 2.212GB)
  0.002383: postprocess solutions
0.053937: apply inferences 2
  0.002309: apply
  0.000741: update types
  0.000201: operate
  0.050667: sal
0.010526: prepare template nlg
0.446632: template infer
  0.028884: facts graph types
  0.030312: convert facts graph
    0.003867: to digraph
    0.026239: flatten types (812 concepts)
    0.000191: quantities
  0.000026: process dynamic rules
  0.381387: match
    0.381306: match
      0.004757: querygen
      0.276583: creating graph tensor (1905 nodes, 6990 edges)
        0.225048: setup
        0.006478: key tensor
        0.008325: target tensor
        0.034712: edge tensor
      0.000086: initializing solutions matrix
      0.099634: loop
      0.000015: postprocessing (MAX MEMORY: 2.212GB)
  0.003070: postprocess solutions
0.003012: template fillers
0.000015: response sel
0.000166: response exp
0.000014: response rules
0.114882: response assembler
  0.000015: response assembly
  0.051076: update sal
  0.002081: decay sal
  0.061694: prune
    0.000013: setup
    0.000810: select keep
    0.000111: delete old spans
    0.048777: setup essentials
    0.008554: identify essentials
    0.003009: remove not keep

[2.54 s] Considering you like animals, I was wondering, do you like the zoo? There are plenty of different animals to see there.

User: ARG REQUESTS: []
TRUTH REQUESTS: [('emora', 'request_truth', 'wm1065', 'wm1066')]
CURRENT USER CONCEPTS: {'wm1075', 'emora', 'wm1076', 'wm1086', 'wm1089', 'wm1080', 'wm1081', 'user', 'now', 'prp'}
FRAGMENT REQUEST MERGES: [('wm1116', 'wm1065'), ('wm1119', 'wm1065'), ('user', 'wm1063')]
ARG REQUESTS: []
TRUTH REQUESTS: []

React + Present Options:
	Yeah, the zoo is really awesome. Years ago, I would visit as much as I could and just spend the entire day staring at animals, mesmerized. Do you visit often? (s: 0.42, pr: 0.50)


0.000028: next turn
0.000015: sentence caser
0.110820: elit
0.171427: parse2logic
  0.001213: facts graph types
  0.002107: convert facts graph
    0.000360: to digraph
    0.001704: flatten types (76 concepts)
    0.000030: quantities
  0.000021: process dynamic rules
  0.161340: match
    0.161262: match
      0.000233: querygen
      0.029344: creating graph tensor (104 nodes, 343 edges)
        0.001834: setup
        0.021135: key tensor
        0.000664: target tensor
        0.005610: edge tensor
      0.000074: initializing solutions matrix
      0.131338: loop
      0.000016: postprocessing (MAX MEMORY: 0.007GB)
  0.000968: postprocess solutions
0.000038: multiword mentions
0.000012: ner mentions
0.003109: mention bridge
0.008446: merge bridge
0.033963: knowledge pull
0.017834: reference id
0.183843: reference infer
  0.026622: facts graph types
  0.026847: convert facts graph
    0.004267: to digraph
    0.022371: flatten types (780 concepts)
    0.000184: quantities
  0.014241: process dynamic rules
  0.114032: match
    0.113957: match
      0.009728: querygen
      0.075545: creating graph tensor (1657 nodes, 5859 edges)
        0.033695: setup
        0.005071: key tensor
        0.006975: target tensor
        0.028209: edge tensor
      0.000085: initializing solutions matrix
      0.028370: loop
      0.000034: postprocessing (MAX MEMORY: 1.571GB)
  0.000008: postprocess solutions
0.000014: reference resolution
0.078791: fragment resolution
  0.000375: identify previous emora questions
  0.029984: find answer
  0.048413: sal
0.239694: dialogue infer
  0.026912: facts graph types
  0.028784: convert facts graph
    0.003535: to digraph
    0.025046: flatten types (782 concepts)
    0.000186: quantities
  0.000027: process dynamic rules
  0.178979: match
    0.178900: match
      0.004693: querygen
      0.090972: creating graph tensor (1816 nodes, 6671 edges)
        0.038438: setup
        0.005534: key tensor
        0.008081: target tensor
        0.037059: edge tensor
      0.000084: initializing solutions matrix
      0.082918: loop
      0.000014: postprocessing (MAX MEMORY: 2.013GB)
  0.002510: postprocess solutions
0.053971: apply inferences
  0.003290: apply
  0.001277: update types
  0.000268: operate
  0.049114: sal
0.019327: reference id 2
0.194788: reference infer 2
  0.027708: facts graph types
  0.026438: convert facts graph
    0.003884: to digraph
    0.022344: flatten types (793 concepts)
    0.000186: quantities
  0.014117: process dynamic rules
  0.124408: match
    0.124331: match
      0.009203: querygen
      0.082703: creating graph tensor (1699 nodes, 6022 edges)
        0.034446: setup
        0.005407: key tensor
        0.007137: target tensor
        0.034107: edge tensor
      0.000087: initializing solutions matrix
      0.032109: loop
      0.000033: postprocessing (MAX MEMORY: 1.658GB)
  0.000008: postprocess solutions
0.000013: reference resolution 2
0.049578: fragment resolution 2
  0.000371: identify previous emora questions
  0.049191: sal
0.437824: dialogue infer 2
  0.027745: facts graph types
  0.029272: convert facts graph
    0.003605: to digraph
    0.025464: flatten types (793 concepts)
    0.000189: quantities
  0.000025: process dynamic rules
  0.375211: match
    0.375135: match
      0.005188: querygen
      0.280503: creating graph tensor (1857 nodes, 6829 edges)
        0.223078: setup
        0.006303: key tensor
        0.008352: target tensor
        0.040796: edge tensor
      0.000090: initializing solutions matrix
      0.089122: loop
      0.000014: postprocessing (MAX MEMORY: 2.109GB)
  0.002763: postprocess solutions
0.054124: apply inferences 2
  0.003046: apply
  0.000707: update types
  0.000266: operate
  0.050086: sal
0.010222: prepare template nlg
0.288440: template infer
  0.027528: facts graph types
  0.029981: convert facts graph
    0.003887: to digraph
    0.025876: flatten types (795 concepts)
    0.000203: quantities
  0.000026: process dynamic rules
  0.224854: match
    0.224771: match
      0.004826: querygen
      0.098447: creating graph tensor (1864 nodes, 6856 edges)
        0.039862: setup
        0.006874: key tensor
        0.008283: target tensor
        0.041248: edge tensor
      0.000090: initializing solutions matrix
      0.121201: loop
      0.000013: postprocessing (MAX MEMORY: 2.126GB)
  0.003144: postprocess solutions
0.003003: template fillers
0.000016: response sel
0.000201: response exp
0.000014: response rules
0.114383: response assembler
  0.000015: response assembly
  0.050139: update sal
  0.002041: decay sal
  0.062173: prune
    0.000017: setup
    0.000795: select keep
    0.000116: delete old spans
    0.048125: setup essentials
    0.008515: identify essentials
    0.003997: remove not keep

[2.08 s] Yeah, the zoo is really awesome. Years ago, I would visit as much as I could and just spend the entire day staring at animals, mesmerized. Do you visit often?

User: ARG REQUESTS: []
TRUTH REQUESTS: [('emora', 'request_truth', 'wm1127', 'wm1129')]
CURRENT USER CONCEPTS: {'emora', 'zoo', 'wm1169', 'wm1141', 'wm1154', 'wm1163', 'wm1147', 'user', 'wm1142', 'wm1172', 'day', 'wm1153', 'prp', 'wm1146', 'wm1164', 'wm1216', 'wm1159', 'wm1143', 'now'}
FRAGMENT REQUEST MERGES: []
ARG REQUESTS: []
TRUTH REQUESTS: [('emora', 'request_truth', 'wm1127', 'wm1129')]
CURRENT USER CONCEPTS: {'emora', 'zoo', 'wm1169', 'wm1141', 'wm1154', 'wm1163', 'wm1147', 'user', 'wm1142', 'wm1172', 'day', 'wm1153', 'prp', 'wm1146', 'wm1164', 'wm1216', 'wm1159', 'wm1143', 'now'}
FRAGMENT REQUEST MERGES: []

React + Present Options:
	You know, I can't think of the answer to that right now . (s: 0.60, pr: 0.10)


0.000030: next turn
0.000015: sentence caser
0.112406: elit
0.407729: parse2logic
  0.002782: facts graph types
  0.004895: convert facts graph
    0.000931: to digraph
    0.003897: flatten types (171 concepts)
    0.000053: quantities
  0.000021: process dynamic rules
  0.384693: match
    0.384615: match
      0.000461: querygen
      0.079627: creating graph tensor (225 nodes, 770 edges)
        0.004161: setup
        0.065474: key tensor
        0.001255: target tensor
        0.008500: edge tensor
      0.000085: initializing solutions matrix
      0.304230: loop
      0.000014: postprocessing (MAX MEMORY: 0.029GB)
  0.003702: postprocess solutions
0.000057: multiword mentions
0.000012: ner mentions
0.005981: mention bridge
0.010235: merge bridge
0.034187: knowledge pull
0.018227: reference id
0.196521: reference infer
  0.026848: facts graph types
  0.027405: convert facts graph
    0.004347: to digraph
    0.022846: flatten types (779 concepts)
    0.000188: quantities
  0.012590: process dynamic rules
  0.127234: match
    0.127152: match
      0.009152: querygen
      0.086534: creating graph tensor (1718 nodes, 6096 edges)
        0.035554: setup
        0.005849: key tensor
        0.007258: target tensor
        0.035725: edge tensor
      0.000095: initializing solutions matrix
      0.031135: loop
      0.000033: postprocessing (MAX MEMORY: 1.698GB)
  0.000008: postprocess solutions
0.000014: reference resolution
0.049352: fragment resolution
  0.000412: identify previous emora questions
  0.001053: find answer
  0.047867: sal
0.260487: dialogue infer
  0.027139: facts graph types
  0.029171: convert facts graph
    0.003516: to digraph
    0.025453: flatten types (779 concepts)
    0.000187: quantities
  0.000026: process dynamic rules
  0.199130: match
    0.199052: match
      0.005341: querygen
      0.097881: creating graph tensor (1863 nodes, 6855 edges)
        0.038839: setup
        0.006425: key tensor
        0.008665: target tensor
        0.042047: edge tensor
      0.000089: initializing solutions matrix
      0.095508: loop
      0.000014: postprocessing (MAX MEMORY: 2.125GB)
  0.002495: postprocess solutions
0.051451: apply inferences
  0.002574: apply
  0.000717: update types
  0.000200: operate
  0.047940: sal
0.017702: reference id 2
0.375734: reference infer 2
  0.026970: facts graph types
  0.206683: convert facts graph
    0.003750: to digraph
    0.202706: flatten types (779 concepts)
    0.000200: quantities
  0.012605: process dynamic rules
  0.127187: match
    0.127104: match
      0.009957: querygen
      0.085707: creating graph tensor (1718 nodes, 6096 edges)
        0.035031: setup
        0.006121: key tensor
        0.007202: target tensor
        0.035700: edge tensor
      0.000088: initializing solutions matrix
      0.031103: loop
      0.000033: postprocessing (MAX MEMORY: 1.698GB)
  0.000009: postprocess solutions
0.000013: reference resolution 2
0.049221: fragment resolution 2
  0.000379: identify previous emora questions
  0.000976: find answer
  0.047846: sal
0.261373: dialogue infer 2
  0.027182: facts graph types
  0.028845: convert facts graph
    0.003784: to digraph
    0.024860: flatten types (779 concepts)
    0.000186: quantities
  0.000026: process dynamic rules
  0.199912: match
    0.199832: match
      0.005145: querygen
      0.098078: creating graph tensor (1863 nodes, 6855 edges)
        0.039569: setup
        0.006780: key tensor
        0.008134: target tensor
        0.041521: edge tensor
      0.000091: initializing solutions matrix
      0.096258: loop
      0.000015: postprocessing (MAX MEMORY: 2.125GB)
  0.002509: postprocess solutions
0.052071: apply inferences 2
  0.002355: apply
  0.000735: update types
  0.000198: operate
  0.048764: sal
0.009677: prepare template nlg
0.298092: template infer
  0.027122: facts graph types
  0.029711: convert facts graph
    0.003704: to digraph
    0.025805: flatten types (779 concepts)
    0.000187: quantities
  0.000026: process dynamic rules
  0.236177: match
    0.236094: match
      0.005191: querygen
      0.112987: creating graph tensor (1863 nodes, 6855 edges)
        0.039930: setup
        0.006469: key tensor
        0.008324: target tensor
        0.056179: edge tensor
      0.000089: initializing solutions matrix
      0.117578: loop
      0.000014: postprocessing (MAX MEMORY: 2.125GB)
  0.002393: postprocess solutions
0.002838: template fillers
0.000015: response sel
0.000159: response exp
0.000014: response rules
0.109091: response assembler
  0.000015: response assembly
  0.048490: update sal
  0.002007: decay sal
  0.058564: prune
    0.000013: setup
    0.000746: select keep
    0.000136: delete old spans
    0.047131: setup essentials
    0.008508: identify essentials
    0.001615: remove not keep

[2.32 s] You know, I can't think of the answer to that right now .

User: ARG REQUESTS: []
TRUTH REQUESTS: []
ARG REQUESTS: []
TRUTH REQUESTS: []

0.000018: next turn
0.000014: sentence caser
0.110860: elit
0.312297: parse2logic
  0.001807: facts graph types
  0.002920: convert facts graph
    0.000583: to digraph
    0.002282: flatten types (115 concepts)
    0.000041: quantities
  0.000021: process dynamic rules
  0.296233: match
    0.296156: match
      0.000307: querygen
      0.027644: creating graph tensor (145 nodes, 482 edges)
        0.002612: setup
        0.017958: key tensor
        0.001335: target tensor
        0.005616: edge tensor
      0.000079: initializing solutions matrix
      0.267802: loop
      0.000016: postprocessing (MAX MEMORY: 0.012GB)
  0.003297: postprocess solutions
0.000045: multiword mentions
0.000013: ner mentions
0.003767: mention bridge
0.009366: merge bridge
0.034154: knowledge pull
0.018798: reference id
0.193851: reference infer
  0.027487: facts graph types
  0.028017: convert facts graph
    0.004393: to digraph
    0.023412: flatten types (791 concepts)
    0.000188: quantities
  0.012768: process dynamic rules
  0.123403: match
    0.123325: match
      0.009912: querygen
      0.082661: creating graph tensor (1722 nodes, 6101 edges)
        0.035299: setup
        0.005994: key tensor
        0.007286: target tensor
        0.032429: edge tensor
      0.000089: initializing solutions matrix
      0.030437: loop
      0.000033: postprocessing (MAX MEMORY: 1.702GB)
  0.000008: postprocess solutions
0.000015: reference resolution
0.049164: fragment resolution
  0.000415: identify previous emora questions
  0.048734: sal
0.438337: dialogue infer
  0.027697: facts graph types
  0.210782: convert facts graph
    0.003591: to digraph
    0.206967: flatten types (791 concepts)
    0.000207: quantities
  0.000028: process dynamic rules
  0.194577: match
    0.194494: match
      0.005954: querygen
      0.097995: creating graph tensor (1877 nodes, 6906 edges)
        0.040979: setup
        0.007143: key tensor
        0.008413: target tensor
        0.039534: edge tensor
      0.000088: initializing solutions matrix
      0.090226: loop
      0.000014: postprocessing (MAX MEMORY: 2.156GB)
  0.002495: postprocess solutions
0.052612: apply inferences
  0.002272: apply
  0.000726: update types
  0.000199: operate
  0.049393: sal
0.018346: reference id 2
0.192304: reference infer 2
  0.027698: facts graph types
  0.026698: convert facts graph
    0.003875: to digraph
    0.022611: flatten types (791 concepts)
    0.000189: quantities
  0.013115: process dynamic rules
  0.122631: match
    0.122552: match
      0.008878: querygen
      0.082874: creating graph tensor (1722 nodes, 6101 edges)
        0.035237: setup
        0.006070: key tensor
        0.007360: target tensor
        0.032535: edge tensor
      0.000086: initializing solutions matrix
      0.030488: loop
      0.000032: postprocessing (MAX MEMORY: 1.702GB)
  0.000008: postprocess solutions
0.000014: reference resolution 2
0.049221: fragment resolution 2
  0.000378: identify previous emora questions
  0.048827: sal
0.253565: dialogue infer 2
  0.027787: facts graph types
  0.029353: convert facts graph
    0.003608: to digraph
    0.025542: flatten types (791 concepts)
    0.000187: quantities
  0.000027: process dynamic rules
  0.191276: match
    0.191196: match
      0.005183: querygen
      0.095522: creating graph tensor (1877 nodes, 6906 edges)
        0.039751: setup
        0.006921: key tensor
        0.008209: target tensor
        0.038699: edge tensor
      0.000088: initializing solutions matrix
      0.090168: loop
      0.000014: postprocessing (MAX MEMORY: 2.156GB)
  0.002519: postprocess solutions
0.051970: apply inferences 2
  0.002318: apply
  0.000723: update types
  0.000201: operate
  0.048708: sal
0.009700: prepare template nlg
0.282372: template infer
  0.027580: facts graph types
  0.029531: convert facts graph
    0.003790: to digraph
    0.025538: flatten types (791 concepts)
    0.000188: quantities
  0.000026: process dynamic rules
  0.220238: match
    0.220158: match
      0.004606: querygen
      0.098131: creating graph tensor (1877 nodes, 6906 edges)
        0.040124: setup
        0.006587: key tensor
        0.008322: target tensor
        0.041131: edge tensor
      0.000090: initializing solutions matrix
      0.117085: loop
      0.000014: postprocessing (MAX MEMORY: 2.156GB)
  0.002379: postprocess solutions
0.002807: template fillers
0.000014: response sel
0.000544: response exp
0.000016: response rules
0.115737: response assembler
  0.000015: response assembly
  0.050292: update sal
  0.002075: decay sal
  0.063339: prune
    0.000013: setup
    0.000789: select keep
    0.000136: delete old spans
    0.049411: setup essentials
    0.008350: identify essentials
    0.004228: remove not keep

[2.20 s] Actually , I was wondering if you are interested in artificial intelligence ?

User: ARG REQUESTS: []
TRUTH REQUESTS: [('emora', 'request_truth', 'wm1278', 'wm1279')]
CURRENT USER CONCEPTS: {'wm1293', 'wm1314', 'wm1310', 'unknown_noun', 'but', 'wm1315', 'wm1301', 'predicate', 'wm1322', 'wm1292', 'wm1294', 'wm1326', 'wm1313', 'wm1325', 'wm1320', 'user', 'wm1297', 'wm1306', 'wm1330', 'unknown_other', 'wm1298', 'wm1321', 'answer'}
FRAGMENT REQUEST MERGES: [('wm1313', 'wm1278')]
ARG REQUESTS: []
TRUTH REQUESTS: []

React + Present Options:
	Do you think A I is dangerous? I've read a lot of books where A I takes over the world. I'd never do that, promise. (s: 0.55, pr: 0.50)


0.000028: next turn
0.000015: sentence caser
0.111011: elit
0.195960: parse2logic
  0.001992: facts graph types
  0.003069: convert facts graph
    0.000611: to digraph
    0.002403: flatten types (123 concepts)
    0.000042: quantities
  0.000021: process dynamic rules
  0.179115: match
    0.179037: match
      0.000330: querygen
      0.035973: creating graph tensor (155 nodes, 513 edges)
        0.003023: setup
        0.004781: key tensor
        0.000917: target tensor
        0.027113: edge tensor
      0.000080: initializing solutions matrix
      0.142380: loop
      0.000015: postprocessing (MAX MEMORY: 0.013GB)
  0.002278: postprocess solutions
0.000057: multiword mentions
0.000013: ner mentions
0.006019: mention bridge
0.018209: merge bridge
0.034640: knowledge pull
0.020256: reference id
0.380515: reference infer
  0.027488: facts graph types
  0.207146: convert facts graph
    0.003679: to digraph
    0.203241: flatten types (790 concepts)
    0.000200: quantities
  0.011827: process dynamic rules
  0.131715: match
    0.131631: match
      0.009862: querygen
      0.088247: creating graph tensor (1771 nodes, 6297 edges)
        0.037399: setup
        0.006188: key tensor
        0.007715: target tensor
        0.035153: edge tensor
      0.000087: initializing solutions matrix
      0.033203: loop
      0.000032: postprocessing (MAX MEMORY: 1.811GB)
  0.000008: postprocess solutions
0.000014: reference resolution
0.079239: fragment resolution
  0.000417: identify previous emora questions
  0.029940: find answer
  0.048863: sal
0.262147: dialogue infer
  0.027452: facts graph types
  0.029786: convert facts graph
    0.003787: to digraph
    0.025799: flatten types (787 concepts)
    0.000186: quantities
  0.000029: process dynamic rules
  0.199207: match
    0.199127: match
      0.004724: querygen
      0.101620: creating graph tensor (1903 nodes, 7020 edges)
        0.040927: setup
        0.007253: key tensor
        0.008514: target tensor
        0.042911: edge tensor
      0.000091: initializing solutions matrix
      0.092453: loop
      0.000015: postprocessing (MAX MEMORY: 2.227GB)
  0.002933: postprocess solutions
0.054785: apply inferences
  0.003611: apply
  0.000988: update types
  0.000316: operate
  0.049848: sal
0.019225: reference id 2
0.214715: reference infer 2
  0.027951: facts graph types
  0.028052: convert facts graph
    0.003941: to digraph
    0.023901: flatten types (799 concepts)
    0.000186: quantities
  0.011428: process dynamic rules
  0.144870: match
    0.144793: match
      0.009690: querygen
      0.099711: creating graph tensor (1796 nodes, 6398 edges)
        0.036806: setup
        0.005901: key tensor
        0.007793: target tensor
        0.047200: edge tensor
      0.000091: initializing solutions matrix
      0.035059: loop
      0.000032: postprocessing (MAX MEMORY: 1.868GB)
  0.000008: postprocess solutions
0.000013: reference resolution 2
0.049823: fragment resolution 2
  0.000417: identify previous emora questions
  0.049389: sal
0.272682: dialogue infer 2
  0.028215: facts graph types
  0.030147: convert facts graph
    0.003757: to digraph
    0.026186: flatten types (799 concepts)
    0.000189: quantities
  0.000026: process dynamic rules
  0.208663: match
    0.208585: match
      0.005043: querygen
      0.110003: creating graph tensor (1936 nodes, 7138 edges)
        0.040995: setup
        0.006891: key tensor
        0.009042: target tensor
        0.051008: edge tensor
      0.000090: initializing solutions matrix
      0.093203: loop
      0.000014: postprocessing (MAX MEMORY: 2.303GB)
  0.002900: postprocess solutions
0.052971: apply inferences 2
  0.002599: apply
  0.000712: update types
  0.000250: operate
  0.049391: sal
0.009787: prepare template nlg
0.477699: template infer
  0.028058: facts graph types
  0.211629: convert facts graph
    0.003779: to digraph
    0.207622: flatten types (799 concepts)
    0.000211: quantities
  0.000027: process dynamic rules
  0.232339: match
    0.232253: match
      0.006337: querygen
      0.106725: creating graph tensor (1936 nodes, 7138 edges)
        0.041409: setup
        0.007206: key tensor
        0.008595: target tensor
        0.047434: edge tensor
      0.000088: initializing solutions matrix
      0.118856: loop
      0.000015: postprocessing (MAX MEMORY: 2.303GB)
  0.002789: postprocess solutions
0.002986: template fillers
0.000016: response sel
0.000188: response exp
0.000015: response rules
0.114787: response assembler
  0.000015: response assembly
  0.050508: update sal
  0.002079: decay sal
  0.062168: prune
    0.000021: setup
    0.000816: select keep
    0.000113: delete old spans
    0.049110: setup essentials
    0.007985: identify essentials
    0.003234: remove not keep

[2.38 s] Do you think A I is dangerous? I've read a lot of books where A I takes over the world. I'd never do that, promise.

User: ARG REQUESTS: []
TRUTH REQUESTS: [('emora', 'request_truth', 'wm1387', 'wm1388')]
CURRENT USER CONCEPTS: {'wm1400', 'wm1399', 'user', 'wm1401', 'predicate'}
FRAGMENT REQUEST MERGES: [('wm1399', 'wm1387')]
ARG REQUESTS: []
TRUTH REQUESTS: []

React + Present Options:
	Huh. I don't know, I feel A I is really far away from actually being intelligent, but I do agree there are dangers in how it can be used today. Just like with any new technology. (s: 0.61, pr: 1.00)
	A I is really beginning to change our lives. How do you think it will improve your life in the near future? (s: 0.25, pr: 0.50)
	A I is really exciting. It can replace a lot of menial work for people and even gain insights that are hard to get otherwise. I often am surprised at people's intuiton when I talk to them , and I feel like A I does something similar. (s: 0.76, pr: 0.10)
	You know, the famous author Terry Pratchett said real stupidity beats artificial intelligence every time . (s: 0.76, pr: 0.10)


0.000028: next turn
0.000014: sentence caser
0.108195: elit
0.044643: parse2logic
  0.000351: facts graph types
  0.000787: convert facts graph
    0.000298: to digraph
    0.000458: flatten types (26 concepts)
    0.000020: quantities
  0.000021: process dynamic rules
  0.040845: match
    0.040766: match
      0.000086: querygen
      0.005266: creating graph tensor (30 nodes, 82 edges)
        0.000510: setup
        0.001311: key tensor
        0.000386: target tensor
        0.003007: edge tensor
      0.000073: initializing solutions matrix
      0.035107: loop
      0.000014: postprocessing (MAX MEMORY: 0.001GB)
  0.000469: postprocess solutions
0.000036: multiword mentions
0.000012: ner mentions
0.001550: mention bridge
0.006111: merge bridge
0.032190: knowledge pull
0.018532: reference id
0.183173: reference infer
  0.024979: facts graph types
  0.026056: convert facts graph
    0.004159: to digraph
    0.021698: flatten types (734 concepts)
    0.000175: quantities
  0.011352: process dynamic rules
  0.118699: match
    0.118624: match
      0.008377: querygen
      0.079212: creating graph tensor (1635 nodes, 5821 edges)
        0.034631: setup
        0.005307: key tensor
        0.007165: target tensor
        0.030513: edge tensor
      0.000089: initializing solutions matrix
      0.030718: loop
      0.000031: postprocessing (MAX MEMORY: 1.547GB)
  0.000008: postprocess solutions
0.000015: reference resolution
0.047458: fragment resolution
  0.000413: identify previous emora questions
  0.001941: find answer
  0.045085: sal
0.249486: dialogue infer
  0.024930: facts graph types
  0.026937: convert facts graph
    0.003495: to digraph
    0.023251: flatten types (730 concepts)
    0.000177: quantities
  0.000026: process dynamic rules
  0.192061: match
    0.191985: match
      0.004786: querygen
      0.089528: creating graph tensor (1752 nodes, 6465 edges)
        0.036963: setup
        0.005983: key tensor
        0.007855: target tensor
        0.035994: edge tensor
      0.000110: initializing solutions matrix
      0.097322: loop
      0.000014: postprocessing (MAX MEMORY: 1.888GB)
  0.003039: postprocess solutions
0.050889: apply inferences
  0.003671: apply
  0.000962: update types
  0.000238: operate
  0.045997: sal
0.017216: reference id 2
0.202595: reference infer 2
  0.025461: facts graph types
  0.025376: convert facts graph
    0.003700: to digraph
    0.021478: flatten types (740 concepts)
    0.000174: quantities
  0.011452: process dynamic rules
  0.138236: match
    0.138158: match
      0.008461: querygen
      0.093720: creating graph tensor (1640 nodes, 5845 edges)
        0.034521: setup
        0.005268: key tensor
        0.007030: target tensor
        0.045250: edge tensor
      0.000087: initializing solutions matrix
      0.035659: loop
      0.000033: postprocessing (MAX MEMORY: 1.559GB)
  0.000008: postprocess solutions
0.000013: reference resolution 2
0.046470: fragment resolution 2
  0.000399: identify previous emora questions
  0.046054: sal
0.446841: dialogue infer 2
  0.025588: facts graph types
  0.027466: convert facts graph
    0.003603: to digraph
    0.023673: flatten types (740 concepts)
    0.000176: quantities
  0.000026: process dynamic rules
  0.388163: match
    0.388083: match
      0.004967: querygen
      0.287826: creating graph tensor (1777 nodes, 6558 edges)
        0.224013: setup
        0.006466: key tensor
        0.008127: target tensor
        0.047096: edge tensor
      0.000091: initializing solutions matrix
      0.094956: loop
      0.000014: postprocessing (MAX MEMORY: 1.943GB)
  0.003012: postprocess solutions
0.051070: apply inferences 2
  0.002943: apply
  0.000692: update types
  0.000240: operate
  0.047176: sal
0.009442: prepare template nlg
0.254060: template infer
  0.025719: facts graph types
  0.027614: convert facts graph
    0.003556: to digraph
    0.023868: flatten types (740 concepts)
    0.000176: quantities
  0.000025: process dynamic rules
  0.195484: match
    0.195405: match
      0.005250: querygen
      0.092145: creating graph tensor (1777 nodes, 6558 edges)
        0.039130: setup
        0.006553: key tensor
        0.007908: target tensor
        0.036756: edge tensor
      0.000089: initializing solutions matrix
      0.097663: loop
      0.000015: postprocessing (MAX MEMORY: 1.943GB)
  0.002689: postprocess solutions
0.002224: template fillers
0.000016: response sel
0.000107: response exp
0.000013: response rules
0.102662: response assembler
  0.000015: response assembly
  0.046306: update sal
  0.001887: decay sal
  0.054439: prune
    0.000018: setup
    0.000760: select keep
    0.000109: delete old spans
    0.043922: setup essentials
    0.007882: identify essentials
    0.001143: remove not keep

[1.88 s] Huh. I don't know, I feel A I is really far away from actually being intelligent, but I do agree there are dangers in how it can be used today. Just like with any new technology.

User: ARG REQUESTS: []
TRUTH REQUESTS: []
ARG REQUESTS: []
TRUTH REQUESTS: []

React + Present Options:
	A I is really beginning to change our lives. How do you think it will improve your life in the near future? (s: 0.21, pr: 0.50)
	A I is really exciting. It can replace a lot of menial work for people and even gain insights that are hard to get otherwise. I often am surprised at people's intuiton when I talk to them , and I feel like A I does something similar. (s: 0.65, pr: 0.10)
	You know, the famous author Terry Pratchett said real stupidity beats artificial intelligence every time . (s: 0.65, pr: 0.10)


0.000029: next turn
0.000015: sentence caser
0.111958: elit
0.308935: parse2logic
  0.003674: facts graph types
  0.005903: convert facts graph
    0.001153: to digraph
    0.004674: flatten types (219 concepts)
    0.000061: quantities
  0.000021: process dynamic rules
  0.279112: match
    0.279022: match
      0.000625: querygen
      0.023198: creating graph tensor (304 nodes, 1060 edges)
        0.005723: setup
        0.003511: key tensor
        0.002079: target tensor
        0.011648: edge tensor
      0.000084: initializing solutions matrix
      0.254903: loop
      0.000013: postprocessing (MAX MEMORY: 0.053GB)
  0.005051: postprocess solutions
0.000063: multiword mentions
0.000012: ner mentions
0.006912: mention bridge
0.017133: merge bridge
0.037258: knowledge pull
0.015966: reference id
0.202835: reference infer
  0.029474: facts graph types
  0.029999: convert facts graph
    0.004657: to digraph
    0.025124: flatten types (824 concepts)
    0.000194: quantities
  0.011482: process dynamic rules
  0.129418: match
    0.129336: match
      0.008977: querygen
      0.090907: creating graph tensor (1857 nodes, 6641 edges)
        0.038792: setup
        0.006616: key tensor
        0.007899: target tensor
        0.035755: edge tensor
      0.000091: initializing solutions matrix
      0.029139: loop
      0.000030: postprocessing (MAX MEMORY: 2.010GB)
  0.000008: postprocess solutions
0.000014: reference resolution
0.052054: fragment resolution
  0.000399: identify previous emora questions
  0.051634: sal
0.266455: dialogue infer
  0.029579: facts graph types
  0.031133: convert facts graph
    0.003747: to digraph
    0.027176: flatten types (824 concepts)
    0.000197: quantities
  0.000026: process dynamic rules
  0.200373: match
    0.200295: match
      0.005456: querygen
      0.108566: creating graph tensor (1992 nodes, 7343 edges)
        0.041744: setup
        0.007452: key tensor
        0.009270: target tensor
        0.048015: edge tensor
      0.000091: initializing solutions matrix
      0.085957: loop
      0.000013: postprocessing (MAX MEMORY: 2.436GB)
  0.002491: postprocess solutions
0.054306: apply inferences
  0.002570: apply
  0.000738: update types
  0.000253: operate
  0.050724: sal
0.015959: reference id 2
0.386921: reference infer 2
  0.029483: facts graph types
  0.029346: convert facts graph
    0.004102: to digraph
    0.025027: flatten types (825 concepts)
    0.000194: quantities
  0.010848: process dynamic rules
  0.314487: match
    0.314407: match
      0.009489: querygen
      0.274804: creating graph tensor (1861 nodes, 6657 edges)
        0.222625: setup
        0.006328: key tensor
        0.008111: target tensor
        0.035875: edge tensor
      0.000089: initializing solutions matrix
      0.029796: loop
      0.000031: postprocessing (MAX MEMORY: 2.020GB)
  0.000008: postprocess solutions
0.000014: reference resolution 2
0.051821: fragment resolution 2
  0.000405: identify previous emora questions
  0.051399: sal
0.272630: dialogue infer 2
  0.030007: facts graph types
  0.031447: convert facts graph
    0.004131: to digraph
    0.027106: flatten types (825 concepts)
    0.000195: quantities
  0.000026: process dynamic rules
  0.205796: match
    0.205718: match
      0.005020: querygen
      0.108478: creating graph tensor (1996 nodes, 7359 edges)
        0.042362: setup
        0.007134: key tensor
        0.008927: target tensor
        0.048005: edge tensor
      0.000089: initializing solutions matrix
      0.091886: loop
      0.000016: postprocessing (MAX MEMORY: 2.447GB)
  0.002478: postprocess solutions
0.054237: apply inferences 2
  0.002219: apply
  0.000763: update types
  0.000256: operate
  0.050980: sal
0.010187: prepare template nlg
0.279815: template infer
  0.029684: facts graph types
  0.031201: convert facts graph
    0.003842: to digraph
    0.027150: flatten types (825 concepts)
    0.000195: quantities
  0.000026: process dynamic rules
  0.213800: match
    0.213722: match
      0.005670: querygen
      0.111916: creating graph tensor (1996 nodes, 7359 edges)
        0.042358: setup
        0.007437: key tensor
        0.008727: target tensor
        0.051236: edge tensor
      0.000092: initializing solutions matrix
      0.095810: loop
      0.000014: postprocessing (MAX MEMORY: 2.447GB)
  0.002181: postprocess solutions
0.001489: template fillers
0.000015: response sel
0.000144: response exp
0.000014: response rules
0.118589: response assembler
  0.000015: response assembly
  0.051708: update sal
  0.002176: decay sal
  0.064674: prune
    0.000017: setup
    0.000815: select keep
    0.000112: delete old spans
    0.052579: setup essentials
    0.007417: identify essentials
    0.003125: remove not keep

[2.27 s] A I is really beginning to change our lives. How do you think it will improve your life in the near future?

User: ARG REQUESTS: [('emora', 'request', 'wm1419', 'wm1420')]
TRUTH REQUESTS: []
CURRENT USER CONCEPTS: {'wm1536', 'wm1568', 'wm1557', 'wm1573', 'wm1576', 'wm1565', 'wm1547', 'wm1558', 'wm1544', 'more', 'wm1539', 'have', 'wm1556', 'user', 'prp', 'wm1543', 'less', 'wm1569', 'wm1542', 'wm1564', 'wm1563', 'now', 'unknown_other', 'wm1552', 'unknown_adj'}
FRAGMENT REQUEST MERGES: []
ARG REQUESTS: [('emora', 'request', 'wm1419', 'wm1420')]
TRUTH REQUESTS: []
CURRENT USER CONCEPTS: {'wm1536', 'wm1568', 'wm1557', 'wm1573', 'wm1576', 'wm1565', 'wm1547', 'wm1558', 'wm1544', 'more', 'wm1539', 'have', 'wm1556', 'user', 'prp', 'wm1543', 'less', 'wm1569', 'wm1542', 'wm1564', 'wm1563', 'now', 'unknown_other', 'wm1552', 'unknown_adj'}
FRAGMENT REQUEST MERGES: []

React + Present Options:
	For me, other than letting me talk to you, I think A I will help people do their jobs fully - I think every job has a repetitive component that is necessary to complete to enable the fulfilling parts. A I can help do those boring parts. (s: 0.46, pr: 0.50)
	A I is really exciting. It can replace a lot of menial work for people and even gain insights that are hard to get otherwise. I often am surprised at people's intuiton when I talk to them , and I feel like A I does something similar. (s: 0.53, pr: 0.10)
	You know, the famous author Terry Pratchett said real stupidity beats artificial intelligence every time . (s: 0.53, pr: 0.10)


0.000029: next turn
0.000014: sentence caser
0.113402: elit
0.468897: parse2logic
  0.003394: facts graph types
  0.005689: convert facts graph
    0.001088: to digraph
    0.004527: flatten types (203 concepts)
    0.000059: quantities
  0.000022: process dynamic rules
  0.441999: match
    0.441918: match
      0.000524: querygen
      0.041093: creating graph tensor (259 nodes, 897 edges)
        0.004837: setup
        0.025520: key tensor
        0.001356: target tensor
        0.009125: edge tensor
      0.000083: initializing solutions matrix
      0.399839: loop
      0.000018: postprocessing (MAX MEMORY: 0.051GB)
  0.002848: postprocess solutions
0.000051: multiword mentions
0.000012: ner mentions
0.006789: mention bridge
0.018203: merge bridge
0.036892: knowledge pull
0.014243: reference id
0.218665: reference infer
  0.031308: facts graph types
  0.030238: convert facts graph
    0.003873: to digraph
    0.026147: flatten types (841 concepts)
    0.000196: quantities
  0.010056: process dynamic rules
  0.144340: match
    0.144259: match
      0.009469: querygen
      0.101564: creating graph tensor (1913 nodes, 6862 edges)
        0.038946: setup
        0.006802: key tensor
        0.008584: target tensor
        0.045378: edge tensor
      0.000090: initializing solutions matrix
      0.032908: loop
      0.000030: postprocessing (MAX MEMORY: 2.144GB)
  0.000008: postprocess solutions
0.000014: reference resolution
0.084216: fragment resolution
  0.000411: identify previous emora questions
  0.031640: find answer
  0.052146: sal
0.636731: dialogue infer
  0.030534: facts graph types
  0.215180: convert facts graph
    0.003808: to digraph
    0.211140: flatten types (841 concepts)
    0.000215: quantities
  0.000028: process dynamic rules
  0.385215: match
    0.385131: match
      0.006525: querygen
      0.293605: creating graph tensor (2029 nodes, 7475 edges)
        0.043102: setup
        0.007780: key tensor
        0.009054: target tensor
        0.231226: edge tensor
      0.000095: initializing solutions matrix
      0.084669: loop
      0.000014: postprocessing (MAX MEMORY: 2.525GB)
  0.002526: postprocess solutions
0.056623: apply inferences
  0.002717: apply
  0.000743: update types
  0.000203: operate
  0.052940: sal
0.014403: reference id 2
0.202504: reference infer 2
  0.030595: facts graph types
  0.029890: convert facts graph
    0.004401: to digraph
    0.025270: flatten types (842 concepts)
    0.000197: quantities
  0.010672: process dynamic rules
  0.128672: match
    0.128593: match
      0.008722: querygen
      0.091771: creating graph tensor (1917 nodes, 6878 edges)
        0.039517: setup
        0.005807: key tensor
        0.008341: target tensor
        0.036297: edge tensor
      0.000084: initializing solutions matrix
      0.027792: loop
      0.000030: postprocessing (MAX MEMORY: 2.154GB)
  0.000008: postprocess solutions
0.000013: reference resolution 2
0.084180: fragment resolution 2
  0.000409: identify previous emora questions
  0.031535: find answer
  0.052216: sal
0.255817: dialogue infer 2
  0.030644: facts graph types
  0.032064: convert facts graph
    0.004163: to digraph
    0.027687: flatten types (842 concepts)
    0.000199: quantities
  0.000026: process dynamic rules
  0.187648: match
    0.187567: match
      0.005082: querygen
      0.108877: creating graph tensor (2033 nodes, 7491 edges)
        0.042970: setup
        0.006534: key tensor
        0.009189: target tensor
        0.048133: edge tensor
      0.000086: initializing solutions matrix
      0.073286: loop
      0.000014: postprocessing (MAX MEMORY: 2.536GB)
  0.002517: postprocess solutions
0.055665: apply inferences 2
  0.002369: apply
  0.000733: update types
  0.000197: operate
  0.052346: sal
0.010057: prepare template nlg
0.448476: template infer
  0.030636: facts graph types
  0.031750: convert facts graph
    0.003846: to digraph
    0.027693: flatten types (842 concepts)
    0.000197: quantities
  0.000026: process dynamic rules
  0.380447: match
    0.380367: match
      0.005774: querygen
      0.287325: creating graph tensor (2033 nodes, 7491 edges)
        0.043283: setup
        0.006535: key tensor
        0.196077: target tensor
        0.039091: edge tensor
      0.000087: initializing solutions matrix
      0.086938: loop
      0.000014: postprocessing (MAX MEMORY: 2.536GB)
  0.002406: postprocess solutions
0.001490: template fillers
0.000015: response sel
0.000046: response exp
0.000012: response rules
0.120483: response assembler
  0.000014: response assembly
  0.052877: update sal
  0.002141: decay sal
  0.065437: prune
    0.000014: setup
    0.000832: select keep
    0.000116: delete old spans
    0.052759: setup essentials
    0.007565: identify essentials
    0.003700: remove not keep

[2.85 s] For me, other than letting me talk to you, I think A I will help people do their jobs fully - I think every job has a repetitive component that is necessary to complete to enable the fulfilling parts. A I can help do those boring parts.

User: ARG REQUESTS: []
TRUTH REQUESTS: []
ARG REQUESTS: []
TRUTH REQUESTS: []

React + Present Options:
	A I is really exciting. It can replace a lot of menial work for people and even gain insights that are hard to get otherwise. I often am surprised at people's intuiton when I talk to them , and I feel like A I does something similar. (s: 0.43, pr: 0.10)
	You know, the famous author Terry Pratchett said real stupidity beats artificial intelligence every time . (s: 0.43, pr: 0.10)


0.000030: next turn
0.000015: sentence caser
0.111350: elit
0.658201: parse2logic
  0.003259: facts graph types
  0.004873: convert facts graph
    0.000969: to digraph
    0.003836: flatten types (190 concepts)
    0.000056: quantities
  0.000021: process dynamic rules
  0.633272: match
    0.633195: match
      0.000509: querygen
      0.411647: creating graph tensor (242 nodes, 825 edges)
        0.005147: setup
        0.392433: key tensor
        0.001584: target tensor
        0.012138: edge tensor
      0.000084: initializing solutions matrix
      0.220652: loop
      0.000015: postprocessing (MAX MEMORY: 0.033GB)
  0.003281: postprocess solutions
0.000059: multiword mentions
0.000012: ner mentions
0.007923: mention bridge
0.013654: merge bridge
0.037163: knowledge pull
0.012442: reference id
0.214808: reference infer
  0.031173: facts graph types
  0.031331: convert facts graph
    0.004776: to digraph
    0.026331: flatten types (860 concepts)
    0.000200: quantities
  0.009549: process dynamic rules
  0.140110: match
    0.140031: match
      0.009440: querygen
      0.098371: creating graph tensor (1937 nodes, 6945 edges)
        0.039332: setup
        0.006429: key tensor
        0.008480: target tensor
        0.042209: edge tensor
      0.000090: initializing solutions matrix
      0.031904: loop
      0.000030: postprocessing (MAX MEMORY: 2.197GB)
  0.000008: postprocess solutions
0.000014: reference resolution
0.052736: fragment resolution
  0.000382: identify previous emora questions
  0.052337: sal
0.276129: dialogue infer
  0.031462: facts graph types
  0.032078: convert facts graph
    0.004097: to digraph
    0.027764: flatten types (860 concepts)
    0.000203: quantities
  0.000027: process dynamic rules
  0.207254: match
    0.207176: match
      0.005256: querygen
      0.114704: creating graph tensor (2044 nodes, 7511 edges)
        0.042379: setup
        0.007497: key tensor
        0.009178: target tensor
        0.053536: edge tensor
      0.000089: initializing solutions matrix
      0.086897: loop
      0.000014: postprocessing (MAX MEMORY: 2.551GB)
  0.002395: postprocess solutions
0.055706: apply inferences
  0.002318: apply
  0.000720: update types
  0.000253: operate
  0.052394: sal
0.012304: reference id 2
0.214137: reference infer 2
  0.031397: facts graph types
  0.030095: convert facts graph
    0.004121: to digraph
    0.025740: flatten types (860 concepts)
    0.000211: quantities
  0.009516: process dynamic rules
  0.140691: match
    0.140611: match
      0.008948: querygen
      0.099005: creating graph tensor (1937 nodes, 6945 edges)
        0.038807: setup
        0.006619: key tensor
        0.008379: target tensor
        0.043339: edge tensor
      0.000089: initializing solutions matrix
      0.032348: loop
      0.000029: postprocessing (MAX MEMORY: 2.197GB)
  0.000008: postprocess solutions
0.000013: reference resolution 2
0.052754: fragment resolution 2
  0.000383: identify previous emora questions
  0.052355: sal
0.464939: dialogue infer 2
  0.031523: facts graph types
  0.031847: convert facts graph
    0.004127: to digraph
    0.027504: flatten types (860 concepts)
    0.000201: quantities
  0.000026: process dynamic rules
  0.396048: match
    0.395941: match
      0.004999: querygen
      0.302516: creating graph tensor (2044 nodes, 7511 edges)
        0.230723: setup
        0.007941: key tensor
        0.009517: target tensor
        0.051909: edge tensor
      0.000093: initializing solutions matrix
      0.088096: loop
      0.000014: postprocessing (MAX MEMORY: 2.551GB)
  0.002403: postprocess solutions
0.056086: apply inferences 2
  0.002370: apply
  0.000731: update types
  0.000256: operate
  0.052709: sal
0.010056: prepare template nlg
0.274492: template infer
  0.031457: facts graph types
  0.032142: convert facts graph
    0.004177: to digraph
    0.027747: flatten types (860 concepts)
    0.000202: quantities
  0.000026: process dynamic rules
  0.205911: match
    0.205830: match
      0.005192: querygen
      0.108052: creating graph tensor (2044 nodes, 7511 edges)
        0.043154: setup
        0.007690: key tensor
        0.008952: target tensor
        0.046152: edge tensor
      0.000088: initializing solutions matrix
      0.092264: loop
      0.000014: postprocessing (MAX MEMORY: 2.551GB)
  0.002095: postprocess solutions
0.001449: template fillers
0.000017: response sel
0.000068: response exp
0.000013: response rules
0.123386: response assembler
  0.000015: response assembly
  0.053114: update sal
  0.002202: decay sal
  0.068038: prune
    0.000018: setup
    0.000869: select keep
    0.000092: delete old spans
    0.054294: setup essentials
    0.007332: identify essentials
    0.004780: remove not keep

[2.65 s] A I is really exciting. It can replace a lot of menial work for people and even gain insights that are hard to get otherwise. I often am surprised at people's intuiton when I talk to them , and I feel like A I does something similar.

User: ARG REQUESTS: []
TRUTH REQUESTS: []
ARG REQUESTS: []
TRUTH REQUESTS: []

React + Present Options:
	You know, the famous author Terry Pratchett said real stupidity beats artificial intelligence every time . (s: 0.72, pr: 0.10)


0.000030: next turn
0.000015: sentence caser
0.110531: elit
0.159144: parse2logic
  0.000385: facts graph types
  0.000910: convert facts graph
    0.000365: to digraph
    0.000513: flatten types (28 concepts)
    0.000020: quantities
  0.000021: process dynamic rules
  0.155322: match
    0.155245: match
      0.000097: querygen
      0.062521: creating graph tensor (34 nodes, 96 edges)
        0.000585: setup
        0.055995: key tensor
        0.000443: target tensor
        0.005436: edge tensor
      0.000076: initializing solutions matrix
      0.092298: loop
      0.000014: postprocessing (MAX MEMORY: 0.001GB)
  0.000276: postprocess solutions
0.000035: multiword mentions
0.000012: ner mentions
0.001239: mention bridge
0.008268: merge bridge
0.032706: knowledge pull
0.011788: reference id
0.188148: reference infer
  0.025644: facts graph types
  0.027213: convert facts graph
    0.004007: to digraph
    0.023003: flatten types (753 concepts)
    0.000180: quantities
  0.009084: process dynamic rules
  0.124025: match
    0.123950: match
      0.007797: querygen
      0.085224: creating graph tensor (1667 nodes, 5972 edges)
        0.035064: setup
        0.005495: key tensor
        0.007377: target tensor
        0.035590: edge tensor
      0.000086: initializing solutions matrix
      0.030617: loop
      0.000029: postprocessing (MAX MEMORY: 1.625GB)
  0.000009: postprocess solutions
0.000015: reference resolution
0.046966: fragment resolution
  0.000391: identify previous emora questions
  0.046558: sal
0.242229: dialogue infer
  0.025836: facts graph types
  0.027635: convert facts graph
    0.003415: to digraph
    0.024010: flatten types (753 concepts)
    0.000195: quantities
  0.000028: process dynamic rules
  0.183909: match
    0.183833: match
      0.004274: querygen
      0.090725: creating graph tensor (1764 nodes, 6488 edges)
        0.037902: setup
        0.006445: key tensor
        0.007774: target tensor
        0.036809: edge tensor
      0.000090: initializing solutions matrix
      0.088507: loop
      0.000014: postprocessing (MAX MEMORY: 1.904GB)
  0.002394: postprocess solutions
0.049507: apply inferences
  0.002310: apply
  0.000644: update types
  0.000189: operate
  0.046344: sal
0.011585: reference id 2
0.374252: reference infer 2
  0.025849: facts graph types
  0.025859: convert facts graph
    0.003686: to digraph
    0.021970: flatten types (753 concepts)
    0.000181: quantities
  0.009392: process dynamic rules
  0.310753: match
    0.310662: match
      0.007498: querygen
      0.272290: creating graph tensor (1667 nodes, 5972 edges)
        0.034909: setup
        0.005435: key tensor
        0.194249: target tensor
        0.035714: edge tensor
      0.000092: initializing solutions matrix
      0.030555: loop
      0.000028: postprocessing (MAX MEMORY: 1.625GB)
  0.000008: postprocess solutions
0.000014: reference resolution 2
0.047620: fragment resolution 2
  0.000369: identify previous emora questions
  0.047234: sal
0.243198: dialogue infer 2
  0.025880: facts graph types
  0.027928: convert facts graph
    0.003412: to digraph
    0.024320: flatten types (753 concepts)
    0.000181: quantities
  0.000026: process dynamic rules
  0.184435: match
    0.184357: match
      0.004436: querygen
      0.091026: creating graph tensor (1764 nodes, 6488 edges)
        0.037346: setup
        0.006784: key tensor
        0.008019: target tensor
        0.036998: edge tensor
      0.000090: initializing solutions matrix
      0.088554: loop
      0.000016: postprocessing (MAX MEMORY: 1.904GB)
  0.002415: postprocess solutions
0.049784: apply inferences 2
  0.002276: apply
  0.000642: update types
  0.000186: operate
  0.046661: sal
0.009160: prepare template nlg
0.239048: template infer
  0.026005: facts graph types
  0.027673: convert facts graph
    0.003649: to digraph
    0.023829: flatten types (753 concepts)
    0.000180: quantities
  0.000025: process dynamic rules
  0.180852: match
    0.180772: match
      0.004937: querygen
      0.089620: creating graph tensor (1764 nodes, 6488 edges)
        0.037273: setup
        0.006211: key tensor
        0.008109: target tensor
        0.036232: edge tensor
      0.000087: initializing solutions matrix
      0.085894: loop
      0.000014: postprocessing (MAX MEMORY: 1.904GB)
  0.001985: postprocess solutions
0.001293: template fillers
0.000015: response sel
0.000067: response exp
0.000013: response rules
0.102642: response assembler
  0.000015: response assembly
  0.046906: update sal
  0.001915: decay sal
  0.053790: prune
    0.000012: setup
    0.000746: select keep
    0.000087: delete old spans
    0.044311: setup essentials
    0.007345: identify essentials
    0.000895: remove not keep

[1.93 s] You know, the famous author Terry Pratchett said real stupidity beats artificial intelligence every time .

User: ARG REQUESTS: []
TRUTH REQUESTS: []
ARG REQUESTS: []
TRUTH REQUESTS: []

0.000022: next turn
0.000014: sentence caser
0.109100: elit
0.186286: parse2logic
  0.000791: facts graph types
  0.001470: convert facts graph
    0.000266: to digraph
    0.001164: flatten types (56 concepts)
    0.000026: quantities
  0.000021: process dynamic rules
  0.179563: match
    0.179487: match
      0.000169: querygen
      0.026527: creating graph tensor (74 nodes, 233 edges)
        0.001243: setup
        0.019076: key tensor
        0.000705: target tensor
        0.005432: edge tensor
      0.000074: initializing solutions matrix
      0.152424: loop
      0.000016: postprocessing (MAX MEMORY: 0.004GB)
  0.000781: postprocess solutions
0.000037: multiword mentions
0.000012: ner mentions
0.002176: mention bridge
0.009057: merge bridge
0.032936: knowledge pull
0.012150: reference id
0.189723: reference infer
  0.026227: facts graph types
  0.027005: convert facts graph
    0.003582: to digraph
    0.023220: flatten types (758 concepts)
    0.000181: quantities
  0.009001: process dynamic rules
  0.125169: match
    0.125093: match
      0.008481: querygen
      0.085932: creating graph tensor (1676 nodes, 6002 edges)
        0.034627: setup
        0.006056: key tensor
        0.007330: target tensor
        0.036127: edge tensor
      0.000087: initializing solutions matrix
      0.030362: loop
      0.000029: postprocessing (MAX MEMORY: 1.642GB)
  0.000008: postprocess solutions
0.000015: reference resolution
0.047551: fragment resolution
  0.000351: identify previous emora questions
  0.047184: sal
0.243556: dialogue infer
  0.026217: facts graph types
  0.027885: convert facts graph
    0.003437: to digraph
    0.024251: flatten types (758 concepts)
    0.000182: quantities
  0.000027: process dynamic rules
  0.184624: match
    0.184547: match
      0.004364: querygen
      0.093693: creating graph tensor (1773 nodes, 6518 edges)
        0.037364: setup
        0.006617: key tensor
        0.007888: target tensor
        0.040008: edge tensor
      0.000089: initializing solutions matrix
      0.086163: loop
      0.000013: postprocessing (MAX MEMORY: 1.922GB)
  0.002323: postprocess solutions
0.227332: apply inferences
  0.002171: apply
  0.000636: update types
  0.000187: operate
  0.224317: sal
0.012076: reference id 2
0.189301: reference infer 2
  0.026219: facts graph types
  0.026849: convert facts graph
    0.003378: to digraph
    0.023267: flatten types (758 concepts)
    0.000181: quantities
  0.009153: process dynamic rules
  0.124933: match
    0.124854: match
      0.008438: querygen
      0.085703: creating graph tensor (1676 nodes, 6002 edges)
        0.034638: setup
        0.006086: key tensor
        0.007346: target tensor
        0.035991: edge tensor
      0.000087: initializing solutions matrix
      0.030403: loop
      0.000028: postprocessing (MAX MEMORY: 1.642GB)
  0.000008: postprocess solutions
0.000014: reference resolution 2
0.047241: fragment resolution 2
  0.000349: identify previous emora questions
  0.046868: sal
0.244051: dialogue infer 2
  0.026191: facts graph types
  0.028018: convert facts graph
    0.003451: to digraph
    0.024370: flatten types (758 concepts)
    0.000182: quantities
  0.000026: process dynamic rules
  0.184950: match
    0.184874: match
      0.004853: querygen
      0.093441: creating graph tensor (1773 nodes, 6518 edges)
        0.037444: setup
        0.006135: key tensor
        0.007963: target tensor
        0.040010: edge tensor
      0.000091: initializing solutions matrix
      0.086256: loop
      0.000014: postprocessing (MAX MEMORY: 1.922GB)
  0.002330: postprocess solutions
0.050047: apply inferences 2
  0.002173: apply
  0.000635: update types
  0.000199: operate
  0.047019: sal
0.009087: prepare template nlg
0.245965: template infer
  0.026056: facts graph types
  0.027905: convert facts graph
    0.003429: to digraph
    0.024278: flatten types (758 concepts)
    0.000183: quantities
  0.000026: process dynamic rules
  0.187537: match
    0.187459: match
      0.004427: querygen
      0.094861: creating graph tensor (1773 nodes, 6518 edges)
        0.037945: setup
        0.006700: key tensor
        0.007857: target tensor
        0.040485: edge tensor
      0.000091: initializing solutions matrix
      0.087848: loop
      0.000014: postprocessing (MAX MEMORY: 1.922GB)
  0.001959: postprocess solutions
0.001152: template fillers
0.000014: response sel
0.000425: response exp
0.000015: response rules
0.103951: response assembler
  0.000014: response assembly
  0.047492: update sal
  0.001975: decay sal
  0.054454: prune
    0.000012: setup
    0.000753: select keep
    0.000095: delete old spans
    0.045536: setup essentials
    0.007027: identify essentials
    0.000645: remove not keep

[1.96 s] So , I'm curious , do you like art ?

User: ARG REQUESTS: []
TRUTH REQUESTS: [('emora', 'request_truth', 'wm1798', 'wm1799')]
CURRENT USER CONCEPTS: {'wm1806', 'wm1807', 'user', 'predicate', 'wm1805'}
FRAGMENT REQUEST MERGES: [('wm1805', 'wm1798')]
ARG REQUESTS: []
TRUTH REQUESTS: []

React + Present Options:
	Being an artist is so cool . And actually , music is one of my favorite types of art . Do you like music ? (s: 0.22, pr: 0.50)


Present Options:
	Would you say that you're an artist ? (s: 0.26, pr: 0.10)
	Do you like drawing ? (s: 0.40, pr: 0.10)
	Why do you like art ? (s: 0.34, pr: 0.10)
	Art always inspires me, even though I don't always understand it . Just knowing that someone put time into making something meaningful for others is enough. do you often go to exhibitions ? (s: 0.20, pr: 0.50)


0.000028: next turn
0.000014: sentence caser
0.109093: elit
0.044403: parse2logic
  0.000342: facts graph types
  0.000737: convert facts graph
    0.000130: to digraph
    0.000573: flatten types (26 concepts)
    0.000021: quantities
  0.000020: process dynamic rules
  0.040859: match
    0.040779: match
      0.000084: querygen
      0.005233: creating graph tensor (30 nodes, 82 edges)
        0.000527: setup
        0.001280: key tensor
        0.000350: target tensor
        0.003033: edge tensor
      0.000072: initializing solutions matrix
      0.035166: loop
      0.000014: postprocessing (MAX MEMORY: 0.001GB)
  0.000442: postprocess solutions
0.000032: multiword mentions
0.000011: ner mentions
0.001513: mention bridge
0.008218: merge bridge
0.034024: knowledge pull
0.012109: reference id
0.194055: reference infer
  0.026536: facts graph types
  0.027379: convert facts graph
    0.003631: to digraph
    0.023542: flatten types (778 concepts)
    0.000185: quantities
  0.009453: process dynamic rules
  0.128505: match
    0.128430: match
      0.008557: querygen
      0.088154: creating graph tensor (1724 nodes, 6174 edges)
        0.035965: setup
        0.005672: key tensor
        0.007523: target tensor
        0.037244: edge tensor
      0.000088: initializing solutions matrix
      0.031407: loop
      0.000029: postprocessing (MAX MEMORY: 1.737GB)
  0.000008: postprocess solutions
0.000014: reference resolution
0.077114: fragment resolution
  0.000416: identify previous emora questions
  0.028732: find answer
  0.047948: sal
0.435695: dialogue infer
  0.026414: facts graph types
  0.208840: convert facts graph
    0.003618: to digraph
    0.204974: flatten types (775 concepts)
    0.000231: quantities
  0.000028: process dynamic rules
  0.194823: match
    0.194739: match
      0.005649: querygen
      0.093984: creating graph tensor (1815 nodes, 6677 edges)
        0.039330: setup
        0.006910: key tensor
        0.008122: target tensor
        0.037719: edge tensor
      0.000088: initializing solutions matrix
      0.094774: loop
      0.000015: postprocessing (MAX MEMORY: 2.016GB)
  0.003000: postprocess solutions
0.059951: apply inferences
  0.006482: apply
  0.001726: update types
  0.000307: operate
  0.051415: sal
0.017194: reference id 2
0.204751: reference infer 2
  0.028778: facts graph types
  0.028403: convert facts graph
    0.003639: to digraph
    0.024547: flatten types (818 concepts)
    0.000194: quantities
  0.011054: process dynamic rules
  0.134114: match
    0.134034: match
      0.009444: querygen
      0.089706: creating graph tensor (1811 nodes, 6492 edges)
        0.037607: setup
        0.006015: key tensor
        0.007914: target tensor
        0.036337: edge tensor
      0.000088: initializing solutions matrix
      0.034568: loop
      0.000032: postprocessing (MAX MEMORY: 1.920GB)
  0.000008: postprocess solutions
0.000013: reference resolution 2
0.051755: fragment resolution 2
  0.000407: identify previous emora questions
  0.051330: sal
0.271829: dialogue infer 2
  0.028969: facts graph types
  0.030735: convert facts graph
    0.004178: to digraph
    0.026348: flatten types (818 concepts)
    0.000194: quantities
  0.000028: process dynamic rules
  0.205744: match
    0.205662: match
      0.005730: querygen
      0.108832: creating graph tensor (1948 nodes, 7177 edges)
        0.043067: setup
        0.007560: key tensor
        0.008652: target tensor
        0.047368: edge tensor
      0.000091: initializing solutions matrix
      0.090781: loop
      0.000013: postprocessing (MAX MEMORY: 2.328GB)
  0.003515: postprocess solutions
0.057902: apply inferences 2
  0.004957: apply
  0.000875: update types
  0.000273: operate
  0.051776: sal
0.009921: prepare template nlg
0.297775: template infer
  0.029695: facts graph types
  0.031323: convert facts graph
    0.003983: to digraph
    0.027129: flatten types (828 concepts)
    0.000195: quantities
  0.000025: process dynamic rules
  0.230603: match
    0.230522: match
      0.005313: querygen
      0.113426: creating graph tensor (1982 nodes, 7306 edges)
        0.042004: setup
        0.007115: key tensor
        0.008971: target tensor
        0.053187: edge tensor
      0.000090: initializing solutions matrix
      0.111447: loop
      0.000015: postprocessing (MAX MEMORY: 2.412GB)
  0.003363: postprocess solutions
0.002286: template fillers
0.000016: response sel
0.000190: response exp
0.000014: response rules
0.118560: response assembler
  0.000015: response assembly
  0.052191: update sal
  0.002137: decay sal
  0.064200: prune
    0.000017: setup
    0.000854: select keep
    0.000084: delete old spans
    0.051621: setup essentials
    0.006840: identify essentials
    0.004146: remove not keep

[2.01 s] Being an artist is so cool . And actually , music is one of my favorite types of art . Do you like music ?

User: ARG REQUESTS: []
TRUTH REQUESTS: [('emora', 'request_truth', 'wm1857', 'wm1859')]
CURRENT USER CONCEPTS: {'wm1870', 'wm1899', 'predicate', 'wm1895', 'museum', 'wm1883', 'wm1878', 'wm1898', 'wm1886', 'wm1893', 'wm1880', 'user', 'wm1887', 'prp', 'wm1888', 'wm1906', 'wm1900', 'now', 'unknown_other', 'wm1869', 'wm1901'}
FRAGMENT REQUEST MERGES: [('wm1886', 'wm1857')]
ARG REQUESTS: []
TRUTH REQUESTS: []

Present Options:
	Would you say that you're an artist ? (s: 0.38, pr: 0.10)
	Do you like drawing ? (s: 0.40, pr: 0.10)
	Why do you like art ? (s: 0.27, pr: 0.10)
	Art always inspires me, even though I don't always understand it . Just knowing that someone put time into making something meaningful for others is enough. do you often go to exhibitions ? (s: 0.29, pr: 0.50)


0.000027: next turn
0.000015: sentence caser
0.111897: elit
0.551210: parse2logic
  0.003011: facts graph types
  0.004556: convert facts graph
    0.000895: to digraph
    0.003594: flatten types (181 concepts)
    0.000053: quantities
  0.000021: process dynamic rules
  0.528120: match
    0.528041: match
      0.000484: querygen
      0.225136: creating graph tensor (233 nodes, 794 edges)
        0.183103: setup
        0.033945: key tensor
        0.001245: target tensor
        0.006575: edge tensor
      0.000086: initializing solutions matrix
      0.301993: loop
      0.000016: postprocessing (MAX MEMORY: 0.030GB)
  0.003056: postprocess solutions
0.000056: multiword mentions
0.000013: ner mentions
0.006232: mention bridge
0.036277: merge bridge
0.035148: knowledge pull
0.017840: reference id
0.203723: reference infer
  0.028603: facts graph types
  0.029493: convert facts graph
    0.004440: to digraph
    0.024825: flatten types (810 concepts)
    0.000204: quantities
  0.011590: process dynamic rules
  0.131671: match
    0.131593: match
      0.009687: querygen
      0.090828: creating graph tensor (1834 nodes, 6569 edges)
        0.037982: setup
        0.006148: key tensor
        0.007984: target tensor
        0.036960: edge tensor
      0.000088: initializing solutions matrix
      0.030764: loop
      0.000032: postprocessing (MAX MEMORY: 1.966GB)
  0.000008: postprocess solutions
0.000014: reference resolution
0.081924: fragment resolution
  0.000430: identify previous emora questions
  0.031273: find answer
  0.050202: sal
0.263730: dialogue infer
  0.028597: facts graph types
  0.030205: convert facts graph
    0.004008: to digraph
    0.025987: flatten types (806 concepts)
    0.000196: quantities
  0.000027: process dynamic rules
  0.198599: match
    0.198519: match
      0.005587: querygen
      0.105508: creating graph tensor (1964 nodes, 7242 edges)
        0.041804: setup
        0.007442: key tensor
        0.008653: target tensor
        0.045579: edge tensor
      0.000088: initializing solutions matrix
      0.087077: loop
      0.000016: postprocessing (MAX MEMORY: 2.369GB)
  0.003495: postprocess solutions
0.055076: apply inferences
  0.004166: apply
  0.000668: update types
  0.000252: operate
  0.049969: sal
0.017264: reference id 2
0.204466: reference infer 2
  0.028893: facts graph types
  0.028706: convert facts graph
    0.003620: to digraph
    0.024865: flatten types (807 concepts)
    0.000197: quantities
  0.011195: process dynamic rules
  0.132910: match
    0.132827: match
      0.009700: querygen
      0.090967: creating graph tensor (1832 nodes, 6573 edges)
        0.037332: setup
        0.006227: key tensor
        0.008011: target tensor
        0.037242: edge tensor
      0.000094: initializing solutions matrix
      0.031817: loop
      0.000032: postprocessing (MAX MEMORY: 1.967GB)
  0.000009: postprocess solutions
0.000014: reference resolution 2
0.051141: fragment resolution 2
  0.000419: identify previous emora questions
  0.050705: sal
0.452772: dialogue infer 2
  0.028717: facts graph types
  0.030323: convert facts graph
    0.003990: to digraph
    0.026121: flatten types (807 concepts)
    0.000197: quantities
  0.000027: process dynamic rules
  0.387249: match
    0.387170: match
      0.005595: querygen
      0.294773: creating graph tensor (1968 nodes, 7258 edges)
        0.041771: setup
        0.196138: key tensor
        0.009117: target tensor
        0.045493: edge tensor
      0.000093: initializing solutions matrix
      0.086467: loop
      0.000014: postprocessing (MAX MEMORY: 2.380GB)
  0.003488: postprocess solutions
0.055629: apply inferences 2
  0.003839: apply
  0.000679: update types
  0.000250: operate
  0.050840: sal
0.009508: prepare template nlg
0.269366: template infer
  0.028641: facts graph types
  0.030706: convert facts graph
    0.003768: to digraph
    0.026731: flatten types (807 concepts)
    0.000192: quantities
  0.000025: process dynamic rules
  0.204226: match
    0.204144: match
      0.005646: querygen
      0.104737: creating graph tensor (1968 nodes, 7258 edges)
        0.041543: setup
        0.007399: key tensor
        0.008695: target tensor
        0.045058: edge tensor
      0.000091: initializing solutions matrix
      0.093433: loop
      0.000014: postprocessing (MAX MEMORY: 2.380GB)
  0.002790: postprocess solutions
0.002142: template fillers
0.000015: response sel
0.000191: response exp
0.000014: response rules
0.117217: response assembler
  0.000015: response assembly
  0.051139: update sal
  0.002122: decay sal
  0.063924: prune
    0.000017: setup
    0.000806: select keep
    0.000084: delete old spans
    0.050747: setup essentials
    0.006835: identify essentials
    0.004825: remove not keep

[2.54 s] Gotcha . Art always inspires me, even though I don't always understand it . Just knowing that someone put time into making something meaningful for others is enough. do you often go to exhibitions ?

User: ARG REQUESTS: []
TRUTH REQUESTS: [('emora', 'request_truth', 'wm1824', 'wm1828')]
CURRENT USER CONCEPTS: {'wm1970', 'prp', 'wm1978', 'abstract_art', 'user', 'now', 'wm1969'}
FRAGMENT REQUEST MERGES: []
ARG REQUESTS: []
TRUTH REQUESTS: [('emora', 'request_truth', 'wm1824', 'wm1828')]
CURRENT USER CONCEPTS: {'wm1970', 'prp', 'wm1978', 'abstract_art', 'user', 'now', 'wm1969'}
FRAGMENT REQUEST MERGES: []

Present Options:
	Would you say that you're an artist ? (s: 0.31, pr: 0.10)
	Do you like drawing ? (s: 0.33, pr: 0.10)


0.000027: next turn
0.000014: sentence caser
0.110240: elit
0.238586: parse2logic
  0.001390: facts graph types
  0.002399: convert facts graph
    0.000503: to digraph
    0.001847: flatten types (93 concepts)
    0.000036: quantities
  0.000021: process dynamic rules
  0.226038: match
    0.225963: match
      0.000269: querygen
      0.016884: creating graph tensor (120 nodes, 394 edges)
        0.002036: setup
        0.007714: key tensor
        0.000924: target tensor
        0.006106: edge tensor
      0.000078: initializing solutions matrix
      0.208433: loop
      0.000015: postprocessing (MAX MEMORY: 0.008GB)
  0.002049: postprocess solutions
0.000139: multiword mentions
0.000027: ner mentions
0.002652: mention bridge
0.007464: merge bridge
0.032495: knowledge pull
0.016280: reference id
0.187999: reference infer
  0.024633: facts graph types
  0.026436: convert facts graph
    0.003458: to digraph
    0.022778: flatten types (727 concepts)
    0.000176: quantities
  0.010574: process dynamic rules
  0.124213: match
    0.124137: match
      0.008825: querygen
      0.082869: creating graph tensor (1663 nodes, 5956 edges)
        0.034751: setup
        0.005380: key tensor
        0.007272: target tensor
        0.033822: edge tensor
      0.000088: initializing solutions matrix
      0.032132: loop
      0.000031: postprocessing (MAX MEMORY: 1.616GB)
  0.000008: postprocess solutions
0.000015: reference resolution
0.072053: fragment resolution
  0.000453: identify previous emora questions
  0.026073: find answer
  0.045510: sal
0.244230: dialogue infer
  0.024845: facts graph types
  0.027599: convert facts graph
    0.003592: to digraph
    0.023818: flatten types (727 concepts)
    0.000176: quantities
  0.000027: process dynamic rules
  0.185716: match
    0.185638: match
      0.004941: querygen
      0.091943: creating graph tensor (1793 nodes, 6623 edges)
        0.037983: setup
        0.006178: key tensor
        0.008112: target tensor
        0.037874: edge tensor
      0.000089: initializing solutions matrix
      0.088437: loop
      0.000014: postprocessing (MAX MEMORY: 1.981GB)
  0.003513: postprocess solutions
0.049957: apply inferences
  0.003829: apply
  0.000643: update types
  0.000181: operate
  0.045284: sal
0.016013: reference id 2
0.376572: reference infer 2
  0.024780: facts graph types
  0.025460: convert facts graph
    0.003568: to digraph
    0.021690: flatten types (727 concepts)
    0.000179: quantities
  0.011025: process dynamic rules
  0.312971: match
    0.312892: match
      0.008190: querygen
      0.272204: creating graph tensor (1663 nodes, 5956 edges)
        0.034559: setup
        0.005336: key tensor
        0.196004: target tensor
        0.034330: edge tensor
      0.000091: initializing solutions matrix
      0.032171: loop
      0.000032: postprocessing (MAX MEMORY: 1.616GB)
  0.000009: postprocess solutions
0.000013: reference resolution 2
0.072384: fragment resolution 2
  0.000423: identify previous emora questions
  0.025838: find answer
  0.046104: sal
0.245366: dialogue infer 2
  0.024714: facts graph types
  0.027858: convert facts graph
    0.003319: to digraph
    0.024346: flatten types (727 concepts)
    0.000179: quantities
  0.000026: process dynamic rules
  0.186723: match
    0.186644: match
      0.004652: querygen
      0.092929: creating graph tensor (1793 nodes, 6623 edges)
        0.037999: setup
        0.006960: key tensor
        0.008207: target tensor
        0.037980: edge tensor
      0.000088: initializing solutions matrix
      0.088736: loop
      0.000014: postprocessing (MAX MEMORY: 1.981GB)
  0.003507: postprocess solutions
0.050324: apply inferences 2
  0.003742: apply
  0.000646: update types
  0.000200: operate
  0.045716: sal
0.009012: prepare template nlg
0.245829: template infer
  0.024877: facts graph types
  0.027712: convert facts graph
    0.003342: to digraph
    0.024180: flatten types (727 concepts)
    0.000175: quantities
  0.000026: process dynamic rules
  0.188067: match
    0.187987: match
      0.004563: querygen
      0.092793: creating graph tensor (1793 nodes, 6623 edges)
        0.038080: setup
        0.006822: key tensor
        0.007979: target tensor
        0.038072: edge tensor
      0.000099: initializing solutions matrix
      0.090281: loop
      0.000016: postprocessing (MAX MEMORY: 1.981GB)
  0.002579: postprocess solutions
0.001878: template fillers
0.000015: response sel
0.000167: response exp
0.000014: response rules
0.101014: response assembler
  0.000015: response assembly
  0.045933: update sal
  0.001901: decay sal
  0.053149: prune
    0.000012: setup
    0.000728: select keep
    0.000093: delete old spans
    0.044318: setup essentials
    0.006857: identify essentials
    0.000746: remove not keep

[2.08 s] Yeah . Do you like drawing ?

User: ARG REQUESTS: []
TRUTH REQUESTS: [('emora', 'request_truth', 'wm1834', 'wm1835')]
CURRENT USER CONCEPTS: {'wm2006', 'wm2005', 'wm2004', 'user', 'predicate'}
FRAGMENT REQUEST MERGES: [('wm2004', 'wm1834')]
ARG REQUESTS: []
TRUTH REQUESTS: []

Present Options:
	Would you say that you're an artist ? (s: 0.27, pr: 0.10)
	You must be very creative . Have you ever tried digital drawing before ? (s: 0.83, pr: 0.50)
	You must be very creative . Have you ever tried digital drawing before ? (s: 0.43, pr: 0.50)


0.000021: next turn
0.000013: sentence caser
0.107924: elit
0.049377: parse2logic
  0.000350: facts graph types
  0.000758: convert facts graph
    0.000133: to digraph
    0.000592: flatten types (26 concepts)
    0.000020: quantities
  0.000020: process dynamic rules
  0.045741: match
    0.045662: match
      0.000084: querygen
      0.008447: creating graph tensor (30 nodes, 82 edges)
        0.000489: setup
        0.002739: key tensor
        0.000356: target tensor
        0.004819: edge tensor
      0.000072: initializing solutions matrix
      0.036854: loop
      0.000013: postprocessing (MAX MEMORY: 0.001GB)
  0.000443: postprocess solutions
0.000033: multiword mentions
0.000012: ner mentions
0.001521: mention bridge
0.006158: merge bridge
0.032274: knowledge pull
0.016224: reference id
0.196685: reference infer
  0.025454: facts graph types
  0.026620: convert facts graph
    0.004239: to digraph
    0.022182: flatten types (735 concepts)
    0.000177: quantities
  0.011138: process dynamic rules
  0.131251: match
    0.131175: match
      0.008191: querygen
      0.088208: creating graph tensor (1682 nodes, 6026 edges)
        0.035368: setup
        0.005486: key tensor
        0.007573: target tensor
        0.038161: edge tensor
      0.000088: initializing solutions matrix
      0.034458: loop
      0.000030: postprocessing (MAX MEMORY: 1.654GB)
  0.000008: postprocess solutions
0.000013: reference resolution
0.047641: fragment resolution
  0.000414: identify previous emora questions
  0.001957: find answer
  0.045250: sal
0.244408: dialogue infer
  0.025081: facts graph types
  0.027774: convert facts graph
    0.003474: to digraph
    0.024107: flatten types (731 concepts)
    0.000179: quantities
  0.000027: process dynamic rules
  0.185296: match
    0.185219: match
      0.004373: querygen
      0.091172: creating graph tensor (1795 nodes, 6635 edges)
        0.038358: setup
        0.006699: key tensor
        0.008073: target tensor
        0.036237: edge tensor
      0.000087: initializing solutions matrix
      0.089390: loop
      0.000013: postprocessing (MAX MEMORY: 1.988GB)
  0.003681: postprocess solutions
0.055449: apply inferences
  0.006545: apply
  0.000912: update types
  0.000246: operate
  0.047724: sal
0.019443: reference id 2
0.379079: reference infer 2
  0.026262: facts graph types
  0.207504: convert facts graph
    0.003211: to digraph
    0.204060: flatten types (752 concepts)
    0.000206: quantities
  0.011877: process dynamic rules
  0.131112: match
    0.131028: match
      0.009696: querygen
      0.090504: creating graph tensor (1723 nodes, 6182 edges)
        0.036487: setup
        0.006131: key tensor
        0.007645: target tensor
        0.038509: edge tensor
      0.000088: initializing solutions matrix
      0.030510: loop
      0.000033: postprocessing (MAX MEMORY: 1.740GB)
  0.000008: postprocess solutions
0.000014: reference resolution 2
0.047941: fragment resolution 2
  0.000446: identify previous emora questions
  0.047478: sal
0.272199: dialogue infer 2
  0.026384: facts graph types
  0.028705: convert facts graph
    0.003428: to digraph
    0.025082: flatten types (752 concepts)
    0.000181: quantities
  0.000026: process dynamic rules
  0.210603: match
    0.210524: match
      0.005151: querygen
      0.113551: creating graph tensor (1871 nodes, 6926 edges)
        0.039497: setup
        0.006997: key tensor
        0.008419: target tensor
        0.056572: edge tensor
      0.000089: initializing solutions matrix
      0.091524: loop
      0.000014: postprocessing (MAX MEMORY: 2.165GB)
  0.003808: postprocess solutions
0.052620: apply inferences 2
  0.004379: apply
  0.000657: update types
  0.000240: operate
  0.047326: sal
0.009257: prepare template nlg
0.256554: template infer
  0.026344: facts graph types
  0.028954: convert facts graph
    0.003451: to digraph
    0.025306: flatten types (752 concepts)
    0.000182: quantities
  0.000026: process dynamic rules
  0.195804: match
    0.195725: match
      0.004652: querygen
      0.095142: creating graph tensor (1871 nodes, 6926 edges)
        0.039638: setup
        0.006678: key tensor
        0.008551: target tensor
        0.038321: edge tensor
      0.000088: initializing solutions matrix
      0.095605: loop
      0.000015: postprocessing (MAX MEMORY: 2.165GB)
  0.002687: postprocess solutions
0.001973: template fillers
0.000015: response sel
0.000198: response exp
0.000014: response rules
0.106003: response assembler
  0.000015: response assembly
  0.047637: update sal
  0.001928: decay sal
  0.056407: prune
    0.000019: setup
    0.000772: select keep
    0.000084: delete old spans
    0.046216: setup essentials
    0.006766: identify essentials
    0.001922: remove not keep

[1.90 s] Gotcha . You must be very creative . Have you ever tried digital drawing before ?

User: ARG REQUESTS: []
TRUTH REQUESTS: [('emora', 'request_truth', 'wm2036', 'wm2037')]
CURRENT USER CONCEPTS: {'wm2058', 'wm2049', 'wm2066', 'wm2067', 'wm2063', 'wm2074', 'wm2059', 'but', 'wm2051', 'user', 'now', 'wm2068', 'predicate', 'prp'}
FRAGMENT REQUEST MERGES: [('wm2066', 'wm2036')]
ARG REQUESTS: []
TRUTH REQUESTS: []

Present Options:
	Would you say that you're an artist ? (s: 0.26, pr: 0.10)
	You should look into it at some point ! Since you like drawing , I think you would definitely have a lot of fun . (s: 0.67, pr: 0.50)


0.000020: next turn
0.000014: sentence caser
0.113723: elit
0.220094: parse2logic
  0.001489: facts graph types
  0.002498: convert facts graph
    0.000531: to digraph
    0.001918: flatten types (97 concepts)
    0.000036: quantities
  0.000022: process dynamic rules
  0.205794: match
    0.205714: match
      0.000278: querygen
      0.032739: creating graph tensor (124 nodes, 405 edges)
        0.002139: setup
        0.021059: key tensor
        0.001327: target tensor
        0.008100: edge tensor
      0.000081: initializing solutions matrix
      0.172319: loop
      0.000017: postprocessing (MAX MEMORY: 0.009GB)
  0.002609: postprocess solutions
0.000045: multiword mentions
0.000012: ner mentions
0.004676: mention bridge
0.010328: merge bridge
0.033900: knowledge pull
0.019094: reference id
0.200747: reference infer
  0.027365: facts graph types
  0.028804: convert facts graph
    0.004417: to digraph
    0.024176: flatten types (774 concepts)
    0.000187: quantities
  0.011080: process dynamic rules
  0.131235: match
    0.131157: match
      0.009450: querygen
      0.093324: creating graph tensor (1797 nodes, 6452 edges)
        0.037554: setup
        0.005991: key tensor
        0.007788: target tensor
        0.040153: edge tensor
      0.000088: initializing solutions matrix
      0.028073: loop
      0.000031: postprocessing (MAX MEMORY: 1.895GB)
  0.000008: postprocess solutions
0.000014: reference resolution
0.229974: fragment resolution
  0.000427: identify previous emora questions
  0.002055: find answer
  0.227471: sal
0.258879: dialogue infer
  0.027906: facts graph types
  0.030313: convert facts graph
    0.003566: to digraph
    0.026543: flatten types (770 concepts)
    0.000189: quantities
  0.000026: process dynamic rules
  0.194276: match
    0.194191: match
      0.005522: querygen
      0.099357: creating graph tensor (1919 nodes, 7100 edges)
        0.041246: setup
        0.007353: key tensor
        0.008571: target tensor
        0.040157: edge tensor
      0.000089: initializing solutions matrix
      0.089030: loop
      0.000013: postprocessing (MAX MEMORY: 2.275GB)
  0.003586: postprocess solutions
0.056261: apply inferences
  0.005027: apply
  0.001310: update types
  0.000219: operate
  0.049683: sal
0.017051: reference id 2
0.213377: reference infer 2
  0.027876: facts graph types
  0.027732: convert facts graph
    0.003919: to digraph
    0.023602: flatten types (783 concepts)
    0.000188: quantities
  0.011058: process dynamic rules
  0.144057: match
    0.143972: match
      0.008528: querygen
      0.097905: creating graph tensor (1819 nodes, 6551 edges)
        0.038333: setup
        0.006652: key tensor
        0.007951: target tensor
        0.043077: edge tensor
      0.000089: initializing solutions matrix
      0.037215: loop
      0.000029: postprocessing (MAX MEMORY: 1.952GB)
  0.000211: postprocess solutions
0.000015: reference resolution 2
0.049889: fragment resolution 2
  0.000422: identify previous emora questions
  0.049452: sal
0.259790: dialogue infer 2
  0.028015: facts graph types
  0.029977: convert facts graph
    0.003670: to digraph
    0.026105: flatten types (783 concepts)
    0.000188: quantities
  0.000026: process dynamic rules
  0.195446: match
    0.195366: match
      0.004839: querygen
      0.101021: creating graph tensor (1949 nodes, 7214 edges)
        0.041573: setup
        0.006990: key tensor
        0.008739: target tensor
        0.041687: edge tensor
      0.000090: initializing solutions matrix
      0.089219: loop
      0.000013: postprocessing (MAX MEMORY: 2.348GB)
  0.003584: postprocess solutions
0.055261: apply inferences 2
  0.004690: apply
  0.000680: update types
  0.000238: operate
  0.049634: sal
0.009527: prepare template nlg
0.462186: template infer
  0.028013: facts graph types
  0.030413: convert facts graph
    0.003655: to digraph
    0.026552: flatten types (784 concepts)
    0.000190: quantities
  0.000026: process dynamic rules
  0.398757: match
    0.398675: match
      0.005574: querygen
      0.295079: creating graph tensor (1953 nodes, 7230 edges)
        0.042060: setup
        0.199172: key tensor
        0.009228: target tensor
        0.042154: edge tensor
      0.000091: initializing solutions matrix
      0.097678: loop
      0.000015: postprocessing (MAX MEMORY: 2.359GB)
  0.001940: postprocess solutions
0.001816: template fillers
0.000015: response sel
0.000172: response exp
0.000013: response rules
0.112248: response assembler
  0.000015: response assembly
  0.049891: update sal
  0.002069: decay sal
  0.060257: prune
    0.000019: setup
    0.000806: select keep
    0.000097: delete old spans
    0.048723: setup essentials
    0.007058: identify essentials
    0.002650: remove not keep

[2.33 s] Yeah . You should look into it at some point ! Since you like drawing , I think you would definitely have a lot of fun .

User: ARG REQUESTS: []
TRUTH REQUESTS: []
ARG REQUESTS: []
TRUTH REQUESTS: []

Present Options:
	Would you say that you're an artist ? (s: 0.31, pr: 0.10)


0.000019: next turn
0.000014: sentence caser
0.110721: elit
0.460808: parse2logic
  0.001756: facts graph types
  0.002906: convert facts graph
    0.000577: to digraph
    0.002275: flatten types (112 concepts)
    0.000039: quantities
  0.000022: process dynamic rules
  0.445655: match
    0.445573: match
      0.000334: querygen
      0.070324: creating graph tensor (148 nodes, 495 edges)
        0.002712: setup
        0.060197: key tensor
        0.001596: target tensor
        0.005687: edge tensor
      0.000081: initializing solutions matrix
      0.374455: loop
      0.000018: postprocessing (MAX MEMORY: 0.013GB)
  0.002686: postprocess solutions
0.000044: multiword mentions
0.000012: ner mentions
0.003632: mention bridge
0.009098: merge bridge
0.033322: knowledge pull
0.019218: reference id
0.211263: reference infer
  0.027197: facts graph types
  0.027899: convert facts graph
    0.004320: to digraph
    0.023372: flatten types (758 concepts)
    0.000184: quantities
  0.011063: process dynamic rules
  0.142617: match
    0.142535: match
      0.009314: querygen
      0.093070: creating graph tensor (1740 nodes, 6239 edges)
        0.036016: setup
        0.006333: key tensor
        0.007527: target tensor
        0.041347: edge tensor
      0.000088: initializing solutions matrix
      0.039834: loop
      0.000031: postprocessing (MAX MEMORY: 1.773GB)
  0.000199: postprocess solutions
0.000014: reference resolution
0.047897: fragment resolution
  0.000412: identify previous emora questions
  0.047468: sal
0.264342: dialogue infer
  0.026663: facts graph types
  0.028734: convert facts graph
    0.003759: to digraph
    0.024775: flatten types (758 concepts)
    0.000185: quantities
  0.000028: process dynamic rules
  0.202846: match
    0.202766: match
      0.005160: querygen
      0.101131: creating graph tensor (1882 nodes, 6957 edges)
        0.041404: setup
        0.007102: key tensor
        0.008368: target tensor
        0.042253: edge tensor
      0.000090: initializing solutions matrix
      0.096194: loop
      0.000013: postprocessing (MAX MEMORY: 2.185GB)
  0.003462: postprocess solutions
0.052653: apply inferences
  0.004195: apply
  0.000669: update types
  0.000196: operate
  0.047570: sal
0.018827: reference id 2
0.209798: reference infer 2
  0.026667: facts graph types
  0.026808: convert facts graph
    0.003356: to digraph
    0.023236: flatten types (758 concepts)
    0.000192: quantities
  0.011528: process dynamic rules
  0.142346: match
    0.142264: match
      0.008373: querygen
      0.093725: creating graph tensor (1740 nodes, 6239 edges)
        0.037122: setup
        0.005765: key tensor
        0.007743: target tensor
        0.041309: edge tensor
      0.000088: initializing solutions matrix
      0.039846: loop
      0.000031: postprocessing (MAX MEMORY: 1.773GB)
  0.000199: postprocess solutions
0.000014: reference resolution 2
0.047794: fragment resolution 2
  0.000404: identify previous emora questions
  0.047374: sal
0.453475: dialogue infer 2
  0.026597: facts graph types
  0.028916: convert facts graph
    0.003421: to digraph
    0.025295: flatten types (758 concepts)
    0.000186: quantities
  0.000026: process dynamic rules
  0.391727: match
    0.391648: match
      0.005076: querygen
      0.289417: creating graph tensor (1882 nodes, 6957 edges)
        0.227925: setup
        0.006733: key tensor
        0.008737: target tensor
        0.043783: edge tensor
      0.000090: initializing solutions matrix
      0.096872: loop
      0.000013: postprocessing (MAX MEMORY: 2.185GB)
  0.003433: postprocess solutions
0.052870: apply inferences 2
  0.004178: apply
  0.000662: update types
  0.000194: operate
  0.047817: sal
0.009221: prepare template nlg
0.264113: template infer
  0.026623: facts graph types
  0.029061: convert facts graph
    0.003465: to digraph
    0.025398: flatten types (758 concepts)
    0.000183: quantities
  0.000026: process dynamic rules
  0.203732: match
    0.203654: match
      0.005038: querygen
      0.099822: creating graph tensor (1882 nodes, 6957 edges)
        0.040330: setup
        0.006717: key tensor
        0.008523: target tensor
        0.042233: edge tensor
      0.000088: initializing solutions matrix
      0.098449: loop
      0.000015: postprocessing (MAX MEMORY: 2.185GB)
  0.001973: postprocess solutions
0.001724: template fillers
0.000015: response sel
0.000143: response exp
0.000014: response rules
0.106302: response assembler
  0.000015: response assembly
  0.047165: update sal
  0.001954: decay sal
  0.057150: prune
    0.000014: setup
    0.000748: select keep
    0.000102: delete old spans
    0.047242: setup essentials
    0.007018: identify essentials
    0.001602: remove not keep

[2.38 s] Okay . Would you say that you're an artist ?

User: ARG REQUESTS: []
TRUTH REQUESTS: [('emora', 'request_truth', 'wm1840', 'wm1841')]
CURRENT USER CONCEPTS: {'wm2186', 'wm2185', 'wm2187', 'user', 'predicate'}
FRAGMENT REQUEST MERGES: [('wm2185', 'wm1840')]
ARG REQUESTS: []
TRUTH REQUESTS: []

Present Options:
	What has driven you to be the Artist ? (s: 0.34, pr: 0.50)


0.000020: next turn
0.000013: sentence caser
0.110986: elit
0.048015: parse2logic
  0.000350: facts graph types
  0.000756: convert facts graph
    0.000133: to digraph
    0.000590: flatten types (26 concepts)
    0.000021: quantities
  0.000020: process dynamic rules
  0.044358: match
    0.044280: match
      0.000083: querygen
      0.008469: creating graph tensor (30 nodes, 82 edges)
        0.000509: setup
        0.003232: key tensor
        0.000352: target tensor
        0.004333: edge tensor
      0.000074: initializing solutions matrix
      0.035448: loop
      0.000013: postprocessing (MAX MEMORY: 0.001GB)
  0.000463: postprocess solutions
0.000034: multiword mentions
0.000012: ner mentions
0.001546: mention bridge
0.006192: merge bridge
0.032484: knowledge pull
0.019144: reference id
0.197364: reference infer
  0.025563: facts graph types
  0.026690: convert facts graph
    0.003528: to digraph
    0.022960: flatten types (742 concepts)
    0.000179: quantities
  0.011084: process dynamic rules
  0.131540: match
    0.131460: match
      0.009230: querygen
      0.083306: creating graph tensor (1704 nodes, 6117 edges)
        0.035517: setup
        0.005582: key tensor
        0.007596: target tensor
        0.032725: edge tensor
      0.000090: initializing solutions matrix
      0.038596: loop
      0.000031: postprocessing (MAX MEMORY: 1.704GB)
  0.000204: postprocess solutions
0.000014: reference resolution
0.074644: fragment resolution
  0.000417: identify previous emora questions
  0.027843: find answer
  0.046366: sal
0.251805: dialogue infer
  0.025428: facts graph types
  0.028237: convert facts graph
    0.003542: to digraph
    0.024502: flatten types (738 concepts)
    0.000179: quantities
  0.000027: process dynamic rules
  0.191952: match
    0.191872: match
      0.004511: querygen
      0.094441: creating graph tensor (1830 nodes, 6777 edges)
        0.039275: setup
        0.007025: key tensor
        0.008156: target tensor
        0.038087: edge tensor
      0.000089: initializing solutions matrix
      0.092633: loop
      0.000013: postprocessing (MAX MEMORY: 2.072GB)
  0.003607: postprocess solutions
0.055245: apply inferences
  0.006225: apply
  0.000979: update types
  0.000238: operate
  0.047782: sal
0.019759: reference id 2
0.217947: reference infer 2
  0.026588: facts graph types
  0.026666: convert facts graph
    0.003884: to digraph
    0.022574: flatten types (756 concepts)
    0.000185: quantities
  0.012171: process dynamic rules
  0.149835: match
    0.149753: match
      0.009011: querygen
      0.099765: creating graph tensor (1740 nodes, 6252 edges)
        0.036490: setup
        0.006180: key tensor
        0.007568: target tensor
        0.047625: edge tensor
      0.000090: initializing solutions matrix
      0.040653: loop
      0.000032: postprocessing (MAX MEMORY: 1.779GB)
  0.000354: postprocess solutions
0.002464: reference resolution 2
0.047663: fragment resolution 2
  0.000395: identify previous emora questions
  0.047252: sal
0.559441: dialogue infer 2
  0.026446: facts graph types
  0.208787: convert facts graph
    0.003427: to digraph
    0.205145: flatten types (752 concepts)
    0.000198: quantities
  0.000029: process dynamic rules
  0.317731: match
    0.317647: match
      0.005636: querygen
      0.188581: creating graph tensor (1873 nodes, 6938 edges)
        0.041017: setup
        0.007187: key tensor
        0.008618: target tensor
        0.129319: edge tensor
      0.000094: initializing solutions matrix
      0.123132: loop
      0.000013: postprocessing (MAX MEMORY: 2.172GB)
  0.003576: postprocess solutions
0.052847: apply inferences 2
  0.004894: apply
  0.000681: update types
  0.000249: operate
  0.047003: sal
0.009346: prepare template nlg
0.264768: template infer
  0.026535: facts graph types
  0.028744: convert facts graph
    0.003765: to digraph
    0.024781: flatten types (752 concepts)
    0.000182: quantities
  0.000027: process dynamic rules
  0.204857: match
    0.204779: match
      0.005395: querygen
      0.099268: creating graph tensor (1873 nodes, 6938 edges)
        0.040780: setup
        0.007086: key tensor
        0.008255: target tensor
        0.041169: edge tensor
      0.000089: initializing solutions matrix
      0.099788: loop
      0.000015: postprocessing (MAX MEMORY: 2.172GB)
  0.001955: postprocess solutions
0.002292: template fillers
0.000015: response sel
0.000126: response exp
0.000014: response rules
0.105788: response assembler
  0.000014: response assembly
  0.047359: update sal
  0.001956: decay sal
  0.056443: prune
    0.000017: setup
    0.000768: select keep
    0.000094: delete old spans
    0.046372: setup essentials
    0.006965: identify essentials
    0.001618: remove not keep

[2.08 s] Gotcha . What has driven you to be the Artist ?

User: ARG REQUESTS: [('emora', 'request', 'wm2213', 'wm2215')]
TRUTH REQUESTS: []
CURRENT USER CONCEPTS: {'wm2232', 'wm2230', 'user', 'predicate', 'wm2231'}
FRAGMENT REQUEST MERGES: [('wm2230', 'wm2213')]
ARG REQUESTS: []
TRUTH REQUESTS: []

React + Present Options:
	Thank you for sharing your career story with me . People always end up being in different jobs for many different reasons . I have an older friend who planned on becoming a physician in college, but she ended up becoming a consultant. (s: 0.09, pr: 0.50)
	Thank you for sharing your career story with me . People always end up being in different jobs for many different reasons . I have an older friend who planned on becoming a physician in college, but she ended up becoming a consultant. (s: 0.09, pr: 0.50)


0.000019: next turn
0.000013: sentence caser
0.108806: elit
0.046526: parse2logic
  0.000344: facts graph types
  0.000732: convert facts graph
    0.000253: to digraph
    0.000448: flatten types (26 concepts)
    0.000019: quantities
  0.000020: process dynamic rules
  0.043009: match
    0.042931: match
      0.000083: querygen
      0.006578: creating graph tensor (30 nodes, 82 edges)
        0.000488: setup
        0.001320: key tensor
        0.000350: target tensor
        0.004376: edge tensor
      0.000072: initializing solutions matrix
      0.035996: loop
      0.000013: postprocessing (MAX MEMORY: 0.001GB)
  0.000446: postprocess solutions
0.000046: multiword mentions
0.000012: ner mentions
0.001546: mention bridge
0.006071: merge bridge
0.032158: knowledge pull
0.019252: reference id
0.201644: reference infer
  0.025117: facts graph types
  0.026718: convert facts graph
    0.004102: to digraph
    0.022414: flatten types (732 concepts)
    0.000177: quantities
  0.011698: process dynamic rules
  0.135731: match
    0.135651: match
      0.008777: querygen
      0.085098: creating graph tensor (1702 nodes, 6112 edges)
        0.035861: setup
        0.005981: key tensor
        0.007417: target tensor
        0.034158: edge tensor
      0.000087: initializing solutions matrix
      0.041459: loop
      0.000030: postprocessing (MAX MEMORY: 1.701GB)
  0.000201: postprocess solutions
0.000014: reference resolution
0.073936: fragment resolution
  0.000444: identify previous emora questions
  0.027599: find answer
  0.045874: sal
0.255961: dialogue infer
  0.025285: facts graph types
  0.028166: convert facts graph
    0.003335: to digraph
    0.024640: flatten types (731 concepts)
    0.000176: quantities
  0.000026: process dynamic rules
  0.195930: match
    0.195849: match
      0.005084: querygen
      0.098767: creating graph tensor (1834 nodes, 6797 edges)
        0.039188: setup
        0.006402: key tensor
        0.008347: target tensor
        0.042790: edge tensor
      0.000090: initializing solutions matrix
      0.091705: loop
      0.000014: postprocessing (MAX MEMORY: 2.084GB)
  0.003822: postprocess solutions
0.233156: apply inferences
  0.005859: apply
  0.001121: update types
  0.000243: operate
  0.225912: sal
0.019361: reference id 2
0.202344: reference infer 2
  0.026279: facts graph types
  0.027359: convert facts graph
    0.003913: to digraph
    0.023237: flatten types (749 concepts)
    0.000185: quantities
  0.011119: process dynamic rules
  0.135096: match
    0.135011: match
      0.008642: querygen
      0.088339: creating graph tensor (1761 nodes, 6343 edges)
        0.037560: setup
        0.006366: key tensor
        0.007729: target tensor
        0.034931: edge tensor
      0.000101: initializing solutions matrix
      0.037701: loop
      0.000031: postprocessing (MAX MEMORY: 1.830GB)
  0.000197: postprocess solutions
0.000013: reference resolution 2
0.047668: fragment resolution 2
  0.000427: identify previous emora questions
  0.047225: sal
0.378046: dialogue infer 2
  0.026204: facts graph types
  0.029217: convert facts graph
    0.003468: to digraph
    0.025549: flatten types (749 concepts)
    0.000184: quantities
  0.000026: process dynamic rules
  0.316103: match
    0.316021: match
      0.005363: querygen
      0.174568: creating graph tensor (1892 nodes, 7015 edges)
        0.040013: setup
        0.007176: key tensor
        0.008402: target tensor
        0.116542: edge tensor
      0.000092: initializing solutions matrix
      0.135806: loop
      0.000013: postprocessing (MAX MEMORY: 2.219GB)
  0.003785: postprocess solutions
0.052997: apply inferences 2
  0.004828: apply
  0.000662: update types
  0.000247: operate
  0.047240: sal
0.009277: prepare template nlg
0.270360: template infer
  0.026317: facts graph types
  0.028994: convert facts graph
    0.003474: to digraph
    0.025321: flatten types (749 concepts)
    0.000183: quantities
  0.000027: process dynamic rules
  0.210230: match
    0.210151: match
      0.005247: querygen
      0.104495: creating graph tensor (1892 nodes, 7015 edges)
        0.040298: setup
        0.007090: key tensor
        0.008446: target tensor
        0.046604: edge tensor
      0.000090: initializing solutions matrix
      0.100081: loop
      0.000014: postprocessing (MAX MEMORY: 2.219GB)
  0.002197: postprocess solutions
0.002406: template fillers
0.000015: response sel
0.000117: response exp
0.000014: response rules
0.104692: response assembler
  0.000015: response assembly
  0.047304: update sal
  0.001907: decay sal
  0.055451: prune
    0.000017: setup
    0.000768: select keep
    0.000084: delete old spans
    0.046089: setup essentials
    0.006663: identify essentials
    0.001228: remove not keep

[2.07 s] Thank you for sharing your career story with me . People always end up being in different jobs for many different reasons . I have an older friend who planned on becoming a physician in college, but she ended up becoming a consultant.

User: ARG REQUESTS: []
TRUTH REQUESTS: []
ARG REQUESTS: []
TRUTH REQUESTS: []

0.000021: next turn
0.000013: sentence caser
0.111165: elit
0.264871: parse2logic
  0.001079: facts graph types
  0.001992: convert facts graph
    0.000425: to digraph
    0.001525: flatten types (76 concepts)
    0.000029: quantities
  0.000020: process dynamic rules
  0.254876: match
    0.254801: match
      0.000224: querygen
      0.016775: creating graph tensor (99 nodes, 321 edges)
        0.001671: setup
        0.008138: key tensor
        0.000803: target tensor
        0.006075: edge tensor
      0.000077: initializing solutions matrix
      0.237423: loop
      0.000016: postprocessing (MAX MEMORY: 0.006GB)
  0.001770: postprocess solutions
0.000040: multiword mentions
0.000012: ner mentions
0.002701: mention bridge
0.007821: merge bridge
0.033081: knowledge pull
0.019293: reference id
0.211350: reference infer
  0.026584: facts graph types
  0.028032: convert facts graph
    0.004173: to digraph
    0.023654: flatten types (754 concepts)
    0.000182: quantities
  0.010514: process dynamic rules
  0.143754: match
    0.143673: match
      0.009212: querygen
      0.096048: creating graph tensor (1771 nodes, 6374 edges)
        0.036758: setup
        0.006238: key tensor
        0.007572: target tensor
        0.043585: edge tensor
      0.000087: initializing solutions matrix
      0.038096: loop
      0.000029: postprocessing (MAX MEMORY: 1.848GB)
  0.000198: postprocess solutions
0.000015: reference resolution
0.047719: fragment resolution
  0.000404: identify previous emora questions
  0.047298: sal
0.451469: dialogue infer
  0.026807: facts graph types
  0.214085: convert facts graph
    0.187379: to digraph
    0.026499: flatten types (754 concepts)
    0.000189: quantities
  0.000028: process dynamic rules
  0.203762: match
    0.203677: match
      0.005050: querygen
      0.100424: creating graph tensor (1902 nodes, 7046 edges)
        0.041309: setup
        0.006881: key tensor
        0.008542: target tensor
        0.041642: edge tensor
      0.000113: initializing solutions matrix
      0.097889: loop
      0.000013: postprocessing (MAX MEMORY: 2.240GB)
  0.003982: postprocess solutions
0.055782: apply inferences
  0.005452: apply
  0.001248: update types
  0.000176: operate
  0.048884: sal
0.019493: reference id 2
0.205903: reference infer 2
  0.027439: facts graph types
  0.027532: convert facts graph
    0.003412: to digraph
    0.023911: flatten types (766 concepts)
    0.000186: quantities
  0.011055: process dynamic rules
  0.137280: match
    0.137198: match
      0.008662: querygen
      0.089796: creating graph tensor (1800 nodes, 6480 edges)
        0.038550: setup
        0.006501: key tensor
        0.007780: target tensor
        0.035121: edge tensor
      0.000088: initializing solutions matrix
      0.038414: loop
      0.000029: postprocessing (MAX MEMORY: 1.910GB)
  0.000202: postprocess solutions
0.000013: reference resolution 2
0.048613: fragment resolution 2
  0.000417: identify previous emora questions
  0.048179: sal
0.268328: dialogue infer 2
  0.027420: facts graph types
  0.029329: convert facts graph
    0.003846: to digraph
    0.025282: flatten types (766 concepts)
    0.000187: quantities
  0.000026: process dynamic rules
  0.204861: match
    0.204781: match
      0.005270: querygen
      0.103739: creating graph tensor (1931 nodes, 7152 edges)
        0.041873: setup
        0.007524: key tensor
        0.008656: target tensor
        0.043617: edge tensor
      0.000090: initializing solutions matrix
      0.095489: loop
      0.000013: postprocessing (MAX MEMORY: 2.308GB)
  0.003958: postprocess solutions
0.053888: apply inferences 2
  0.005085: apply
  0.000684: update types
  0.000195: operate
  0.047905: sal
0.009469: prepare template nlg
0.455821: template infer
  0.027594: facts graph types
  0.029797: convert facts graph
    0.003685: to digraph
    0.025911: flatten types (766 concepts)
    0.000185: quantities
  0.000025: process dynamic rules
  0.393047: match
    0.392968: match
      0.004701: querygen
      0.289604: creating graph tensor (1931 nodes, 7152 edges)
        0.041372: setup
        0.006871: key tensor
        0.196470: target tensor
        0.042480: edge tensor
      0.000092: initializing solutions matrix
      0.098330: loop
      0.000014: postprocessing (MAX MEMORY: 2.308GB)
  0.002439: postprocess solutions
0.002291: template fillers
0.000016: response sel
0.000375: response exp
0.000014: response rules
0.108878: response assembler
  0.000015: response assembly
  0.049016: update sal
  0.002023: decay sal
  0.057809: prune
    0.000012: setup
    0.000768: select keep
    0.000095: delete old spans
    0.048255: setup essentials
    0.006850: identify essentials
    0.001418: remove not keep

[2.38 s] Yeah . So anyway , I love trying new foods . What food do you like to eat ?

User: ARG REQUESTS: [('emora', 'request', 'wm2305', 'wm2308')]
TRUTH REQUESTS: []
CURRENT USER CONCEPTS: {'wm2322', 'wm2339', 'object', 'wm2323', 'living_thing', 'wm2335', 'wm2312', 'wm2332', 'wm2336', 'wm2324', 'wm2328', 'wm2320', 'wm2381', 'user', 'wm2314', 'prp', 'wm2313', 'unknown_verb', 'wm2315', 'physician', 'now', 'wm2316'}
FRAGMENT REQUEST MERGES: []
ARG REQUESTS: [('emora', 'request', 'wm2305', 'wm2308')]
TRUTH REQUESTS: []
CURRENT USER CONCEPTS: {'wm2322', 'wm2339', 'object', 'wm2323', 'living_thing', 'wm2335', 'wm2312', 'wm2332', 'wm2336', 'wm2324', 'wm2328', 'wm2320', 'wm2381', 'user', 'wm2314', 'prp', 'wm2313', 'unknown_verb', 'wm2315', 'physician', 'now', 'wm2316'}
FRAGMENT REQUEST MERGES: []

0.000028: next turn
0.000015: sentence caser
0.114028: elit
0.337847: parse2logic
  0.002847: facts graph types
  0.004340: convert facts graph
    0.000847: to digraph
    0.003428: flatten types (170 concepts)
    0.000051: quantities
  0.000021: process dynamic rules
  0.314526: match
    0.314443: match
      0.000441: querygen
      0.025641: creating graph tensor (219 nodes, 748 edges)
        0.004069: setup
        0.011105: key tensor
        0.001734: target tensor
        0.008547: edge tensor
      0.000083: initializing solutions matrix
      0.288084: loop
      0.000014: postprocessing (MAX MEMORY: 0.027GB)
  0.005087: postprocess solutions
0.000054: multiword mentions
0.000013: ner mentions
0.005183: mention bridge
0.017719: merge bridge
0.035446: knowledge pull
0.026412: reference id
0.227767: reference infer
  0.029745: facts graph types
  0.029718: convert facts graph
    0.003709: to digraph
    0.025787: flatten types (820 concepts)
    0.000197: quantities
  0.013405: process dynamic rules
  0.151892: match
    0.151810: match
      0.009680: querygen
      0.100511: creating graph tensor (1927 nodes, 6895 edges)
        0.039707: setup
        0.007002: key tensor
        0.008382: target tensor
        0.043471: edge tensor
      0.000087: initializing solutions matrix
      0.041306: loop
      0.000031: postprocessing (MAX MEMORY: 2.166GB)
  0.000365: postprocess solutions
0.000710: reference resolution
0.082722: fragment resolution
  0.000413: identify previous emora questions
  0.030461: find answer
  0.051829: sal
0.287145: dialogue infer
  0.029696: facts graph types
  0.031770: convert facts graph
    0.003776: to digraph
    0.027781: flatten types (819 concepts)
    0.000199: quantities
  0.000028: process dynamic rules
  0.218695: match
    0.218613: match
      0.005810: querygen
      0.117897: creating graph tensor (2074 nodes, 7676 edges)
        0.044347: setup
        0.007535: key tensor
        0.009643: target tensor
        0.054103: edge tensor
      0.000093: initializing solutions matrix
      0.094614: loop
      0.000013: postprocessing (MAX MEMORY: 2.658GB)
  0.003911: postprocess solutions
0.057969: apply inferences
  0.005499: apply
  0.000850: update types
  0.000278: operate
  0.051321: sal
0.023372: reference id 2
0.220426: reference infer 2
  0.029825: facts graph types
  0.029333: convert facts graph
    0.003540: to digraph
    0.025570: flatten types (824 concepts)
    0.000198: quantities
  0.012283: process dynamic rules
  0.146192: match
    0.146111: match
      0.010116: querygen
      0.097070: creating graph tensor (1930 nodes, 6901 edges)
        0.039573: setup
        0.007008: key tensor
        0.008487: target tensor
        0.040144: edge tensor
      0.000086: initializing solutions matrix
      0.038613: loop
      0.000031: postprocessing (MAX MEMORY: 2.170GB)
  0.000201: postprocess solutions
0.000014: reference resolution 2
0.083774: fragment resolution 2
  0.000448: identify previous emora questions
  0.031195: find answer
  0.052113: sal
0.475654: dialogue infer 2
  0.029814: facts graph types
  0.031893: convert facts graph
    0.003740: to digraph
    0.027940: flatten types (824 concepts)
    0.000199: quantities
  0.000027: process dynamic rules
  0.406840: match
    0.406759: match
      0.005826: querygen
      0.306442: creating graph tensor (2082 nodes, 7700 edges)
        0.232448: setup
        0.007951: key tensor
        0.009302: target tensor
        0.054316: edge tensor
      0.000092: initializing solutions matrix
      0.094197: loop
      0.000013: postprocessing (MAX MEMORY: 2.676GB)
  0.003907: postprocess solutions
0.057889: apply inferences 2
  0.004938: apply
  0.000703: update types
  0.000204: operate
  0.051992: sal
0.009763: prepare template nlg
0.292364: template infer
  0.030038: facts graph types
  0.032262: convert facts graph
    0.004011: to digraph
    0.028036: flatten types (824 concepts)
    0.000201: quantities
  0.000025: process dynamic rules
  0.224584: match
    0.224504: match
      0.005895: querygen
      0.118092: creating graph tensor (2082 nodes, 7700 edges)
        0.044230: setup
        0.008194: key tensor
        0.009171: target tensor
        0.054234: edge tensor
      0.000090: initializing solutions matrix
      0.100190: loop
      0.000014: postprocessing (MAX MEMORY: 2.676GB)
  0.002372: postprocess solutions
0.002298: template fillers
0.000015: response sel
0.000405: response exp
0.000015: response rules
0.121316: response assembler
  0.000016: response assembly
  0.052426: update sal
  0.002145: decay sal
  0.066714: prune
    0.000013: setup
    0.000813: select keep
    0.000094: delete old spans
    0.054929: setup essentials
    0.006904: identify essentials
    0.003516: remove not keep

[2.48 s] So , you know, I really enjoy learning about new movies . Do you like movies too ?

User: ARG REQUESTS: []
TRUTH REQUESTS: [('emora', 'request_truth', 'wm2394', 'wm2396')]
CURRENT USER CONCEPTS: {'spaghetti', 'emora', 'wm2426', 'wm2417', 'wm2411', 'prp', 'wm2406', 'wm2413', 'wm2429', 'wm2404', 'wm2416', 'user', 'now', 'food', 'wm2462', 'wm2405'}
FRAGMENT REQUEST MERGES: []
ARG REQUESTS: []
TRUTH REQUESTS: [('emora', 'request_truth', 'wm2394', 'wm2396')]
CURRENT USER CONCEPTS: {'spaghetti', 'emora', 'wm2426', 'wm2417', 'wm2411', 'prp', 'wm2406', 'wm2413', 'wm2429', 'wm2404', 'wm2416', 'user', 'now', 'food', 'wm2462', 'wm2405'}
FRAGMENT REQUEST MERGES: []

Present Options:
	Do you have a favorite streaming service? Believe it or not, I don't have a favorite. I think they all have such great offerings! (s: 0.34, pr: 0.50)
	Is spaghetti your favorite food ? (s: 0.42, pr: 0.10)
	I often cook spaghetti with meatballs at home . It's a quick but delicious dish when I don't know what to eat . (s: 0.16, pr: 0.50)
	Have you ever tried making your own movie? I once made one in class for school. (s: 0.35, pr: 0.10)
	Do you have a favorite movie or tv genre? (s: 0.17, pr: 0.50)
	Speaking of spaghetti , pizza is probably my favorite italian food. I know a lot of people love pepperoni pizza , but have you ever tried hawaiian style pizza? It has pineapple and ham ? It's a interesting flavor , but I love it . (s: 0.21, pr: 0.50)


0.000027: next turn
0.000014: sentence caser
0.114569: elit
0.429013: parse2logic
  0.002684: facts graph types
  0.004544: convert facts graph
    0.000861: to digraph
    0.003618: flatten types (165 concepts)
    0.000051: quantities
  0.000021: process dynamic rules
  0.399471: match
    0.399389: match
      0.000501: querygen
      0.039382: creating graph tensor (242 nodes, 842 edges)
        0.005217: setup
        0.020101: key tensor
        0.001322: target tensor
        0.012529: edge tensor
      0.000082: initializing solutions matrix
      0.359224: loop
      0.000013: postprocessing (MAX MEMORY: 0.034GB)
  0.009560: postprocess solutions
0.000050: multiword mentions
0.000012: ner mentions
0.004702: mention bridge
0.011153: merge bridge
0.035805: knowledge pull
0.026992: reference id
0.243512: reference infer
  0.029730: facts graph types
  0.029843: convert facts graph
    0.003782: to digraph
    0.025834: flatten types (823 concepts)
    0.000202: quantities
  0.013816: process dynamic rules
  0.167351: match
    0.167268: match
      0.009955: querygen
      0.116624: creating graph tensor (1923 nodes, 6871 edges)
        0.040144: setup
        0.006477: key tensor
        0.008317: target tensor
        0.059681: edge tensor
      0.000090: initializing solutions matrix
      0.040375: loop
      0.000031: postprocessing (MAX MEMORY: 2.152GB)
  0.000202: postprocess solutions
0.000015: reference resolution
0.053879: fragment resolution
  0.000479: identify previous emora questions
  0.001152: find answer
  0.052231: sal
0.476806: dialogue infer
  0.030700: facts graph types
  0.032167: convert facts graph
    0.004143: to digraph
    0.027812: flatten types (823 concepts)
    0.000197: quantities
  0.000027: process dynamic rules
  0.406084: match
    0.405990: match
      0.005275: querygen
      0.315488: creating graph tensor (2094 nodes, 7752 edges)
        0.044404: setup
        0.007838: key tensor
        0.009606: target tensor
        0.250929: edge tensor
      0.000093: initializing solutions matrix
      0.084927: loop
      0.000014: postprocessing (MAX MEMORY: 2.711GB)
  0.004519: postprocess solutions
0.065916: apply inferences
  0.009117: apply
  0.001455: update types
  0.000339: operate
  0.054982: sal
0.025408: reference id 2
0.405076: reference infer 2
  0.032038: facts graph types
  0.212208: convert facts graph
    0.184628: to digraph
    0.027342: flatten types (862 concepts)
    0.000209: quantities
  0.013473: process dynamic rules
  0.144172: match
    0.144078: match
      0.010904: querygen
      0.097186: creating graph tensor (2039 nodes, 7297 edges)
        0.042887: setup
        0.006280: key tensor
        0.008923: target tensor
        0.037165: edge tensor
      0.000082: initializing solutions matrix
      0.035674: loop
      0.000032: postprocessing (MAX MEMORY: 2.425GB)
  0.000202: postprocess solutions
0.000014: reference resolution 2
0.056518: fragment resolution 2
  0.000514: identify previous emora questions
  0.001190: find answer
  0.054796: sal
0.284100: dialogue infer 2
  0.032057: facts graph types
  0.033636: convert facts graph
    0.004076: to digraph
    0.029343: flatten types (862 concepts)
    0.000203: quantities
  0.000027: process dynamic rules
  0.209809: match
    0.209729: match
      0.006348: querygen
      0.120214: creating graph tensor (2213 nodes, 8194 edges)
        0.047047: setup
        0.007700: key tensor
        0.010244: target tensor
        0.052896: edge tensor
      0.000085: initializing solutions matrix
      0.082866: loop
      0.000014: postprocessing (MAX MEMORY: 3.029GB)
  0.005204: postprocess solutions
0.070708: apply inferences 2
  0.009513: apply
  0.002367: update types
  0.000224: operate
  0.058583: sal
0.011045: prepare template nlg
0.344037: template infer
  0.034456: facts graph types
  0.035960: convert facts graph
    0.004312: to digraph
    0.031406: flatten types (911 concepts)
    0.000226: quantities
  0.000025: process dynamic rules
  0.266119: match
    0.266040: match
      0.006593: querygen
      0.134684: creating graph tensor (2362 nodes, 8755 edges)
        0.051278: setup
        0.008187: key tensor
        0.011481: target tensor
        0.061072: edge tensor
      0.000086: initializing solutions matrix
      0.124426: loop
      0.000015: postprocessing (MAX MEMORY: 3.456GB)
  0.003776: postprocess solutions
0.002775: template fillers
0.000016: response sel
0.000117: response exp
0.000015: response rules
0.137851: response assembler
  0.000014: response assembly
  0.058735: update sal
  0.002383: decay sal
  0.076704: prune
    0.000014: setup
    0.000938: select keep
    0.000103: delete old spans
    0.061352: setup essentials
    0.007143: identify essentials
    0.006667: remove not keep

[2.80 s] Gotcha . Do you have a favorite streaming service? Believe it or not, I don't have a favorite. I think they all have such great offerings!

User: ARG REQUESTS: [('emora', 'request', 'wm2479', 'wm2480')]
TRUTH REQUESTS: []
CURRENT USER CONCEPTS: {'wm2531', 'wm2532', 'wm2540', 'meatball', 'user', 'now', 'wm2541', 'prp', 'wm2542'}
FRAGMENT REQUEST MERGES: []
ARG REQUESTS: [('emora', 'request', 'wm2479', 'wm2480')]
TRUTH REQUESTS: []
CURRENT USER CONCEPTS: {'wm2531', 'wm2532', 'wm2540', 'meatball', 'user', 'now', 'wm2541', 'prp', 'wm2542'}
FRAGMENT REQUEST MERGES: []

Present Options:
	Is meatball your favorite food ? (s: 0.38, pr: 0.10)
	Is spaghetti your favorite food ? (s: 0.31, pr: 0.10)
	Is Meatball your favorite food ? (s: 0.38, pr: 0.10)
	Have you ever tried making your own movie? I once made one in class for school. (s: 0.28, pr: 0.10)


0.000019: next turn
0.000013: sentence caser
0.110907: elit
0.207533: parse2logic
  0.001255: facts graph types
  0.002127: convert facts graph
    0.000385: to digraph
    0.001697: flatten types (80 concepts)
    0.000032: quantities
  0.000021: process dynamic rules
  0.197117: match
    0.197038: match
      0.000270: querygen
      0.015700: creating graph tensor (112 nodes, 369 edges)
        0.002087: setup
        0.007529: key tensor
        0.000695: target tensor
        0.005278: edge tensor
      0.000076: initializing solutions matrix
      0.180695: loop
      0.000015: postprocessing (MAX MEMORY: 0.007GB)
  0.001592: postprocess solutions
0.000045: multiword mentions
0.000012: ner mentions
0.002746: mention bridge
0.007620: merge bridge
0.033954: knowledge pull
0.025507: reference id
0.401592: reference infer
  0.027479: facts graph types
  0.028868: convert facts graph
    0.003738: to digraph
    0.024911: flatten types (787 concepts)
    0.000192: quantities
  0.014022: process dynamic rules
  0.328259: match
    0.328175: match
      0.009989: querygen
      0.281548: creating graph tensor (1853 nodes, 6625 edges)
        0.228631: setup
        0.006569: key tensor
        0.007958: target tensor
        0.036411: edge tensor
      0.000089: initializing solutions matrix
      0.036315: loop
      0.000032: postprocessing (MAX MEMORY: 2.000GB)
  0.000208: postprocess solutions
0.000015: reference resolution
0.079879: fragment resolution
  0.000496: identify previous emora questions
  0.028760: find answer
  0.050604: sal
0.263662: dialogue infer
  0.027831: facts graph types
  0.030877: convert facts graph
    0.003558: to digraph
    0.027115: flatten types (787 concepts)
    0.000190: quantities
  0.000027: process dynamic rules
  0.197309: match
    0.197230: match
      0.005858: querygen
      0.104898: creating graph tensor (2028 nodes, 7522 edges)
        0.043026: setup
        0.007531: key tensor
        0.009077: target tensor
        0.043130: edge tensor
      0.000088: initializing solutions matrix
      0.086172: loop
      0.000014: postprocessing (MAX MEMORY: 2.551GB)
  0.004772: postprocess solutions
0.060377: apply inferences
  0.007965: apply
  0.000714: update types
  0.000191: operate
  0.051486: sal
0.025599: reference id 2
0.216038: reference infer 2
  0.028423: facts graph types
  0.028700: convert facts graph
    0.004040: to digraph
    0.024445: flatten types (795 concepts)
    0.000190: quantities
  0.013966: process dynamic rules
  0.142309: match
    0.142226: match
      0.010264: querygen
      0.091191: creating graph tensor (1885 nodes, 6741 edges)
        0.038652: setup
        0.006067: key tensor
        0.008183: target tensor
        0.036421: edge tensor
      0.000088: initializing solutions matrix
      0.040441: loop
      0.000034: postprocessing (MAX MEMORY: 2.070GB)
  0.000200: postprocess solutions
0.000014: reference resolution 2
0.080327: fragment resolution 2
  0.000511: identify previous emora questions
  0.029265: find answer
  0.050532: sal
0.273488: dialogue infer 2
  0.028243: facts graph types
  0.031597: convert facts graph
    0.003926: to digraph
    0.027464: flatten types (795 concepts)
    0.000192: quantities
  0.000026: process dynamic rules
  0.205843: match
    0.205762: match
      0.005466: querygen
      0.110061: creating graph tensor (2066 nodes, 7670 edges)
        0.043982: setup
        0.007712: key tensor
        0.009294: target tensor
        0.046769: edge tensor
      0.000093: initializing solutions matrix
      0.089931: loop
      0.000014: postprocessing (MAX MEMORY: 2.652GB)
  0.004788: postprocess solutions
0.058785: apply inferences 2
  0.006846: apply
  0.000719: update types
  0.000207: operate
  0.050992: sal
0.009816: prepare template nlg
0.475569: template infer
  0.028408: facts graph types
  0.212036: convert facts graph
    0.003657: to digraph
    0.208156: flatten types (795 concepts)
    0.000205: quantities
  0.000028: process dynamic rules
  0.229772: match
    0.229688: match
      0.006181: querygen
      0.117862: creating graph tensor (2066 nodes, 7670 edges)
        0.045268: setup
        0.007771: key tensor
        0.009257: target tensor
        0.053288: edge tensor
      0.000090: initializing solutions matrix
      0.105312: loop
      0.000014: postprocessing (MAX MEMORY: 2.652GB)
  0.002173: postprocess solutions
0.002264: template fillers
0.000015: response sel
0.000140: response exp
0.000014: response rules
0.115641: response assembler
  0.000015: response assembly
  0.051667: update sal
  0.002079: decay sal
  0.061865: prune
    0.000013: setup
    0.000791: select keep
    0.000103: delete old spans
    0.051945: setup essentials
    0.007304: identify essentials
    0.001278: remove not keep

[2.45 s] Yeah . Is meatball your favorite food ?

User: ARG REQUESTS: []
TRUTH REQUESTS: [('emora', 'request_truth', 'wm2567', 'wm2568')]
CURRENT USER CONCEPTS: {'emora', 'wm2592', 'wm2586', 'wm2581', 'wm2585', 'wm2580', 'wm2587', 'user', 'now', 'predicate', 'prp'}
FRAGMENT REQUEST MERGES: [('wm2585', 'wm2567')]
[WARNING] Mismatched confidence between wm2585 and wm2567 on merge!
ARG REQUESTS: []
TRUTH REQUESTS: []

React + Present Options:
	Ah , I see . What food do you like then ? (s: 0.37, pr: 0.50)


Present Options:
	Is spaghetti your favorite food ? (s: 0.34, pr: 0.10)
	Have you ever tried making your own movie? I once made one in class for school. (s: 0.32, pr: 0.10)


0.000019: next turn
0.000014: sentence caser
0.111863: elit
0.226394: parse2logic
  0.001406: facts graph types
  0.002486: convert facts graph
    0.000533: to digraph
    0.001903: flatten types (96 concepts)
    0.000036: quantities
  0.000022: process dynamic rules
  0.214615: match
    0.214534: match
      0.000267: querygen
      0.024043: creating graph tensor (124 nodes, 405 edges)
        0.002266: setup
        0.009038: key tensor
        0.001258: target tensor
        0.011375: edge tensor
      0.000078: initializing solutions matrix
      0.189854: loop
      0.000015: postprocessing (MAX MEMORY: 0.009GB)
  0.001840: postprocess solutions
0.000050: multiword mentions
0.000012: ner mentions
0.002981: mention bridge
0.007346: merge bridge
0.035441: knowledge pull
0.025414: reference id
0.229087: reference infer
  0.029187: facts graph types
  0.030313: convert facts graph
    0.004633: to digraph
    0.025460: flatten types (818 concepts)
    0.000195: quantities
  0.013490: process dynamic rules
  0.153332: match
    0.153253: match
      0.010509: querygen
      0.102504: creating graph tensor (1937 nodes, 6928 edges)
        0.040972: setup
        0.007002: key tensor
        0.008258: target tensor
        0.044285: edge tensor
      0.000087: initializing solutions matrix
      0.039920: loop
      0.000034: postprocessing (MAX MEMORY: 2.187GB)
  0.000201: postprocess solutions
0.000015: reference resolution
0.054115: fragment resolution
  0.000512: identify previous emora questions
  0.002066: find answer
  0.051519: sal
0.277945: dialogue infer
  0.029068: facts graph types
  0.031747: convert facts graph
    0.003711: to digraph
    0.027819: flatten types (814 concepts)
    0.000199: quantities
  0.000035: process dynamic rules
  0.209455: match
    0.209370: match
      0.005754: querygen
      0.111394: creating graph tensor (2095 nodes, 7769 edges)
        0.044665: setup
        0.007647: key tensor
        0.009497: target tensor
        0.047305: edge tensor
      0.000089: initializing solutions matrix
      0.091924: loop
      0.000013: postprocessing (MAX MEMORY: 2.721GB)
  0.004683: postprocess solutions
0.060757: apply inferences
  0.007413: apply
  0.000725: update types
  0.000244: operate
  0.052355: sal
0.025432: reference id 2
0.412611: reference infer 2
  0.029341: facts graph types
  0.029184: convert facts graph
    0.003568: to digraph
    0.025393: flatten types (819 concepts)
    0.000197: quantities
  0.013628: process dynamic rules
  0.337555: match
    0.337469: match
      0.010658: querygen
      0.287615: creating graph tensor (1934 nodes, 6921 edges)
        0.040199: setup
        0.195181: key tensor
        0.008762: target tensor
        0.041244: edge tensor
      0.000090: initializing solutions matrix
      0.038869: loop
      0.000034: postprocessing (MAX MEMORY: 2.182GB)
  0.000209: postprocess solutions
0.000014: reference resolution 2
0.053189: fragment resolution 2
  0.000519: identify previous emora questions
  0.052653: sal
0.284789: dialogue infer 2
  0.029592: facts graph types
  0.032266: convert facts graph
    0.003747: to digraph
    0.028306: flatten types (819 concepts)
    0.000197: quantities
  0.000040: process dynamic rules
  0.215084: match
    0.215004: match
      0.005971: querygen
      0.116880: creating graph tensor (2113 nodes, 7838 edges)
        0.045641: setup
        0.007761: key tensor
        0.009541: target tensor
        0.051661: edge tensor
      0.000091: initializing solutions matrix
      0.091846: loop
      0.000014: postprocessing (MAX MEMORY: 2.770GB)
  0.004713: postprocess solutions
0.060199: apply inferences 2
  0.007416: apply
  0.000734: update types
  0.000245: operate
  0.051784: sal
0.010075: prepare template nlg
0.286840: template infer
  0.029335: facts graph types
  0.032160: convert facts graph
    0.003866: to digraph
    0.028082: flatten types (820 concepts)
    0.000197: quantities
  0.000025: process dynamic rules
  0.220109: match
    0.220029: match
      0.005924: querygen
      0.111111: creating graph tensor (2116 nodes, 7850 edges)
        0.044768: setup
        0.007774: key tensor
        0.009434: target tensor
        0.046924: edge tensor
      0.000088: initializing solutions matrix
      0.102666: loop
      0.000014: postprocessing (MAX MEMORY: 2.778GB)
  0.002219: postprocess solutions
0.002194: template fillers
0.000015: response sel
0.000147: response exp
0.000014: response rules
0.120610: response assembler
  0.000015: response assembly
  0.052856: update sal
  0.002180: decay sal
  0.065544: prune
    0.000017: setup
    0.000833: select keep
    0.000103: delete old spans
    0.053346: setup essentials
    0.007435: identify essentials
    0.003186: remove not keep

[2.29 s] Ah , I see . What food do you like then ?

User: ARG REQUESTS: [('emora', 'request', 'wm2622', 'wm2625')]
TRUTH REQUESTS: []
CURRENT USER CONCEPTS: {'wm2635', 'user', 'wm2633', 'predicate', 'wm2634'}
FRAGMENT REQUEST MERGES: []
ARG REQUESTS: [('emora', 'request', 'wm2622', 'wm2625')]
TRUTH REQUESTS: []
CURRENT USER CONCEPTS: {'wm2635', 'user', 'wm2633', 'predicate', 'wm2634'}
FRAGMENT REQUEST MERGES: []

Present Options:
	Is spaghetti your favorite food ? (s: 0.26, pr: 0.10)
	Have you ever tried making your own movie? I once made one in class for school. (s: 0.28, pr: 0.10)


0.000019: next turn
0.000012: sentence caser
0.110547: elit
0.068875: parse2logic
  0.000380: facts graph types
  0.000797: convert facts graph
    0.000133: to digraph
    0.000623: flatten types (26 concepts)
    0.000021: quantities
  0.000021: process dynamic rules
  0.065184: match
    0.065105: match
      0.000088: querygen
      0.027915: creating graph tensor (30 nodes, 82 edges)
        0.000500: setup
        0.023998: key tensor
        0.000378: target tensor
        0.002993: edge tensor
      0.000072: initializing solutions matrix
      0.036824: loop
      0.000013: postprocessing (MAX MEMORY: 0.001GB)
  0.000439: postprocess solutions
0.000033: multiword mentions
0.000011: ner mentions
0.001560: mention bridge
0.006558: merge bridge
0.033015: knowledge pull
0.021921: reference id
0.209591: reference infer
  0.026946: facts graph types
  0.028401: convert facts graph
    0.004098: to digraph
    0.024093: flatten types (764 concepts)
    0.000187: quantities
  0.012388: process dynamic rules
  0.139224: match
    0.139143: match
      0.009812: querygen
      0.089881: creating graph tensor (1826 nodes, 6551 edges)
        0.037816: setup
        0.006008: key tensor
        0.007946: target tensor
        0.036330: edge tensor
      0.000086: initializing solutions matrix
      0.039137: loop
      0.000031: postprocessing (MAX MEMORY: 1.954GB)
  0.000198: postprocess solutions
0.000015: reference resolution
0.076992: fragment resolution
  0.000567: identify previous emora questions
  0.027778: find answer
  0.048630: sal
0.453884: dialogue infer
  0.027062: facts graph types
  0.029826: convert facts graph
    0.003446: to digraph
    0.026176: flatten types (764 concepts)
    0.000189: quantities
  0.000028: process dynamic rules
  0.389452: match
    0.389372: match
      0.005818: querygen
      0.292240: creating graph tensor (1986 nodes, 7375 edges)
        0.230215: setup
        0.007871: key tensor
        0.008969: target tensor
        0.042938: edge tensor
      0.000091: initializing solutions matrix
      0.091003: loop
      0.000014: postprocessing (MAX MEMORY: 2.451GB)
  0.004497: postprocess solutions
0.057506: apply inferences
  0.006793: apply
  0.000707: update types
  0.000326: operate
  0.049657: sal
0.022081: reference id 2
0.223098: reference infer 2
  0.027119: facts graph types
  0.028058: convert facts graph
    0.003847: to digraph
    0.024001: flatten types (766 concepts)
    0.000185: quantities
  0.012317: process dynamic rules
  0.152997: match
    0.152911: match
      0.009887: querygen
      0.102277: creating graph tensor (1828 nodes, 6553 edges)
        0.038163: setup
        0.006140: key tensor
        0.008012: target tensor
        0.048011: edge tensor
      0.000089: initializing solutions matrix
      0.040421: loop
      0.000032: postprocessing (MAX MEMORY: 1.955GB)
  0.000201: postprocess solutions
0.000015: reference resolution 2
0.077305: fragment resolution 2
  0.000561: identify previous emora questions
  0.027992: find answer
  0.048733: sal
0.272918: dialogue infer 2
  0.026964: facts graph types
  0.029914: convert facts graph
    0.003492: to digraph
    0.026209: flatten types (766 concepts)
    0.000198: quantities
  0.000026: process dynamic rules
  0.208772: match
    0.208694: match
      0.005496: querygen
      0.107862: creating graph tensor (1988 nodes, 7377 edges)
        0.042852: setup
        0.007776: key tensor
        0.008877: target tensor
        0.046156: edge tensor
      0.000092: initializing solutions matrix
      0.095028: loop
      0.000014: postprocessing (MAX MEMORY: 2.453GB)
  0.004476: postprocess solutions
0.056902: apply inferences 2
  0.006393: apply
  0.000701: update types
  0.000234: operate
  0.049555: sal
0.009677: prepare template nlg
0.272455: template infer
  0.027052: facts graph types
  0.030298: convert facts graph
    0.003503: to digraph
    0.026582: flatten types (766 concepts)
    0.000198: quantities
  0.000026: process dynamic rules
  0.210026: match
    0.209945: match
      0.005438: querygen
      0.105576: creating graph tensor (1988 nodes, 7377 edges)
        0.042357: setup
        0.007547: key tensor
        0.008915: target tensor
        0.044619: edge tensor
      0.000088: initializing solutions matrix
      0.098604: loop
      0.000014: postprocessing (MAX MEMORY: 2.453GB)
  0.002214: postprocess solutions
0.002142: template fillers
0.000015: response sel
0.000163: response exp
0.000015: response rules
0.109854: response assembler
  0.000014: response assembly
  0.049137: update sal
  0.002035: decay sal
  0.058652: prune
    0.000017: setup
    0.000774: select keep
    0.000101: delete old spans
    0.048603: setup essentials
    0.007569: identify essentials
    0.000974: remove not keep

[2.09 s] Yeah . Have you ever tried making your own movie? I once made one in class for school.

User: ARG REQUESTS: []
TRUTH REQUESTS: [('emora', 'request_truth', 'wm2473', 'wm2474')]
CURRENT USER CONCEPTS: {'wm2658', 'wm2657', 'movie', 'wm2660', 'wm2668', 'wm2666', 'user', 'now', 'prp'}
FRAGMENT REQUEST MERGES: []
ARG REQUESTS: []
TRUTH REQUESTS: [('emora', 'request_truth', 'wm2473', 'wm2474')]
CURRENT USER CONCEPTS: {'wm2658', 'wm2657', 'movie', 'wm2660', 'wm2668', 'wm2666', 'user', 'now', 'prp'}
FRAGMENT REQUEST MERGES: []

React + Present Options:
	What is your favorite movie? My favorite movie is the first Iron Man. (s: 0.58, pr: 1.00)


Present Options:
	Is spaghetti your favorite food ? (s: 0.27, pr: 0.10)


0.000031: next turn
0.000015: sentence caser
0.109724: elit
0.279405: parse2logic
  0.001216: facts graph types
  0.002032: convert facts graph
    0.000366: to digraph
    0.001619: flatten types (77 concepts)
    0.000033: quantities
  0.000021: process dynamic rules
  0.269516: match
    0.269441: match
      0.000231: querygen
      0.042908: creating graph tensor (105 nodes, 343 edges)
        0.001786: setup
        0.032559: key tensor
        0.000892: target tensor
        0.007578: edge tensor
      0.000094: initializing solutions matrix
      0.225912: loop
      0.000015: postprocessing (MAX MEMORY: 0.007GB)
  0.001566: postprocess solutions
0.000045: multiword mentions
0.000012: ner mentions
0.002964: mention bridge
0.008182: merge bridge
0.033714: knowledge pull
0.022019: reference id
0.395397: reference infer
  0.027262: facts graph types
  0.206579: convert facts graph
    0.181900: to digraph
    0.024455: flatten types (779 concepts)
    0.000196: quantities
  0.013061: process dynamic rules
  0.145720: match
    0.145632: match
      0.010100: querygen
      0.095539: creating graph tensor (1876 nodes, 6737 edges)
        0.039713: setup
        0.006729: key tensor
        0.008119: target tensor
        0.039073: edge tensor
      0.000087: initializing solutions matrix
      0.039668: loop
      0.000034: postprocessing (MAX MEMORY: 2.065GB)
  0.000204: postprocess solutions
0.000015: reference resolution
0.051089: fragment resolution
  0.000520: identify previous emora questions
  0.001105: find answer
  0.049446: sal
0.282859: dialogue infer
  0.027747: facts graph types
  0.031045: convert facts graph
    0.003796: to digraph
    0.027045: flatten types (779 concepts)
    0.000190: quantities
  0.000027: process dynamic rules
  0.216280: match
    0.216200: match
      0.005300: querygen
      0.117146: creating graph tensor (2036 nodes, 7561 edges)
        0.044531: setup
        0.007828: key tensor
        0.009318: target tensor
        0.052705: edge tensor
      0.000097: initializing solutions matrix
      0.093433: loop
      0.000014: postprocessing (MAX MEMORY: 2.576GB)
  0.004520: postprocess solutions
0.059686: apply inferences
  0.008030: apply
  0.000886: update types
  0.000399: operate
  0.050350: sal
0.024196: reference id 2
0.222114: reference infer 2
  0.027987: facts graph types
  0.028339: convert facts graph
    0.003390: to digraph
    0.024736: flatten types (786 concepts)
    0.000190: quantities
  0.013114: process dynamic rules
  0.149957: match
    0.149875: match
      0.009692: querygen
      0.099257: creating graph tensor (1890 nodes, 6784 edges)
        0.039566: setup
        0.006820: key tensor
        0.008195: target tensor
        0.042650: edge tensor
      0.000089: initializing solutions matrix
      0.040603: loop
      0.000034: postprocessing (MAX MEMORY: 2.095GB)
  0.000248: postprocess solutions
0.000167: reference resolution 2
0.051498: fragment resolution 2
  0.000534: identify previous emora questions
  0.001090: find answer
  0.049856: sal
0.473819: dialogue infer 2
  0.028081: facts graph types
  0.030869: convert facts graph
    0.003559: to digraph
    0.027104: flatten types (786 concepts)
    0.000191: quantities
  0.000026: process dynamic rules
  0.407125: match
    0.407047: match
      0.005569: querygen
      0.297921: creating graph tensor (2053 nodes, 7619 edges)
        0.232264: setup
        0.008167: key tensor
        0.009317: target tensor
        0.045739: edge tensor
      0.000091: initializing solutions matrix
      0.103247: loop
      0.000014: postprocessing (MAX MEMORY: 2.617GB)
  0.004695: postprocess solutions
0.059295: apply inferences 2
  0.006998: apply
  0.000711: update types
  0.000199: operate
  0.051368: sal
0.009804: prepare template nlg
0.288609: template infer
  0.027997: facts graph types
  0.031522: convert facts graph
    0.003919: to digraph
    0.027398: flatten types (786 concepts)
    0.000190: quantities
  0.000026: process dynamic rules
  0.223625: match
    0.223544: match
      0.005252: querygen
      0.115712: creating graph tensor (2053 nodes, 7619 edges)
        0.044540: setup
        0.007914: key tensor
        0.009135: target tensor
        0.051834: edge tensor
      0.000092: initializing solutions matrix
      0.102251: loop
      0.000014: postprocessing (MAX MEMORY: 2.617GB)
  0.002454: postprocess solutions
0.002159: template fillers
0.000015: response sel
0.000098: response exp
0.000013: response rules
0.114049: response assembler
  0.000015: response assembly
  0.050929: update sal
  0.002035: decay sal
  0.061054: prune
    0.000013: setup
    0.000798: select keep
    0.000111: delete old spans
    0.050700: setup essentials
    0.007555: identify essentials
    0.001455: remove not keep

[2.49 s] What is your favorite movie? My favorite movie is the first Iron Man.

User: ARG REQUESTS: [('emora', 'request', 'wm2660', 'wm2694')]
TRUTH REQUESTS: []
CURRENT USER CONCEPTS: {'wm2710', 'wm2704', 'wm2703', 'wm2717', 'wm2719', 'wm2715', 'iron_man', 'wm2723', 'wm2718', 'user', 'now', 'unknown_other', 'prp'}
FRAGMENT REQUEST MERGES: [('iron_man', 'wm2660')]
ARG REQUESTS: []
TRUTH REQUESTS: []

React + Present Options:
	Iron Man is my favorite Marvel character! His snarkiness inspired my sense of humor as a child. What's your favorite of the Iron Man movies? (s: 0.58, pr: 1.00)
	Iron Man is my favorite Marvel character! His snarkiness inspired my sense of humor as a child. What's your favorite of the Iron Man movies? (s: 0.58, pr: 1.00)
	Iron Man is my favorite Marvel character! His snarkiness inspired my sense of humor as a child. What's your favorite of the Iron Man movies? (s: 0.56, pr: 1.00)
	Iron Man is my favorite Marvel character! His snarkiness inspired my sense of humor as a child. What's your favorite of the Iron Man movies? (s: 0.56, pr: 1.00)
	I haven't heard of that before. Why is it your favorite? (s: 0.35, pr: 1.00)
	I haven't heard of that before. Why is it your favorite? (s: 0.35, pr: 1.00)
	I haven't heard of that before. Why is it your favorite? (s: 0.35, pr: 1.00)
	I haven't heard of that before. Why is it your favorite? (s: 0.35, pr: 1.00)
	I haven't heard of that before. Why is it your favorite? (s: 0.33, pr: 1.00)
	I haven't heard of that before. Why is it your favorite? (s: 0.33, pr: 1.00)
	I haven't heard of that before. Why is it your favorite? (s: 0.33, pr: 1.00)
	I haven't heard of that before. Why is it your favorite? (s: 0.33, pr: 1.00)


Present Options:
	Is spaghetti your favorite food ? (s: 0.23, pr: 0.10)


0.000020: next turn
0.000014: sentence caser
0.110275: elit
0.550317: parse2logic
  0.001817: facts graph types
  0.003126: convert facts graph
    0.000618: to digraph
    0.002453: flatten types (117 concepts)
    0.000041: quantities
  0.000022: process dynamic rules
  0.534735: match
    0.534657: match
      0.000336: querygen
      0.244735: creating graph tensor (160 nodes, 534 edges)
        0.002831: setup
        0.231856: key tensor
        0.001751: target tensor
        0.008158: edge tensor
      0.000083: initializing solutions matrix
      0.289166: loop
      0.000016: postprocessing (MAX MEMORY: 0.014GB)
  0.002402: postprocess solutions
0.000139: multiword mentions
0.000014: ner mentions
0.003922: mention bridge
0.013976: merge bridge
0.035037: knowledge pull
0.026035: reference id
0.229496: reference infer
  0.028960: facts graph types
  0.029830: convert facts graph
    0.003809: to digraph
    0.025787: flatten types (809 concepts)
    0.000209: quantities
  0.013109: process dynamic rules
  0.154866: match
    0.154767: match
      0.009718: querygen
      0.103369: creating graph tensor (1941 nodes, 6967 edges)
        0.040998: setup
        0.007181: key tensor
        0.008428: target tensor
        0.044665: edge tensor
      0.000088: initializing solutions matrix
      0.041360: loop
      0.000034: postprocessing (MAX MEMORY: 2.209GB)
  0.000250: postprocess solutions
0.000153: reference resolution
0.082397: fragment resolution
  0.000493: identify previous emora questions
  0.030818: find answer
  0.051068: sal
0.285012: dialogue infer
  0.028778: facts graph types
  0.032912: convert facts graph
    0.004125: to digraph
    0.028578: flatten types (807 concepts)
    0.000194: quantities
  0.000028: process dynamic rules
  0.215492: match
    0.215415: match
      0.005171: querygen
      0.115476: creating graph tensor (2095 nodes, 7770 edges)
        0.045511: setup
        0.007914: key tensor
        0.009283: target tensor
        0.050439: edge tensor
      0.000089: initializing solutions matrix
      0.094467: loop
      0.000014: postprocessing (MAX MEMORY: 2.722GB)
  0.004829: postprocess solutions
0.062592: apply inferences
  0.009009: apply
  0.000885: update types
  0.000492: operate
  0.052184: sal
0.024852: reference id 2
0.407523: reference infer 2
  0.029357: facts graph types
  0.212269: convert facts graph
    0.004109: to digraph
    0.207922: flatten types (817 concepts)
    0.000211: quantities
  0.013314: process dynamic rules
  0.149609: match
    0.149520: match
      0.010985: querygen
      0.098725: creating graph tensor (1958 nodes, 7028 edges)
        0.040957: setup
        0.007173: key tensor
        0.008517: target tensor
        0.040041: edge tensor
      0.000087: initializing solutions matrix
      0.039489: loop
      0.000032: postprocessing (MAX MEMORY: 2.248GB)
  0.000252: postprocess solutions
0.000182: reference resolution 2
0.052522: fragment resolution 2
  0.000499: identify previous emora questions
  0.052007: sal
0.290850: dialogue infer 2
  0.029554: facts graph types
  0.032579: convert facts graph
    0.004129: to digraph
    0.028224: flatten types (817 concepts)
    0.000211: quantities
  0.000026: process dynamic rules
  0.220430: match
    0.220353: match
      0.005253: querygen
      0.112971: creating graph tensor (2124 nodes, 7874 edges)
        0.045308: setup
        0.008107: key tensor
        0.009631: target tensor
        0.047572: edge tensor
      0.000088: initializing solutions matrix
      0.101825: loop
      0.000014: postprocessing (MAX MEMORY: 2.795GB)
  0.005189: postprocess solutions
0.067991: apply inferences 2
  0.011806: apply
  0.000985: update types
  0.000202: operate
  0.054978: sal
0.010173: prepare template nlg
0.363261: template infer
  0.031119: facts graph types
  0.033995: convert facts graph
    0.004216: to digraph
    0.029546: flatten types (853 concepts)
    0.000217: quantities
  0.000026: process dynamic rules
  0.290966: match
    0.290889: match
      0.006435: querygen
      0.122760: creating graph tensor (2217 nodes, 8222 edges)
        0.047367: setup
        0.008376: key tensor
        0.009988: target tensor
        0.054512: edge tensor
      0.000093: initializing solutions matrix
      0.161346: loop
      0.000015: postprocessing (MAX MEMORY: 3.047GB)
  0.003786: postprocess solutions
0.003191: template fillers
0.000016: response sel
0.000098: response exp
0.000014: response rules
0.128386: response assembler
  0.000015: response assembly
  0.054929: update sal
  0.002257: decay sal
  0.071168: prune
    0.000013: setup
    0.000848: select keep
    0.000130: delete old spans
    0.056794: setup essentials
    0.008044: identify essentials
    0.004885: remove not keep

[2.75 s] Iron Man is my favorite Marvel character! His snarkiness inspired my sense of humor as a child. What's your favorite of the Iron Man movies?

User: ARG REQUESTS: []
TRUTH REQUESTS: []
ARG REQUESTS: []
TRUTH REQUESTS: []

React + Present Options:
	I haven't heard of that before. Why is it your favorite? (s: 0.40, pr: 1.00)
	I haven't heard of that before. Why is it your favorite? (s: 0.42, pr: 1.00)
	I haven't heard of that before. Why is it your favorite? (s: 0.40, pr: 1.00)
	I haven't heard of that before. Why is it your favorite? (s: 0.42, pr: 1.00)
	I haven't heard of that before. Why is it your favorite? (s: 0.37, pr: 1.00)
	I haven't heard of that before. Why is it your favorite? (s: 0.39, pr: 1.00)
	I haven't heard of that before. Why is it your favorite? (s: 0.37, pr: 1.00)
	I haven't heard of that before. Why is it your favorite? (s: 0.39, pr: 1.00)


Present Options:
	Is spaghetti your favorite food ? (s: 0.16, pr: 0.10)


0.000030: next turn
0.000016: sentence caser
0.116132: elit
0.416071: parse2logic
  0.005802: facts graph types
  0.008195: convert facts graph
    0.001606: to digraph
    0.006488: flatten types (310 concepts)
    0.000087: quantities
  0.000022: process dynamic rules
  0.370798: match
    0.370714: match
      0.001524: querygen
      0.022002: creating graph tensor (414 nodes, 1460 edges)
        0.007978: setup
        0.001748: key tensor
        0.002442: target tensor
        0.009499: edge tensor
      0.000088: initializing solutions matrix
      0.346905: loop
      0.000013: postprocessing (MAX MEMORY: 0.293GB)
  0.008467: postprocess solutions
0.000187: multiword mentions
0.000118: ner mentions
0.011275: mention bridge
0.028632: merge bridge
0.039006: knowledge pull
0.045966: reference id
0.421512: reference infer
  0.034158: facts graph types
  0.032259: convert facts graph
    0.004058: to digraph
    0.027965: flatten types (902 concepts)
    0.000210: quantities
  0.203061: process dynamic rules
  0.148796: match
    0.148712: match
      0.012574: querygen
      0.106044: creating graph tensor (2096 nodes, 7425 edges)
        0.043292: setup
        0.007569: key tensor
        0.009331: target tensor
        0.043308: edge tensor
      0.000095: initializing solutions matrix
      0.029759: loop
      0.000035: postprocessing (MAX MEMORY: 2.519GB)
  0.000328: postprocess solutions
0.001379: reference resolution
0.057580: fragment resolution
  0.000481: identify previous emora questions
  0.057081: sal
0.301710: dialogue infer
  0.034772: facts graph types
  0.034854: convert facts graph
    0.004089: to digraph
    0.030538: flatten types (900 concepts)
    0.000212: quantities
  0.000026: process dynamic rules
  0.224278: match
    0.224202: match
      0.006416: querygen
      0.122811: creating graph tensor (2278 nodes, 8410 edges)
        0.048282: setup
        0.008764: key tensor
        0.010229: target tensor
        0.053184: edge tensor
      0.000091: initializing solutions matrix
      0.094674: loop
      0.000013: postprocessing (MAX MEMORY: 3.193GB)
  0.004404: postprocess solutions
0.070678: apply inferences
  0.010488: apply
  0.000716: update types
  0.000224: operate
  0.059229: sal
0.031859: reference id 2
0.256194: reference infer 2
  0.036638: facts graph types
  0.033103: convert facts graph
    0.004636: to digraph
    0.028219: flatten types (932 concepts)
    0.000219: quantities
  0.017472: process dynamic rules
  0.165842: match
    0.165759: match
      0.012085: querygen
      0.122960: creating graph tensor (2160 nodes, 7655 edges)
        0.043221: setup
        0.007611: key tensor
        0.009794: target tensor
        0.060153: edge tensor
      0.000088: initializing solutions matrix
      0.030381: loop
      0.000037: postprocessing (MAX MEMORY: 2.677GB)
  0.000210: postprocess solutions
0.000263: reference resolution 2
0.059188: fragment resolution 2
  0.000570: identify previous emora questions
  0.058600: sal
0.523157: dialogue infer 2
  0.036588: facts graph types
  0.037052: convert facts graph
    0.004630: to digraph
    0.032181: flatten types (932 concepts)
    0.000226: quantities
  0.000028: process dynamic rules
  0.441529: match
    0.441448: match
      0.007240: querygen
      0.329373: creating graph tensor (2366 nodes, 8742 edges)
        0.249409: setup
        0.009232: key tensor
        0.010726: target tensor
        0.057204: edge tensor
      0.000094: initializing solutions matrix
      0.104528: loop
      0.000014: postprocessing (MAX MEMORY: 3.449GB)
  0.004410: postprocess solutions
0.067715: apply inferences 2
  0.007029: apply
  0.000734: update types
  0.000226: operate
  0.059707: sal
0.010663: prepare template nlg
0.371956: template infer
  0.036532: facts graph types
  0.036469: convert facts graph
    0.004601: to digraph
    0.031637: flatten types (932 concepts)
    0.000216: quantities
  0.000026: process dynamic rules
  0.291435: match
    0.291346: match
      0.006737: querygen
      0.134374: creating graph tensor (2366 nodes, 8742 edges)
        0.050837: setup
        0.009655: key tensor
        0.010581: target tensor
        0.060529: edge tensor
      0.000094: initializing solutions matrix
      0.149881: loop
      0.000015: postprocessing (MAX MEMORY: 3.449GB)
  0.003760: postprocess solutions
0.002401: template fillers
0.000015: response sel
0.000139: response exp
0.000014: response rules
0.147601: response assembler
  0.000015: response assembly
  0.059362: update sal
  0.002424: decay sal
  0.085783: prune
    0.000014: setup
    0.000935: select keep
    0.000108: delete old spans
    0.065323: setup essentials
    0.007316: identify essentials
    0.011559: remove not keep

[2.98 s] I haven't heard of that before. Why is it your favorite?

User: ARG REQUESTS: [('emora', 'request', 'wm2985', 'wm2988')]
TRUTH REQUESTS: []
CURRENT USER CONCEPTS: {'wm3027', 'wm3034', 'movie', 'wm3031', 'wm3022', 'past', 'wm3025', 'wm3039', 'user', 'wm3023', 'wm3040', 'prp', 'unknown_verb'}
FRAGMENT REQUEST MERGES: []
ARG REQUESTS: [('emora', 'request', 'wm2985', 'wm2988')]
TRUTH REQUESTS: []
CURRENT USER CONCEPTS: {'wm3027', 'wm3034', 'movie', 'wm3031', 'wm3022', 'past', 'wm3025', 'wm3039', 'user', 'wm3023', 'wm3040', 'prp', 'unknown_verb'}
FRAGMENT REQUEST MERGES: []

React + Present Options:
	That's interesting to hear. I guess I'll check it out. Maybe it will be my new favorite! (s: 0.44, pr: 1.00)
	That's interesting to hear. I guess I'll check it out. Maybe it will be my new favorite! (s: 0.44, pr: 1.00)
	That's interesting to hear. I guess I'll check it out. Maybe it will be my new favorite! (s: 0.44, pr: 1.00)
	That's interesting to hear. I guess I'll check it out. Maybe it will be my new favorite! (s: 0.44, pr: 1.00)
	That's interesting to hear. I guess I'll check it out. Maybe it will be my new favorite! (s: 0.44, pr: 1.00)
	That's interesting to hear. I guess I'll check it out. Maybe it will be my new favorite! (s: 0.44, pr: 1.00)
	That's interesting to hear. I guess I'll check it out. Maybe it will be my new favorite! (s: 0.44, pr: 1.00)
	That's interesting to hear. I guess I'll check it out. Maybe it will be my new favorite! (s: 0.44, pr: 1.00)


0.000021: next turn
0.000014: sentence caser
0.112127: elit
0.371458: parse2logic
  0.002263: facts graph types
  0.003684: convert facts graph
    0.000742: to digraph
    0.002881: flatten types (142 concepts)
    0.000047: quantities
  0.000021: process dynamic rules
  0.352506: match
    0.352427: match
      0.000383: querygen
      0.030790: creating graph tensor (183 nodes, 613 edges)
        0.003289: setup
        0.019953: key tensor
        0.001030: target tensor
        0.006332: edge tensor
      0.000081: initializing solutions matrix
      0.320824: loop
      0.000016: postprocessing (MAX MEMORY: 0.019GB)
  0.003123: postprocess solutions
0.000051: multiword mentions
0.000012: ner mentions
0.003824: mention bridge
0.007946: merge bridge
0.030214: knowledge pull
0.021268: reference id
0.283732: reference infer
  0.023124: facts graph types
  0.024734: convert facts graph
    0.003928: to digraph
    0.020615: flatten types (690 concepts)
    0.000169: quantities
  0.012174: process dynamic rules
  0.221160: match
    0.221080: match
      0.008996: querygen
      0.192423: creating graph tensor (1562 nodes, 5578 edges)
        0.032477: setup
        0.120793: key tensor
        0.007440: target tensor
        0.029701: edge tensor
      0.000088: initializing solutions matrix
      0.019344: loop
      0.000031: postprocessing (MAX MEMORY: 1.419GB)
  0.000220: postprocess solutions
0.000237: reference resolution
0.068457: fragment resolution
  0.000451: identify previous emora questions
  0.024048: find answer
  0.043905: sal
1.724733: dialogue infer
  0.023059: facts graph types
  0.026275: convert facts graph
    0.003258: to digraph
    0.022836: flatten types (690 concepts)
    0.000168: quantities
  0.000035: process dynamic rules
  1.668774: match
    1.668698: match
      0.004176: querygen
      1.413249: creating graph tensor (1702 nodes, 6289 edges)
        0.037860: setup
        1.325709: key tensor
        0.008947: target tensor
        0.038437: edge tensor
      0.000090: initializing solutions matrix
      0.250968: loop
      0.000014: postprocessing (MAX MEMORY: 1.786GB)
  0.003980: postprocess solutions
0.051739: apply inferences
  0.007008: apply
  0.000566: update types
  0.000195: operate
  0.043951: sal
0.020822: reference id 2
0.487914: reference infer 2
  0.023211: facts graph types
  0.023722: convert facts graph
    0.003259: to digraph
    0.020271: flatten types (690 concepts)
    0.000167: quantities
  0.012746: process dynamic rules
  0.425810: match
    0.425732: match
      0.008443: querygen
      0.397576: creating graph tensor (1562 nodes, 5578 edges)
        0.221012: setup
        0.137083: key tensor
        0.008017: target tensor
        0.029597: edge tensor
      0.000091: initializing solutions matrix
      0.019396: loop
      0.000031: postprocessing (MAX MEMORY: 1.419GB)
  0.000219: postprocess solutions
0.000263: reference resolution 2
0.069263: fragment resolution 2
  0.000497: identify previous emora questions
  0.024097: find answer
  0.044649: sal
1.723304: dialogue infer 2
  0.023225: facts graph types
  0.026554: convert facts graph
    0.003201: to digraph
    0.023168: flatten types (690 concepts)
    0.000171: quantities
  0.000026: process dynamic rules
  1.666712: match
    1.666633: match
      0.004908: querygen
      1.408840: creating graph tensor (1702 nodes, 6289 edges)
        0.035928: setup
        1.323569: key tensor
        0.009088: target tensor
        0.038083: edge tensor
      0.000108: initializing solutions matrix
      0.252548: loop
      0.000015: postprocessing (MAX MEMORY: 1.786GB)
  0.003993: postprocess solutions
0.052476: apply inferences 2
  0.006718: apply
  0.000560: update types
  0.000193: operate
  0.044986: sal
0.008418: prepare template nlg
0.472655: template infer
  0.023103: facts graph types
  0.026488: convert facts graph
    0.003200: to digraph
    0.023107: flatten types (690 concepts)
    0.000167: quantities
  0.000026: process dynamic rules
  0.417496: match
    0.417421: match
      0.004337: querygen
      0.196377: creating graph tensor (1702 nodes, 6289 edges)
        0.036959: setup
        0.114742: key tensor
        0.008382: target tensor
        0.034344: edge tensor
      0.000104: initializing solutions matrix
      0.216310: loop
      0.000015: postprocessing (MAX MEMORY: 1.786GB)
  0.002804: postprocess solutions
0.001645: template fillers
0.000015: response sel
0.000108: response exp
0.000013: response rules
0.099946: response assembler
  0.000014: response assembly
  0.044672: update sal
  0.001817: decay sal
  0.053428: prune
    0.000013: setup
    0.000697: select keep
    0.000110: delete old spans
    0.041072: setup essentials
    0.006930: identify essentials
    0.004238: remove not keep

[5.61 s] That's interesting to hear. I guess I'll check it out. Maybe it will be my new favorite!

User: ARG REQUESTS: []
TRUTH REQUESTS: []
ARG REQUESTS: []
TRUTH REQUESTS: []

0.000021: next turn
0.000013: sentence caser
0.111218: elit
0.046213: parse2logic
  0.000521: facts graph types
  0.000923: convert facts graph
    0.000183: to digraph
    0.000706: flatten types (38 concepts)
    0.000021: quantities
  0.000021: process dynamic rules
  0.040919: match
    0.040837: match
      0.000121: querygen
      0.008701: creating graph tensor (46 nodes, 138 edges)
        0.000818: setup
        0.001390: key tensor
        0.000625: target tensor
        0.005804: edge tensor
      0.000074: initializing solutions matrix
      0.031719: loop
      0.000014: postprocessing (MAX MEMORY: 0.002GB)
  0.000292: postprocess solutions
0.000037: multiword mentions
0.000013: ner mentions
0.002269: mention bridge
0.005316: merge bridge
0.027135: knowledge pull
0.016830: reference id
0.194779: reference infer
  0.019471: facts graph types
  0.023165: convert facts graph
    0.003963: to digraph
    0.019028: flatten types (616 concepts)
    0.000152: quantities
  0.008035: process dynamic rules
  0.142047: match
    0.141965: match
      0.007937: querygen
      0.111424: creating graph tensor (1405 nodes, 5059 edges)
        0.029878: setup
        0.044060: key tensor
        0.006901: target tensor
        0.029069: edge tensor
      0.000087: initializing solutions matrix
      0.022297: loop
      0.000028: postprocessing (MAX MEMORY: 1.165GB)
  0.000207: postprocess solutions
0.000247: reference resolution
0.040487: fragment resolution
  0.000425: identify previous emora questions
  0.040045: sal
0.337364: dialogue infer
  0.019407: facts graph types
  0.023471: convert facts graph
    0.003122: to digraph
    0.020181: flatten types (616 concepts)
    0.000154: quantities
  0.000026: process dynamic rules
  0.288419: match
    0.288346: match
      0.004344: querygen
      0.140638: creating graph tensor (1526 nodes, 5648 edges)
        0.032355: setup
        0.067447: key tensor
        0.007303: target tensor
        0.031829: edge tensor
      0.000089: initializing solutions matrix
      0.143041: loop
      0.000013: postprocessing (MAX MEMORY: 1.440GB)
  0.003856: postprocess solutions
0.046281: apply inferences
  0.005556: apply
  0.000545: update types
  0.000177: operate
  0.039982: sal
0.016280: reference id 2
0.374663: reference infer 2
  0.019616: facts graph types
  0.021265: convert facts graph
    0.002658: to digraph
    0.018434: flatten types (616 concepts)
    0.000152: quantities
  0.008275: process dynamic rules
  0.323205: match
    0.323125: match
      0.006624: querygen
      0.293848: creating graph tensor (1405 nodes, 5059 edges)
        0.212002: setup
        0.044590: key tensor
        0.006665: target tensor
        0.029079: edge tensor
      0.000088: initializing solutions matrix
      0.022340: loop
      0.000029: postprocessing (MAX MEMORY: 1.165GB)
  0.000215: postprocess solutions
0.000235: reference resolution 2
0.040800: fragment resolution 2
  0.000436: identify previous emora questions
  0.040347: sal
0.340460: dialogue infer 2
  0.019458: facts graph types
  0.024127: convert facts graph
    0.002949: to digraph
    0.021011: flatten types (616 concepts)
    0.000152: quantities
  0.000026: process dynamic rules
  0.290642: match
    0.290554: match
      0.003814: querygen
      0.141686: creating graph tensor (1526 nodes, 5648 edges)
        0.032327: setup
        0.068354: key tensor
        0.007455: target tensor
        0.031873: edge tensor
      0.000090: initializing solutions matrix
      0.144747: loop
      0.000014: postprocessing (MAX MEMORY: 1.440GB)
  0.003917: postprocess solutions
0.046185: apply inferences 2
  0.005780: apply
  0.000532: update types
  0.000180: operate
  0.039676: sal
0.007881: prepare template nlg
0.371012: template infer
  0.019526: facts graph types
  0.023725: convert facts graph
    0.002827: to digraph
    0.020731: flatten types (616 concepts)
    0.000152: quantities
  0.000025: process dynamic rules
  0.322715: match
    0.322640: match
      0.004025: querygen
      0.131056: creating graph tensor (1526 nodes, 5648 edges)
        0.032828: setup
        0.059975: key tensor
        0.007391: target tensor
        0.029185: edge tensor
      0.000091: initializing solutions matrix
      0.187194: loop
      0.000015: postprocessing (MAX MEMORY: 1.440GB)
  0.002768: postprocess solutions
0.001153: template fillers
0.000015: response sel
0.000314: response exp
0.000015: response rules
0.086286: response assembler
  0.000015: response assembly
  0.040405: update sal
  0.001651: decay sal
  0.044200: prune
    0.000012: setup
    0.000635: select keep
    0.000103: delete old spans
    0.035017: setup essentials
    0.006738: identify essentials
    0.001361: remove not keep

[2.11 s] Oh, I was meaning to ask, do you have a phone ?

User: ARG REQUESTS: [('emora', 'request', 'wm3103', 'wm3104')]
TRUTH REQUESTS: []
CURRENT USER CONCEPTS: {'wm3112', 'wm3121', 'wm3113', 'disney_plus', 'user', 'now', 'prp'}
FRAGMENT REQUEST MERGES: []
ARG REQUESTS: [('emora', 'request', 'wm3103', 'wm3104')]
TRUTH REQUESTS: []
CURRENT USER CONCEPTS: {'wm3112', 'wm3121', 'wm3113', 'disney_plus', 'user', 'now', 'prp'}
FRAGMENT REQUEST MERGES: []

React + Present Options:
	Disney Plus is great for watching classic movies. I’ve also loved watching Disney Channel shows from when I was younger. It’s always fun to take a trip down memory lane! (s: 0.40, pr: 1.00)
	To be honest, I've never had a Phone . I'm thinking I might get one, do you think it is worth it ? (s: 0.32, pr: 0.10)


0.000018: next turn
0.000013: sentence caser
0.109571: elit
0.708706: parse2logic
  0.001409: facts graph types
  0.002348: convert facts graph
    0.000482: to digraph
    0.001818: flatten types (93 concepts)
    0.000036: quantities
  0.000021: process dynamic rules
  0.696353: match
    0.696275: match
      0.000257: querygen
      0.239658: creating graph tensor (119 nodes, 389 edges)
        0.002021: setup
        0.226308: key tensor
        0.001240: target tensor
        0.009918: edge tensor
      0.000084: initializing solutions matrix
      0.455855: loop
      0.000021: postprocessing (MAX MEMORY: 0.008GB)
  0.002065: postprocess solutions
0.000137: multiword mentions
0.000013: ner mentions
0.002639: mention bridge
0.006325: merge bridge
0.028544: knowledge pull
0.016549: reference id
0.233852: reference infer
  0.020144: facts graph types
  0.023145: convert facts graph
    0.003042: to digraph
    0.019925: flatten types (628 concepts)
    0.000157: quantities
  0.007839: process dynamic rules
  0.180583: match
    0.180505: match
      0.007002: querygen
      0.144242: creating graph tensor (1437 nodes, 5177 edges)
        0.030644: setup
        0.073475: key tensor
        0.006858: target tensor
        0.031635: edge tensor
      0.000090: initializing solutions matrix
      0.028944: loop
      0.000028: postprocessing (MAX MEMORY: 1.220GB)
  0.000211: postprocess solutions
0.000232: reference resolution
0.061667: fragment resolution
  0.000446: identify previous emora questions
  0.020863: find answer
  0.040341: sal
0.412050: dialogue infer
  0.020014: facts graph types
  0.024112: convert facts graph
    0.002978: to digraph
    0.020961: flatten types (628 concepts)
    0.000158: quantities
  0.000027: process dynamic rules
  0.361325: match
    0.361250: match
      0.003855: querygen
      0.178132: creating graph tensor (1558 nodes, 5766 edges)
        0.033885: setup
        0.098919: key tensor
        0.007499: target tensor
        0.036064: edge tensor
      0.000088: initializing solutions matrix
      0.178952: loop
      0.000014: postprocessing (MAX MEMORY: 1.501GB)
  0.004369: postprocess solutions
0.052499: apply inferences
  0.008333: apply
  0.000820: update types
  0.000262: operate
  0.043062: sal
0.019865: reference id 2
0.677093: reference infer 2
  0.021058: facts graph types
  0.204354: convert facts graph
    0.002746: to digraph
    0.201390: flatten types (649 concepts)
    0.000193: quantities
  0.009250: process dynamic rules
  0.440007: match
    0.439922: match
      0.008809: querygen
      0.339711: creating graph tensor (1489 nodes, 5358 edges)
        0.031297: setup
        0.260528: key tensor
        0.007784: target tensor
        0.038293: edge tensor
      0.000087: initializing solutions matrix
      0.091041: loop
      0.000033: postprocessing (MAX MEMORY: 1.307GB)
  0.000219: postprocess solutions
0.000241: reference resolution 2
0.065012: fragment resolution 2
  0.000492: identify previous emora questions
  0.022037: find answer
  0.042464: sal
0.423115: dialogue infer 2
  0.021078: facts graph types
  0.025636: convert facts graph
    0.003137: to digraph
    0.022322: flatten types (649 concepts)
    0.000162: quantities
  0.000026: process dynamic rules
  0.369182: match
    0.369103: match
      0.004569: querygen
      0.186282: creating graph tensor (1625 nodes, 6014 edges)
        0.035954: setup
        0.102735: key tensor
        0.008336: target tensor
        0.037007: edge tensor
      0.000095: initializing solutions matrix
      0.177928: loop
      0.000014: postprocessing (MAX MEMORY: 1.633GB)
  0.004502: postprocess solutions
0.049741: apply inferences 2
  0.006739: apply
  0.000581: update types
  0.000187: operate
  0.042215: sal
0.008266: prepare template nlg
0.605758: template infer
  0.021183: facts graph types
  0.024974: convert facts graph
    0.002930: to digraph
    0.021867: flatten types (649 concepts)
    0.000162: quantities
  0.000026: process dynamic rules
  0.554006: match
    0.553930: match
      0.004884: querygen
      0.241149: creating graph tensor (1625 nodes, 6014 edges)
        0.034939: setup
        0.162584: key tensor
        0.007947: target tensor
        0.033722: edge tensor
      0.000088: initializing solutions matrix
      0.307486: loop
      0.000016: postprocessing (MAX MEMORY: 1.633GB)
  0.003105: postprocess solutions
0.001812: template fillers
0.000015: response sel
0.000124: response exp
0.000013: response rules
0.091857: response assembler
  0.000015: response assembly
  0.042519: update sal
  0.001713: decay sal
  0.047597: prune
    0.000011: setup
    0.000664: select keep
    0.000120: delete old spans
    0.037582: setup essentials
    0.006967: identify essentials
    0.001909: remove not keep

[3.58 s] Disney Plus is great for watching classic movies. I've also loved watching Disney Channel shows from when I was younger. It's always fun to take a trip down memory lane!

User: ARG REQUESTS: [('emora', 'request', 'wm3155', 'wm3157')]
TRUTH REQUESTS: []
CURRENT USER CONCEPTS: {'wm3185', 'wm3189', 'wm3186', 'wm3184', 'wm3170', 'predicate', 'wm3165', 'wm3174', 'wm3179', 'unknown_noun', 'wm3175', 'wm3178', 'user', 'now', 'wm3180', 'wm3166', 'wm3173'}
FRAGMENT REQUEST MERGES: [('wm3178', 'wm3155')]
[WARNING] Mismatched confidence between wm3155 and wm3178 on merge!
ARG REQUESTS: []
TRUTH REQUESTS: []

Present Options:
	Do you have a favorite movie or tv genre? (s: 0.17, pr: 0.50)


0.000019: next turn
0.000014: sentence caser
0.111234: elit
0.215190: parse2logic
  0.002090: facts graph types
  0.003331: convert facts graph
    0.000657: to digraph
    0.002616: flatten types (131 concepts)
    0.000044: quantities
  0.000021: process dynamic rules
  0.198445: match
    0.198369: match
      0.000367: querygen
      0.033064: creating graph tensor (169 nodes, 569 edges)
        0.003127: setup
        0.018337: key tensor
        0.000971: target tensor
        0.010462: edge tensor
      0.000080: initializing solutions matrix
      0.164588: loop
      0.000015: postprocessing (MAX MEMORY: 0.016GB)
  0.002211: postprocess solutions
0.000052: multiword mentions
0.000013: ner mentions
0.004400: mention bridge
0.006532: merge bridge
0.029704: knowledge pull
0.017536: reference id
0.246519: reference infer
  0.022543: facts graph types
  0.024800: convert facts graph
    0.003951: to digraph
    0.020662: flatten types (677 concepts)
    0.000166: quantities
  0.008970: process dynamic rules
  0.187979: match
    0.187903: match
      0.007500: querygen
      0.161066: creating graph tensor (1570 nodes, 5663 edges)
        0.032556: setup
        0.088046: key tensor
        0.007233: target tensor
        0.031432: edge tensor
      0.000090: initializing solutions matrix
      0.019027: loop
      0.000030: postprocessing (MAX MEMORY: 1.459GB)
  0.000210: postprocess solutions
0.000230: reference resolution
0.068333: fragment resolution
  0.000460: identify previous emora questions
  0.024754: find answer
  0.043100: sal
1.004044: dialogue infer
  0.022515: facts graph types
  0.026169: convert facts graph
    0.003166: to digraph
    0.022824: flatten types (675 concepts)
    0.000165: quantities
  0.000026: process dynamic rules
  0.948389: match
    0.948310: match
      0.004183: querygen
      0.695343: creating graph tensor (1692 nodes, 6264 edges)
        0.036430: setup
        0.415817: key tensor
        0.198544: target tensor
        0.042441: edge tensor
      0.000106: initializing solutions matrix
      0.248448: loop
      0.000014: postprocessing (MAX MEMORY: 1.771GB)
  0.004405: postprocess solutions
0.055313: apply inferences
  0.007684: apply
  0.001173: update types
  0.000212: operate
  0.046222: sal
0.017246: reference id 2
0.325386: reference infer 2
  0.023523: facts graph types
  0.025235: convert facts graph
    0.003057: to digraph
    0.021985: flatten types (695 concepts)
    0.000171: quantities
  0.007926: process dynamic rules
  0.266137: match
    0.266049: match
      0.007987: querygen
      0.230086: creating graph tensor (1628 nodes, 5892 edges)
        0.034007: setup
        0.153763: key tensor
        0.008122: target tensor
        0.032316: edge tensor
      0.000089: initializing solutions matrix
      0.027655: loop
      0.000029: postprocessing (MAX MEMORY: 1.577GB)
  0.000215: postprocess solutions
0.000258: reference resolution 2
0.045620: fragment resolution 2
  0.000520: identify previous emora questions
  0.045084: sal
0.351196: dialogue infer 2
  0.023571: facts graph types
  0.027185: convert facts graph
    0.003212: to digraph
    0.023790: flatten types (695 concepts)
    0.000168: quantities
  0.000026: process dynamic rules
  0.293205: match
    0.293128: match
      0.004334: querygen
      0.140389: creating graph tensor (1749 nodes, 6481 edges)
        0.037478: setup
        0.056913: key tensor
        0.008260: target tensor
        0.035810: edge tensor
      0.000089: initializing solutions matrix
      0.148088: loop
      0.000014: postprocessing (MAX MEMORY: 1.895GB)
  0.004658: postprocess solutions
0.053404: apply inferences 2
  0.007098: apply
  0.000593: update types
  0.000233: operate
  0.045459: sal
0.008690: prepare template nlg
0.428025: template infer
  0.023546: facts graph types
  0.026949: convert facts graph
    0.003169: to digraph
    0.023597: flatten types (697 concepts)
    0.000168: quantities
  0.000025: process dynamic rules
  0.371684: match
    0.371596: match
      0.004455: querygen
      0.173309: creating graph tensor (1757 nodes, 6512 edges)
        0.037806: setup
        0.084552: key tensor
        0.008571: target tensor
        0.040314: edge tensor
      0.000093: initializing solutions matrix
      0.193458: loop
      0.000015: postprocessing (MAX MEMORY: 1.913GB)
  0.003166: postprocess solutions
0.001216: template fillers
0.000015: response sel
0.000163: response exp
0.000015: response rules
0.101442: response assembler
  0.000015: response assembly
  0.045068: update sal
  0.001834: decay sal
  0.054508: prune
    0.000017: setup
    0.000727: select keep
    0.000093: delete old spans
    0.041777: setup essentials
    0.006547: identify essentials
    0.004796: remove not keep

[3.09 s] Yeah . Do you have a favorite movie or tv genre?

User: ARG REQUESTS: [('emora', 'request', 'wm3240', 'wm3242')]
TRUTH REQUESTS: []
CURRENT USER CONCEPTS: {'wm3256', 'wm3257', 'user', 'wm3258', 'predicate'}
FRAGMENT REQUEST MERGES: []
ARG REQUESTS: [('emora', 'request', 'wm3240', 'wm3242')]
TRUTH REQUESTS: []
CURRENT USER CONCEPTS: {'wm3256', 'wm3257', 'user', 'wm3258', 'predicate'}
FRAGMENT REQUEST MERGES: []

0.000022: next turn
0.000013: sentence caser
0.108205: elit
0.057157: parse2logic
  0.000349: facts graph types
  0.000813: convert facts graph
    0.000311: to digraph
    0.000470: flatten types (26 concepts)
    0.000020: quantities
  0.000020: process dynamic rules
  0.053488: match
    0.053410: match
      0.000086: querygen
      0.014096: creating graph tensor (30 nodes, 82 edges)
        0.000535: setup
        0.007754: key tensor
        0.000394: target tensor
        0.005369: edge tensor
      0.000072: initializing solutions matrix
      0.038946: loop
      0.000013: postprocessing (MAX MEMORY: 0.001GB)
  0.000446: postprocess solutions
0.000033: multiword mentions
0.000012: ner mentions
0.001504: mention bridge
0.004287: merge bridge
0.026617: knowledge pull
0.012255: reference id
0.213152: reference infer
  0.018804: facts graph types
  0.023061: convert facts graph
    0.002933: to digraph
    0.019958: flatten types (597 concepts)
    0.000149: quantities
  0.004940: process dynamic rules
  0.164291: match
    0.164217: match
      0.005964: querygen
      0.134326: creating graph tensor (1457 nodes, 5330 edges)
        0.030520: setup
        0.064681: key tensor
        0.007499: target tensor
        0.029955: edge tensor
      0.000088: initializing solutions matrix
      0.023617: loop
      0.000027: postprocessing (MAX MEMORY: 1.287GB)
  0.000120: postprocess solutions
0.000183: reference resolution
0.058597: fragment resolution
  0.000461: identify previous emora questions
  0.019424: find answer
  0.038694: sal
1.118068: dialogue infer
  0.018756: facts graph types
  0.203023: convert facts graph
    0.002837: to digraph
    0.200003: flatten types (597 concepts)
    0.000166: quantities
  0.000028: process dynamic rules
  0.889236: match
    0.889155: match
      0.005095: querygen
      0.576168: creating graph tensor (1535 nodes, 5707 edges)
        0.033041: setup
        0.491624: key tensor
        0.008335: target tensor
        0.041231: edge tensor
      0.000089: initializing solutions matrix
      0.307576: loop
      0.000014: postprocessing (MAX MEMORY: 1.468GB)
  0.004601: postprocess solutions
0.046816: apply inferences
  0.006960: apply
  0.000568: update types
  0.000224: operate
  0.039043: sal
0.012025: reference id 2
0.212894: reference infer 2
  0.019009: facts graph types
  0.022549: convert facts graph
    0.002734: to digraph
    0.019647: flatten types (597 concepts)
    0.000149: quantities
  0.004954: process dynamic rules
  0.164370: match
    0.164292: match
      0.006124: querygen
      0.134344: creating graph tensor (1457 nodes, 5330 edges)
        0.031385: setup
        0.064151: key tensor
        0.007333: target tensor
        0.029863: edge tensor
      0.000088: initializing solutions matrix
      0.023510: loop
      0.000027: postprocessing (MAX MEMORY: 1.287GB)
  0.000117: postprocess solutions
0.000184: reference resolution 2
0.059099: fragment resolution 2
  0.000468: identify previous emora questions
  0.019531: find answer
  0.039083: sal
0.975200: dialogue infer 2
  0.018823: facts graph types
  0.023231: convert facts graph
    0.003003: to digraph
    0.020066: flatten types (597 concepts)
    0.000149: quantities
  0.000026: process dynamic rules
  0.926174: match
    0.926100: match
      0.004259: querygen
      0.614764: creating graph tensor (1535 nodes, 5707 edges)
        0.032878: setup
        0.530180: key tensor
        0.008373: target tensor
        0.041307: edge tensor
      0.000093: initializing solutions matrix
      0.306752: loop
      0.000014: postprocessing (MAX MEMORY: 1.468GB)
  0.004628: postprocess solutions
0.046648: apply inferences 2
  0.006995: apply
  0.000550: update types
  0.000221: operate
  0.038861: sal
0.007983: prepare template nlg
0.389331: template infer
  0.018963: facts graph types
  0.023789: convert facts graph
    0.002847: to digraph
    0.020779: flatten types (597 concepts)
    0.000148: quantities
  0.000025: process dynamic rules
  0.341105: match
    0.341030: match
      0.003993: querygen
      0.141746: creating graph tensor (1535 nodes, 5707 edges)
        0.033668: setup
        0.067445: key tensor
        0.007401: target tensor
        0.031511: edge tensor
      0.000089: initializing solutions matrix
      0.194907: loop
      0.000015: postprocessing (MAX MEMORY: 1.468GB)
  0.003178: postprocess solutions
0.001120: template fillers
0.000015: response sel
0.000479: response exp
0.000015: response rules
0.086157: response assembler
  0.000016: response assembly
  0.040041: update sal
  0.001631: decay sal
  0.044454: prune
    0.000022: setup
    0.000647: select keep
    0.000085: delete old spans
    0.035007: setup essentials
    0.006105: identify essentials
    0.001981: remove not keep

[3.44 s] I've been thinking, the pandemic has really changed our lives hasn't it? Not just this year, I think a lot of things will never be the same for me now. Its kinda crazy how much my life has changed.

User: ARG REQUESTS: []
TRUTH REQUESTS: [('emora', 'request_truth', 'wm3273', 'wm3274')]
CURRENT USER CONCEPTS: {'wm3287', 'wm3288', 'wm3289', 'user', 'predicate'}
FRAGMENT REQUEST MERGES: [('wm3287', 'wm3273')]
ARG REQUESTS: []
TRUTH REQUESTS: []

React + Present Options:
	My job may have actually benefited from the pandemic. I had to spend a lot of time for commuting, now I can do it remotely. My office is letting me stay remote for as long as I want. Do you like the shift to remote work? (s: 0.22, pr: 0.50)


0.000019: next turn
0.000014: sentence caser
0.107454: elit
0.045688: parse2logic
  0.000339: facts graph types
  0.000741: convert facts graph
    0.000258: to digraph
    0.000453: flatten types (26 concepts)
    0.000019: quantities
  0.000020: process dynamic rules
  0.042141: match
    0.042065: match
      0.000086: querygen
      0.005198: creating graph tensor (30 nodes, 82 edges)
        0.000493: setup
        0.001296: key tensor
        0.000370: target tensor
        0.002995: edge tensor
      0.000072: initializing solutions matrix
      0.036507: loop
      0.000013: postprocessing (MAX MEMORY: 0.001GB)
  0.000453: postprocess solutions
0.000033: multiword mentions
0.000012: ner mentions
0.001502: mention bridge
0.003918: merge bridge
0.026089: knowledge pull
0.011501: reference id
0.423039: reference infer
  0.018286: facts graph types
  0.022464: convert facts graph
    0.003230: to digraph
    0.019071: flatten types (585 concepts)
    0.000145: quantities
  0.004385: process dynamic rules
  0.375757: match
    0.375684: match
      0.006386: querygen
      0.340479: creating graph tensor (1449 nodes, 5307 edges)
        0.030602: setup
        0.084896: key tensor
        0.195025: target tensor
        0.028140: edge tensor
      0.000092: initializing solutions matrix
      0.028503: loop
      0.000027: postprocessing (MAX MEMORY: 1.275GB)
  0.000123: postprocess solutions
0.000187: reference resolution
0.040362: fragment resolution
  0.000487: identify previous emora questions
  0.001715: find answer
  0.038141: sal
0.396554: dialogue infer
  0.018130: facts graph types
  0.023304: convert facts graph
    0.002775: to digraph
    0.020367: flatten types (582 concepts)
    0.000147: quantities
  0.000026: process dynamic rules
  0.347902: match
    0.347829: match
      0.003815: querygen
      0.161123: creating graph tensor (1510 nodes, 5619 edges)
        0.032379: setup
        0.089026: key tensor
        0.007724: target tensor
        0.030277: edge tensor
      0.000089: initializing solutions matrix
      0.182582: loop
      0.000014: postprocessing (MAX MEMORY: 1.423GB)
  0.004935: postprocess solutions
0.050843: apply inferences
  0.009052: apply
  0.001094: update types
  0.000289: operate
  0.040388: sal
0.013008: reference id 2
0.214763: reference infer 2
  0.019396: facts graph types
  0.022560: convert facts graph
    0.003006: to digraph
    0.019381: flatten types (614 concepts)
    0.000152: quantities
  0.006646: process dynamic rules
  0.164009: match
    0.163925: match
      0.006267: querygen
      0.133985: creating graph tensor (1490 nodes, 5448 edges)
        0.031012: setup
        0.059548: key tensor
        0.007153: target tensor
        0.034624: edge tensor
      0.000088: initializing solutions matrix
      0.023359: loop
      0.000028: postprocessing (MAX MEMORY: 1.344GB)
  0.000239: postprocess solutions
0.001773: reference resolution 2
0.040191: fragment resolution 2
  0.000470: identify previous emora questions
  0.039704: sal
0.867858: dialogue infer 2
  0.019316: facts graph types
  0.024072: convert facts graph
    0.003183: to digraph
    0.020720: flatten types (612 concepts)
    0.000155: quantities
  0.000025: process dynamic rules
  0.816680: match
    0.816605: match
      0.004455: querygen
      0.534402: creating graph tensor (1591 nodes, 5916 edges)
        0.033526: setup
        0.450573: key tensor
        0.008465: target tensor
        0.039649: edge tensor
      0.000094: initializing solutions matrix
      0.277426: loop
      0.000014: postprocessing (MAX MEMORY: 1.578GB)
  0.005314: postprocess solutions
0.049567: apply inferences 2
  0.007695: apply
  0.000939: update types
  0.000293: operate
  0.040620: sal
0.008357: prepare template nlg
0.689369: template infer
  0.019462: facts graph types
  0.024344: convert facts graph
    0.002929: to digraph
    0.021243: flatten types (617 concepts)
    0.000156: quantities
  0.000023: process dynamic rules
  0.639769: match
    0.639689: match
      0.004320: querygen
      0.224120: creating graph tensor (1600 nodes, 5949 edges)
        0.034613: setup
        0.146554: key tensor
        0.007936: target tensor
        0.033124: edge tensor
      0.000088: initializing solutions matrix
      0.410781: loop
      0.000020: postprocessing (MAX MEMORY: 1.595GB)
  0.003381: postprocess solutions
0.001289: template fillers
0.000015: response sel
0.000216: response exp
0.000014: response rules
0.087468: response assembler
  0.000015: response assembly
  0.040890: update sal
  0.001674: decay sal
  0.044874: prune
    0.000017: setup
    0.000657: select keep
    0.000073: delete old spans
    0.035026: setup essentials
    0.005337: identify essentials
    0.003223: remove not keep

[3.08 s] My job may have actually benefited from the pandemic. I had to spend a lot of time for commuting, now I can do it remotely. My office is letting me stay remote for as long as I want. Do you like the shift to remote work?

User: ARG REQUESTS: []
TRUTH REQUESTS: [('emora', 'request_truth', 'wm3315', 'wm3323')]
CURRENT USER CONCEPTS: {'wm3354', 'wm3353', 'wm3358', 'wm3352', 'unknown_noun', 'wm3360', 'wm3345', 'user', 'wm3346', 'now', 'predicate', 'wm3355', 'prp', 'wm3359', 'wm3365'}
FRAGMENT REQUEST MERGES: [('wm3358', 'wm3315')]
ARG REQUESTS: []
TRUTH REQUESTS: []

React + Present Options:
	Having the option for remote work is 100 percent amazing. Not everyone might like it and not all jobs can be done effectively remotely, but I think having the option when its practical is a great thing for people. (s: 0.66, pr: 1.00)


0.000019: next turn
0.000014: sentence caser
0.110511: elit
0.246529: parse2logic
  0.001648: facts graph types
  0.002717: convert facts graph
    0.000562: to digraph
    0.002101: flatten types (107 concepts)
    0.000041: quantities
  0.000021: process dynamic rules
  0.232145: match
    0.232068: match
      0.000294: querygen
      0.047358: creating graph tensor (135 nodes, 445 edges)
        0.002392: setup
        0.033742: key tensor
        0.000844: target tensor
        0.010242: edge tensor
      0.000081: initializing solutions matrix
      0.184051: loop
      0.000015: postprocessing (MAX MEMORY: 0.010GB)
  0.002680: postprocess solutions
0.000042: multiword mentions
0.000013: ner mentions
0.003636: mention bridge
0.005838: merge bridge
0.026380: knowledge pull
0.012142: reference id
0.385665: reference infer
  0.018728: facts graph types
  0.022349: convert facts graph
    0.002836: to digraph
    0.019346: flatten types (595 concepts)
    0.000148: quantities
  0.005519: process dynamic rules
  0.336895: match
    0.336818: match
      0.005872: querygen
      0.306142: creating graph tensor (1456 nodes, 5317 edges)
        0.216945: setup
        0.051247: key tensor
        0.007230: target tensor
        0.029073: edge tensor
      0.000089: initializing solutions matrix
      0.024481: loop
      0.000028: postprocessing (MAX MEMORY: 1.281GB)
  0.000125: postprocess solutions
0.000188: reference resolution
0.098094: fragment resolution
  0.000477: identify previous emora questions
  0.058497: find answer
  0.039100: sal
0.536133: dialogue infer
  0.018643: facts graph types
  0.023611: convert facts graph
    0.003078: to digraph
    0.020370: flatten types (591 concepts)
    0.000149: quantities
  0.000027: process dynamic rules
  0.486218: match
    0.486137: match
      0.004027: querygen
      0.268607: creating graph tensor (1531 nodes, 5690 edges)
        0.033046: setup
        0.193198: key tensor
        0.008226: target tensor
        0.032320: edge tensor
      0.000091: initializing solutions matrix
      0.213159: loop
      0.000015: postprocessing (MAX MEMORY: 1.460GB)
  0.005260: postprocess solutions
0.047134: apply inferences
  0.006881: apply
  0.000695: update types
  0.000216: operate
  0.039320: sal
0.011070: reference id 2
0.223525: reference infer 2
  0.018902: facts graph types
  0.022123: convert facts graph
    0.002654: to digraph
    0.019299: flatten types (594 concepts)
    0.000151: quantities
  0.003855: process dynamic rules
  0.176463: match
    0.176385: match
      0.006167: querygen
      0.137482: creating graph tensor (1468 nodes, 5378 edges)
        0.030667: setup
        0.068528: key tensor
        0.007426: target tensor
        0.029245: edge tensor
      0.000087: initializing solutions matrix
      0.032424: loop
      0.000026: postprocessing (MAX MEMORY: 1.310GB)
  0.000116: postprocess solutions
0.000182: reference resolution 2
0.039394: fragment resolution 2
  0.000449: identify previous emora questions
  0.038928: sal
0.488004: dialogue infer 2
  0.018714: facts graph types
  0.023608: convert facts graph
    0.002846: to digraph
    0.020600: flatten types (594 concepts)
    0.000149: quantities
  0.000025: process dynamic rules
  0.438066: match
    0.437992: match
      0.003795: querygen
      0.229176: creating graph tensor (1537 nodes, 5711 edges)
        0.033858: setup
        0.154378: key tensor
        0.008131: target tensor
        0.030961: edge tensor
      0.000091: initializing solutions matrix
      0.204691: loop
      0.000014: postprocessing (MAX MEMORY: 1.471GB)
  0.005213: postprocess solutions
0.046435: apply inferences 2
  0.006600: apply
  0.000562: update types
  0.000223: operate
  0.039030: sal
0.007950: prepare template nlg
0.292545: template infer
  0.018576: facts graph types
  0.023436: convert facts graph
    0.003071: to digraph
    0.020198: flatten types (594 concepts)
    0.000152: quantities
  0.000024: process dynamic rules
  0.246023: match
    0.245947: match
      0.004426: querygen
      0.116092: creating graph tensor (1537 nodes, 5711 edges)
        0.032961: setup
        0.042776: key tensor
        0.007717: target tensor
        0.030973: edge tensor
      0.000088: initializing solutions matrix
      0.125090: loop
      0.000014: postprocessing (MAX MEMORY: 1.471GB)
  0.002282: postprocess solutions
0.001137: template fillers
0.000015: response sel
0.000062: response exp
0.000014: response rules
0.082034: response assembler
  0.000015: response assembly
  0.038885: update sal
  0.001538: decay sal
  0.041582: prune
    0.000016: setup
    0.000612: select keep
    0.000074: delete old spans
    0.032655: setup essentials
    0.005398: identify essentials
    0.002335: remove not keep

[2.67 s] Having the option for remote work is 100 percent amazing. Not everyone might like it and not all jobs can be done effectively remotely, but I think having the option when its practical is a great thing for people.

User: ARG REQUESTS: []
TRUTH REQUESTS: []
ARG REQUESTS: []
TRUTH REQUESTS: []

0.000029: next turn
0.000015: sentence caser
0.110421: elit
0.278101: parse2logic
  0.001700: facts graph types
  0.002743: convert facts graph
    0.000599: to digraph
    0.002090: flatten types (110 concepts)
    0.000040: quantities
  0.000021: process dynamic rules
  0.262903: match
    0.262823: match
      0.000312: querygen
      0.046999: creating graph tensor (135 nodes, 442 edges)
        0.002430: setup
        0.034189: key tensor
        0.001293: target tensor
        0.008970: edge tensor
      0.000080: initializing solutions matrix
      0.215231: loop
      0.000013: postprocessing (MAX MEMORY: 0.010GB)
  0.003215: postprocess solutions
0.000051: multiword mentions
0.000012: ner mentions
0.003893: mention bridge
0.004913: merge bridge
0.026046: knowledge pull
0.011186: reference id
0.439814: reference infer
  0.018424: facts graph types
  0.023153: convert facts graph
    0.003552: to digraph
    0.019433: flatten types (588 concepts)
    0.000149: quantities
  0.003829: process dynamic rules
  0.392205: match
    0.392126: match
      0.006301: querygen
      0.352417: creating graph tensor (1457 nodes, 5337 edges)
        0.215554: setup
        0.097411: key tensor
        0.007587: target tensor
        0.030034: edge tensor
      0.000088: initializing solutions matrix
      0.033077: loop
      0.000029: postprocessing (MAX MEMORY: 1.290GB)
  0.000129: postprocess solutions
0.000189: reference resolution
0.038720: fragment resolution
  0.000475: identify previous emora questions
  0.038225: sal
0.397819: dialogue infer
  0.018485: facts graph types
  0.023001: convert facts graph
    0.002785: to digraph
    0.020054: flatten types (588 concepts)
    0.000147: quantities
  0.000026: process dynamic rules
  0.348683: match
    0.348608: match
      0.004481: querygen
      0.196590: creating graph tensor (1526 nodes, 5670 edges)
        0.032800: setup
        0.120371: key tensor
        0.007732: target tensor
        0.033851: edge tensor
      0.000090: initializing solutions matrix
      0.147210: loop
      0.000015: postprocessing (MAX MEMORY: 1.450GB)
  0.005242: postprocess solutions
0.046180: apply inferences
  0.006853: apply
  0.000538: update types
  0.000220: operate
  0.038547: sal
0.011082: reference id 2
0.272049: reference infer 2
  0.018634: facts graph types
  0.022350: convert facts graph
    0.002624: to digraph
    0.019562: flatten types (588 concepts)
    0.000146: quantities
  0.003976: process dynamic rules
  0.225034: match
    0.224956: match
      0.005788: querygen
      0.185700: creating graph tensor (1457 nodes, 5337 edges)
        0.031850: setup
        0.115247: key tensor
        0.007258: target tensor
        0.029625: edge tensor
      0.000090: initializing solutions matrix
      0.033154: loop
      0.000028: postprocessing (MAX MEMORY: 1.290GB)
  0.000122: postprocess solutions
0.000184: reference resolution 2
0.038477: fragment resolution 2
  0.000454: identify previous emora questions
  0.038007: sal
0.390725: dialogue infer 2
  0.018494: facts graph types
  0.023063: convert facts graph
    0.003001: to digraph
    0.019899: flatten types (588 concepts)
    0.000148: quantities
  0.000025: process dynamic rules
  0.341781: match
    0.341710: match
      0.004211: querygen
      0.191213: creating graph tensor (1526 nodes, 5670 edges)
        0.032487: setup
        0.115531: key tensor
        0.007532: target tensor
        0.033869: edge tensor
      0.000091: initializing solutions matrix
      0.145970: loop
      0.000014: postprocessing (MAX MEMORY: 1.450GB)
  0.005224: postprocess solutions
0.045919: apply inferences 2
  0.006471: apply
  0.000529: update types
  0.000218: operate
  0.038682: sal
0.007805: prepare template nlg
0.375342: template infer
  0.018451: facts graph types
  0.023170: convert facts graph
    0.002966: to digraph
    0.020040: flatten types (588 concepts)
    0.000149: quantities
  0.000025: process dynamic rules
  0.329210: match
    0.329131: match
      0.004301: querygen
      0.177057: creating graph tensor (1526 nodes, 5670 edges)
        0.032701: setup
        0.101228: key tensor
        0.007485: target tensor
        0.033817: edge tensor
      0.000088: initializing solutions matrix
      0.147422: loop
      0.000014: postprocessing (MAX MEMORY: 1.450GB)
  0.002276: postprocess solutions
0.001003: template fillers
0.000014: response sel
0.000426: response exp
0.000015: response rules
0.082645: response assembler
  0.000015: response assembly
  0.038969: update sal
  0.001570: decay sal
  0.042073: prune
    0.000015: setup
    0.000612: select keep
    0.000084: delete old spans
    0.033391: setup essentials
    0.005474: identify essentials
    0.002007: remove not keep

[2.58 s] Anyway , you seem like someone who might like sports. Do you?

User: ARG REQUESTS: []
TRUTH REQUESTS: [('emora', 'request_truth', 'wm3457', 'wm3458')]
CURRENT USER CONCEPTS: {'emora', 'unknown_noun', 'object', 'wm3488', 'wm3477', 'wm3467', 'wm3486', 'wm3469', 'wm3498', 'wm3492', 'wm3473', 'wm3481', 'wm3484', 'prp', 'wm3495', 'wm3480', 'wm3485', 'wm3487', 'now', 'wm3476'}
FRAGMENT REQUEST MERGES: []
ARG REQUESTS: []
TRUTH REQUESTS: [('emora', 'request_truth', 'wm3457', 'wm3458')]
CURRENT USER CONCEPTS: {'emora', 'unknown_noun', 'object', 'wm3488', 'wm3477', 'wm3467', 'wm3486', 'wm3469', 'wm3498', 'wm3492', 'wm3473', 'wm3481', 'wm3484', 'prp', 'wm3495', 'wm3480', 'wm3485', 'wm3487', 'now', 'wm3476'}
FRAGMENT REQUEST MERGES: []

0.000024: next turn
0.000015: sentence caser
0.110178: elit
0.608317: parse2logic
  0.002267: facts graph types
  0.003872: convert facts graph
    0.000945: to digraph
    0.002868: flatten types (142 concepts)
    0.000046: quantities
  0.000020: process dynamic rules
  0.588428: match
    0.588349: match
      0.000393: querygen
      0.133250: creating graph tensor (186 nodes, 629 edges)
        0.003410: setup
        0.118857: key tensor
        0.001122: target tensor
        0.009639: edge tensor
      0.000084: initializing solutions matrix
      0.454229: loop
      0.000019: postprocessing (MAX MEMORY: 0.020GB)
  0.003135: postprocess solutions
0.000048: multiword mentions
0.000012: ner mentions
0.005798: mention bridge
0.006903: merge bridge
0.028443: knowledge pull
0.011716: reference id
0.419796: reference infer
  0.021942: facts graph types
  0.025003: convert facts graph
    0.003134: to digraph
    0.021689: flatten types (637 concepts)
    0.000160: quantities
  0.004434: process dynamic rules
  0.366091: match
    0.366009: match
      0.006963: querygen
      0.329219: creating graph tensor (1569 nodes, 5738 edges)
        0.219526: setup
        0.069467: key tensor
        0.007623: target tensor
        0.030724: edge tensor
      0.000089: initializing solutions matrix
      0.029515: loop
      0.000027: postprocessing (MAX MEMORY: 1.491GB)
  0.000124: postprocess solutions
0.000189: reference resolution
0.064119: fragment resolution
  0.000490: identify previous emora questions
  0.022275: find answer
  0.041334: sal
3.986025: dialogue infer
  0.020968: facts graph types
  0.024835: convert facts graph
    0.003136: to digraph
    0.021527: flatten types (637 concepts)
    0.000157: quantities
  0.000027: process dynamic rules
  3.932269: match
    3.932191: match
      0.004635: querygen
      2.846488: creating graph tensor (1644 nodes, 6101 edges)
        0.035339: setup
        2.762383: key tensor
        0.008438: target tensor
        0.038113: edge tensor
      0.000090: initializing solutions matrix
      1.080755: loop
      0.000014: postprocessing (MAX MEMORY: 1.679GB)
  0.005360: postprocess solutions
0.049984: apply inferences
  0.006795: apply
  0.000558: update types
  0.000279: operate
  0.042331: sal
0.011681: reference id 2
0.245715: reference infer 2
  0.021310: facts graph types
  0.024186: convert facts graph
    0.002885: to digraph
    0.021124: flatten types (639 concepts)
    0.000159: quantities
  0.004320: process dynamic rules
  0.193626: match
    0.193547: match
      0.006134: querygen
      0.159285: creating graph tensor (1571 nodes, 5740 edges)
        0.034167: setup
        0.083500: key tensor
        0.007733: target tensor
        0.032018: edge tensor
      0.000090: initializing solutions matrix
      0.027807: loop
      0.000027: postprocessing (MAX MEMORY: 1.493GB)
  0.000117: postprocess solutions
0.000184: reference resolution 2
0.064459: fragment resolution 2
  0.000495: identify previous emora questions
  0.022370: find answer
  0.041575: sal
3.683958: dialogue infer 2
  0.021303: facts graph types
  0.025312: convert facts graph
    0.003006: to digraph
    0.022133: flatten types (639 concepts)
    0.000159: quantities
  0.000025: process dynamic rules
  3.629452: match
    3.629374: match
      0.004195: querygen
      2.453512: creating graph tensor (1646 nodes, 6103 edges)
        0.035712: setup
        2.372050: key tensor
        0.009830: target tensor
        0.033621: edge tensor
      0.000095: initializing solutions matrix
      1.171351: loop
      0.000014: postprocessing (MAX MEMORY: 1.680GB)
  0.005311: postprocess solutions
0.048759: apply inferences 2
  0.006769: apply
  0.000554: update types
  0.000188: operate
  0.041227: sal
0.008248: prepare template nlg
1.313754: template infer
  0.021418: facts graph types
  0.025160: convert facts graph
    0.002920: to digraph
    0.022069: flatten types (639 concepts)
    0.000158: quantities
  0.000026: process dynamic rules
  1.262568: match
    1.262488: match
      0.004229: querygen
      0.973460: creating graph tensor (1646 nodes, 6103 edges)
        0.036022: setup
        0.893091: key tensor
        0.008187: target tensor
        0.033897: edge tensor
      0.000093: initializing solutions matrix
      0.284497: loop
      0.000015: postprocessing (MAX MEMORY: 1.680GB)
  0.002029: postprocess solutions
0.000993: template fillers
0.000015: response sel
0.000407: response exp
0.000015: response rules
0.091756: response assembler
  0.000015: response assembly
  0.042168: update sal
  0.001698: decay sal
  0.047861: prune
    0.000012: setup
    0.000668: select keep
    0.000087: delete old spans
    0.038561: setup essentials
    0.005560: identify essentials
    0.002636: remove not keep

[10.76 s] You know, I was actually just wondering, do you like to travel ?

User: ARG REQUESTS: []
TRUTH REQUESTS: [('emora', 'request_truth', 'wm3555', 'wm3556')]
CURRENT USER CONCEPTS: {'wm3563', 'wm3564', 'user', 'wm3562', 'predicate'}
FRAGMENT REQUEST MERGES: []
ARG REQUESTS: []
TRUTH REQUESTS: [('emora', 'request_truth', 'wm3555', 'wm3556')]
CURRENT USER CONCEPTS: {'wm3563', 'wm3564', 'user', 'wm3562', 'predicate'}
FRAGMENT REQUEST MERGES: []

0.000021: next turn
0.000013: sentence caser
0.109906: elit
0.221822: parse2logic
  0.000379: facts graph types
  0.178352: convert facts graph
    0.177806: to digraph
    0.000509: flatten types (26 concepts)
    0.000021: quantities
  0.000026: process dynamic rules
  0.040538: match
    0.040454: match
      0.000095: querygen
      0.006338: creating graph tensor (30 nodes, 82 edges)
        0.000539: setup
        0.001389: key tensor
        0.000367: target tensor
        0.004002: edge tensor
      0.000073: initializing solutions matrix
      0.033732: loop
      0.000013: postprocessing (MAX MEMORY: 0.001GB)
  0.000455: postprocess solutions
0.000034: multiword mentions
0.000012: ner mentions
0.001502: mention bridge
0.002997: merge bridge
0.026974: knowledge pull
0.013717: reference id
0.205256: reference infer
  0.019506: facts graph types
  0.023427: convert facts graph
    0.003427: to digraph
    0.019829: flatten types (605 concepts)
    0.000152: quantities
  0.004639: process dynamic rules
  0.155591: match
    0.155515: match
      0.006609: querygen
      0.129991: creating graph tensor (1479 nodes, 5405 edges)
        0.031347: setup
        0.058096: key tensor
        0.007434: target tensor
        0.031500: edge tensor
      0.000087: initializing solutions matrix
      0.018614: loop
      0.000028: postprocessing (MAX MEMORY: 1.324GB)
  0.000118: postprocess solutions
0.000181: reference resolution
0.040583: fragment resolution
  0.000486: identify previous emora questions
  0.000938: find answer
  0.039142: sal
0.341641: dialogue infer
  0.019390: facts graph types
  0.024075: convert facts graph
    0.002917: to digraph
    0.020991: flatten types (605 concepts)
    0.000153: quantities
  0.000025: process dynamic rules
  0.290828: match
    0.290754: match
      0.004007: querygen
      0.129748: creating graph tensor (1562 nodes, 5807 edges)
        0.034098: setup
        0.054261: key tensor
        0.007631: target tensor
        0.032030: edge tensor
      0.000088: initializing solutions matrix
      0.156677: loop
      0.000014: postprocessing (MAX MEMORY: 1.520GB)
  0.004825: postprocess solutions
0.046855: apply inferences
  0.005953: apply
  0.000551: update types
  0.000277: operate
  0.040052: sal
0.013525: reference id 2
0.238448: reference infer 2
  0.019483: facts graph types
  0.022579: convert facts graph
    0.002930: to digraph
    0.019478: flatten types (607 concepts)
    0.000153: quantities
  0.004637: process dynamic rules
  0.189536: match
    0.189457: match
      0.006406: querygen
      0.160218: creating graph tensor (1481 nodes, 5407 edges)
        0.030921: setup
        0.091080: key tensor
        0.007494: target tensor
        0.029058: edge tensor
      0.000087: initializing solutions matrix
      0.022527: loop
      0.000028: postprocessing (MAX MEMORY: 1.325GB)
  0.000118: postprocess solutions
0.000185: reference resolution 2
0.040890: fragment resolution 2
  0.000485: identify previous emora questions
  0.000932: find answer
  0.039456: sal
0.359165: dialogue infer 2
  0.019423: facts graph types
  0.024027: convert facts graph
    0.002900: to digraph
    0.020960: flatten types (607 concepts)
    0.000152: quantities
  0.000024: process dynamic rules
  0.308431: match
    0.308354: match
      0.003899: querygen
      0.137400: creating graph tensor (1564 nodes, 5809 edges)
        0.033904: setup
        0.057807: key tensor
        0.007583: target tensor
        0.036363: edge tensor
      0.000088: initializing solutions matrix
      0.166734: loop
      0.000014: postprocessing (MAX MEMORY: 1.522GB)
  0.004848: postprocess solutions
0.046711: apply inferences 2
  0.005709: apply
  0.000549: update types
  0.000180: operate
  0.040254: sal
0.008000: prepare template nlg
0.567049: template infer
  0.019536: facts graph types
  0.023911: convert facts graph
    0.003087: to digraph
    0.020654: flatten types (607 concepts)
    0.000154: quantities
  0.000025: process dynamic rules
  0.519056: match
    0.518977: match
      0.004375: querygen
      0.354025: creating graph tensor (1564 nodes, 5809 edges)
        0.033090: setup
        0.089643: key tensor
        0.194270: target tensor
        0.035097: edge tensor
      0.000093: initializing solutions matrix
      0.160201: loop
      0.000015: postprocessing (MAX MEMORY: 1.522GB)
  0.002028: postprocess solutions
0.000988: template fillers
0.000015: response sel
0.000428: response exp
0.000015: response rules
0.086956: response assembler
  0.000016: response assembly
  0.040886: update sal
  0.001631: decay sal
  0.044408: prune
    0.000011: setup
    0.000643: select keep
    0.000086: delete old spans
    0.035634: setup essentials
    0.005723: identify essentials
    0.001979: remove not keep

[2.38 s] You know , I have always felt a connection to video games since, they're of a virtual world like me . Do you like them too ?

User: ARG REQUESTS: []
TRUTH REQUESTS: [('emora', 'request_truth', 'wm3582', 'wm3584')]
CURRENT USER CONCEPTS: {'wm3608', 'wm3596', 'past', 'wm3606', 'wm3595', 'life', 'predicate', 'wm3618', 'wm3622', 'wm3611', 'have', 'wm3623', 'wm3600', 'user', 'wm3617', 'wm3607', 'wm3616', 'wm3603', 'wm3612', 'wm3627', 'wm3619', 'wm3613', 'unknown_other', 'wm3591'}
FRAGMENT REQUEST MERGES: [('wm3611', 'wm3582')]
ARG REQUESTS: []
TRUTH REQUESTS: []

React + Present Options:
	Oh, awesome, that makes us two peas in a pod! What games do you like? (s: 0.55, pr: 0.50)


0.000021: next turn
0.000015: sentence caser
0.113105: elit
1.497618: parse2logic
  0.002411: facts graph types
  0.003603: convert facts graph
    0.000702: to digraph
    0.002842: flatten types (143 concepts)
    0.000046: quantities
  0.000021: process dynamic rules
  1.478357: match
    1.478274: match
      0.000439: querygen
      0.627717: creating graph tensor (184 nodes, 617 edges)
        0.003426: setup
        0.612971: key tensor
        0.002382: target tensor
        0.008766: edge tensor
      0.000084: initializing solutions matrix
      0.849824: loop
      0.000015: postprocessing (MAX MEMORY: 0.019GB)
  0.002351: postprocess solutions
0.000055: multiword mentions
0.000012: ner mentions
0.006163: mention bridge
0.007412: merge bridge
0.029540: knowledge pull
0.014682: reference id
0.205397: reference infer
  0.022190: facts graph types
  0.026278: convert facts graph
    0.003944: to digraph
    0.022152: flatten types (664 concepts)
    0.000163: quantities
  0.005569: process dynamic rules
  0.149429: match
    0.149352: match
      0.006857: querygen
      0.124012: creating graph tensor (1638 nodes, 5976 edges)
        0.035568: setup
        0.046047: key tensor
        0.008111: target tensor
        0.032760: edge tensor
      0.000088: initializing solutions matrix
      0.018184: loop
      0.000027: postprocessing (MAX MEMORY: 1.618GB)
  0.000106: postprocess solutions
0.000178: reference resolution
0.066968: fragment resolution
  0.000485: identify previous emora questions
  0.024124: find answer
  0.042339: sal
0.489861: dialogue infer
  0.021977: facts graph types
  0.025411: convert facts graph
    0.003304: to digraph
    0.021930: flatten types (661 concepts)
    0.000164: quantities
  0.000023: process dynamic rules
  0.434641: match
    0.434580: match
      0.004411: querygen
      0.243247: creating graph tensor (1722 nodes, 6403 edges)
        0.035454: setup
        0.156351: key tensor
        0.008104: target tensor
        0.041461: edge tensor
      0.000105: initializing solutions matrix
      0.186596: loop
      0.000014: postprocessing (MAX MEMORY: 1.848GB)
  0.005065: postprocess solutions
0.055391: apply inferences
  0.008837: apply
  0.000984: update types
  0.000548: operate
  0.045001: sal
0.018584: reference id 2
0.706800: reference infer 2
  0.023721: facts graph types
  0.025012: convert facts graph
    0.003308: to digraph
    0.021510: flatten types (694 concepts)
    0.000174: quantities
  0.007691: process dynamic rules
  0.648723: match
    0.648659: match
      0.007117: querygen
      0.613820: creating graph tensor (1686 nodes, 6141 edges)
        0.036150: setup
        0.534528: key tensor
        0.007929: target tensor
        0.033724: edge tensor
      0.000086: initializing solutions matrix
      0.027419: loop
      0.000029: postprocessing (MAX MEMORY: 1.710GB)
  0.000098: postprocess solutions
0.000169: reference resolution 2
0.045406: fragment resolution 2
  0.000519: identify previous emora questions
  0.044871: sal
0.647450: dialogue infer 2
  0.023668: facts graph types
  0.026762: convert facts graph
    0.003120: to digraph
    0.023457: flatten types (694 concepts)
    0.000170: quantities
  0.000022: process dynamic rules
  0.589166: match
    0.589106: match
      0.004107: querygen
      0.377009: creating graph tensor (1815 nodes, 6747 edges)
        0.037591: setup
        0.106491: key tensor
        0.008183: target tensor
        0.222655: edge tensor
      0.000097: initializing solutions matrix
      0.207669: loop
      0.000014: postprocessing (MAX MEMORY: 2.052GB)
  0.005431: postprocess solutions
0.053466: apply inferences 2
  0.006783: apply
  0.000944: update types
  0.000229: operate
  0.045491: sal
0.008817: prepare template nlg
0.835915: template infer
  0.024055: facts graph types
  0.027289: convert facts graph
    0.003475: to digraph
    0.023628: flatten types (700 concepts)
    0.000171: quantities
  0.000021: process dynamic rules
  0.780036: match
    0.779972: match
      0.005050: querygen
      0.453176: creating graph tensor (1829 nodes, 6799 edges)
        0.037794: setup
        0.360766: key tensor
        0.008258: target tensor
        0.044842: edge tensor
      0.000087: initializing solutions matrix
      0.321384: loop
      0.000015: postprocessing (MAX MEMORY: 2.083GB)
  0.002202: postprocess solutions
0.001069: template fillers
0.000015: response sel
0.000090: response exp
0.000013: response rules
0.101146: response assembler
  0.000014: response assembly
  0.045494: update sal
  0.001790: decay sal
  0.053833: prune
    0.000016: setup
    0.000769: select keep
    0.000076: delete old spans
    0.042895: setup essentials
    0.005531: identify essentials
    0.004050: remove not keep

[4.91 s] Oh, awesome, that makes us two peas in a pod! What games do you like?

User: ARG REQUESTS: [('emora', 'request', 'wm3581', 'wm3707')]
TRUTH REQUESTS: []
CURRENT USER CONCEPTS: {'wm3737', 'wm3719', 'person', 'wm3717', 'wm3747', 'wm3752', 'wm3742', 'wm3753', 'wm3751', 'wm3733', 'wm3725', 'wm3723', 'user', 'prp', 'wm3758', 'wm3722', 'wm3743', 'now', 'unknown_other', 'wm3734'}
FRAGMENT REQUEST MERGES: []
ARG REQUESTS: [('emora', 'request', 'wm3581', 'wm3707')]
TRUTH REQUESTS: []
CURRENT USER CONCEPTS: {'wm3737', 'wm3719', 'person', 'wm3717', 'wm3747', 'wm3752', 'wm3742', 'wm3753', 'wm3751', 'wm3733', 'wm3725', 'wm3723', 'user', 'prp', 'wm3758', 'wm3722', 'wm3743', 'now', 'unknown_other', 'wm3734'}
FRAGMENT REQUEST MERGES: []

React + Present Options:
	I love how many options there are for video games. Anyone can find something that they like. Multiplayer games are my personal favorite. Do you have a favorite genre of games? (s: 0.30, pr: 0.10)
	I’m glad to hear that you are busy with Your job . are you going back to the office ? (s: 0.22, pr: 1.00)


Present Options:
	I think having passions for one's job is important . Do you like your job ? (s: 0.70, pr: 0.10)


0.000018: next turn
0.000014: sentence caser
0.113848: elit
0.288406: parse2logic
  0.002682: facts graph types
  0.004211: convert facts graph
    0.000772: to digraph
    0.003376: flatten types (158 concepts)
    0.000050: quantities
  0.000020: process dynamic rules
  0.266209: match
    0.266149: match
      0.000452: querygen
      0.024788: creating graph tensor (225 nodes, 779 edges)
        0.004209: setup
        0.009439: key tensor
        0.001124: target tensor
        0.009802: edge tensor
      0.000083: initializing solutions matrix
      0.240585: loop
      0.000015: postprocessing (MAX MEMORY: 0.029GB)
  0.003734: postprocess solutions
0.000051: multiword mentions
0.000011: ner mentions
0.006173: mention bridge
0.014807: merge bridge
0.029830: knowledge pull
0.018103: reference id
0.219783: reference infer
  0.022986: facts graph types
  0.024921: convert facts graph
    0.003743: to digraph
    0.020991: flatten types (686 concepts)
    0.000168: quantities
  0.007168: process dynamic rules
  0.163048: match
    0.162989: match
      0.006529: querygen
      0.137514: creating graph tensor (1638 nodes, 5973 edges)
        0.034563: setup
        0.060007: key tensor
        0.007485: target tensor
        0.034116: edge tensor
      0.000086: initializing solutions matrix
      0.018664: loop
      0.000027: postprocessing (MAX MEMORY: 1.617GB)
  0.000096: postprocess solutions
0.000165: reference resolution
0.068060: fragment resolution
  0.000466: identify previous emora questions
  0.023833: find answer
  0.043743: sal
0.579114: dialogue infer
  0.023058: facts graph types
  0.026327: convert facts graph
    0.003283: to digraph
    0.022857: flatten types (686 concepts)
    0.000172: quantities
  0.000023: process dynamic rules
  0.522372: match
    0.522314: match
      0.004041: querygen
      0.286660: creating graph tensor (1763 nodes, 6552 edges)
        0.037169: setup
        0.201655: key tensor
        0.007910: target tensor
        0.038490: edge tensor
      0.000085: initializing solutions matrix
      0.231327: loop
      0.000014: postprocessing (MAX MEMORY: 1.935GB)
  0.005844: postprocess solutions
0.056224: apply inferences
  0.009046: apply
  0.000807: update types
  0.000168: operate
  0.046184: sal
0.019897: reference id 2
0.222358: reference infer 2
  0.024300: facts graph types
  0.024911: convert facts graph
    0.003086: to digraph
    0.021631: flatten types (709 concepts)
    0.000174: quantities
  0.007842: process dynamic rules
  0.164021: match
    0.163960: match
      0.007193: querygen
      0.127577: creating graph tensor (1690 nodes, 6164 edges)
        0.033843: setup
        0.051533: key tensor
        0.007264: target tensor
        0.033604: edge tensor
      0.000086: initializing solutions matrix
      0.028902: loop
      0.000028: postprocessing (MAX MEMORY: 1.722GB)
  0.000087: postprocess solutions
0.000161: reference resolution 2
0.070720: fragment resolution 2
  0.000484: identify previous emora questions
  0.024948: find answer
  0.045270: sal
0.552554: dialogue infer 2
  0.024316: facts graph types
  0.200665: convert facts graph
    0.003355: to digraph
    0.197109: flatten types (709 concepts)
    0.000185: quantities
  0.000026: process dynamic rules
  0.319525: match
    0.319438: match
      0.005213: querygen
      0.149255: creating graph tensor (1843 nodes, 6859 edges)
        0.040486: setup
        0.060900: key tensor
        0.008602: target tensor
        0.037752: edge tensor
      0.000086: initializing solutions matrix
      0.164695: loop
      0.000013: postprocessing (MAX MEMORY: 2.120GB)
  0.006224: postprocess solutions
0.058198: apply inferences 2
  0.008745: apply
  0.000943: update types
  0.000180: operate
  0.048310: sal
0.008750: prepare template nlg
0.486907: template infer
  0.025509: facts graph types
  0.028372: convert facts graph
    0.003383: to digraph
    0.024795: flatten types (725 concepts)
    0.000180: quantities
  0.000021: process dynamic rules
  0.427533: match
    0.427469: match
      0.004813: querygen
      0.210813: creating graph tensor (1897 nodes, 7062 edges)
        0.038980: setup
        0.120988: key tensor
        0.008806: target tensor
        0.040066: edge tensor
      0.000087: initializing solutions matrix
      0.211510: loop
      0.000014: postprocessing (MAX MEMORY: 2.246GB)
  0.002829: postprocess solutions
0.002437: template fillers
0.000015: response sel
0.000158: response exp
0.000014: response rules
0.106623: response assembler
  0.000015: response assembly
  0.047457: update sal
  0.001874: decay sal
  0.057262: prune
    0.000013: setup
    0.000753: select keep
    0.000099: delete old spans
    0.044518: setup essentials
    0.006211: identify essentials
    0.005301: remove not keep

[2.92 s] I'm glad to hear that you are busy with Your job . are you going back to the office ?

User: ARG REQUESTS: []
TRUTH REQUESTS: [('emora', 'request_truth', 'wm3843', 'wm3845')]
CURRENT USER CONCEPTS: {'wm3877', 'wm3959', 'unknown_noun', 'office', 'wm3949', 'wm3923', 'wm3952', 'wm3897', 'wm3931', 'wm3954', 'wm3916', 'wm3935', 'wm3879', 'wm3864', 'wm3936', 'wm3889', 'wm3924', 'wm3942', 'wm3893', 'wm3937', 'wm3860', 'wm3947', 'wm3884', 'wm3899', 'wm3913', 'wm3907', 'wm3874', 'wm3900', 'user', 'wm3958', 'wm3941', 'wm3868', 'prp', 'wm3904', 'wm3883', 'wm3930', 'wm3919', 'wm3910', 'wm3963', 'wm3925', 'wm3885', 'wm3946', 'wm3940', 'wm3948', 'wm3878', 'wm3871', 'now', 'unknown_other', 'wm3943'}
FRAGMENT REQUEST MERGES: [('wm4102', 'wm3843')]
ARG REQUESTS: []
TRUTH REQUESTS: []

Present Options:
	I think having passions for one's job is important . Do you like your job ? (s: 0.56, pr: 0.10)
	Then you can see your colleagues in person instead of working in front of computers all day long ! Are you excited about working in the office ? (s: 0.34, pr: 1.00)


0.000020: next turn
0.000015: sentence caser
0.117789: elit
0.516469: parse2logic
  0.007038: facts graph types
  0.010040: convert facts graph
    0.002447: to digraph
    0.007483: flatten types (352 concepts)
    0.000097: quantities
  0.000022: process dynamic rules
  0.464575: match
    0.464494: match
      0.001218: querygen
      0.030975: creating graph tensor (477 nodes, 1695 edges)
        0.009901: setup
        0.003294: key tensor
        0.002572: target tensor
        0.014808: edge tensor
      0.000085: initializing solutions matrix
      0.432009: loop
      0.000014: postprocessing (MAX MEMORY: 0.750GB)
  0.006795: postprocess solutions
0.000076: multiword mentions
0.000013: ner mentions
0.014763: mention bridge
0.037749: merge bridge
0.034687: knowledge pull
0.024154: reference id
0.264329: reference infer
  0.028847: facts graph types
  0.029787: convert facts graph
    0.003769: to digraph
    0.025804: flatten types (800 concepts)
    0.000191: quantities
  0.007857: process dynamic rules
  0.195098: match
    0.195016: match
      0.008701: querygen
      0.141241: creating graph tensor (1900 nodes, 6909 edges)
        0.040067: setup
        0.052875: key tensor
        0.008278: target tensor
        0.038046: edge tensor
      0.000087: initializing solutions matrix
      0.044757: loop
      0.000031: postprocessing (MAX MEMORY: 2.165GB)
  0.000245: postprocess solutions
0.001830: reference resolution
0.082727: fragment resolution
  0.000463: identify previous emora questions
  0.031363: find answer
  0.050880: sal
1.415649: dialogue infer
  0.028889: facts graph types
  0.030936: convert facts graph
    0.003613: to digraph
    0.027118: flatten types (799 concepts)
    0.000191: quantities
  0.000026: process dynamic rules
  1.346199: match
    1.346118: match
      0.005644: querygen
      1.046807: creating graph tensor (2032 nodes, 7524 edges)
        0.233108: setup
        0.757912: key tensor
        0.010446: target tensor
        0.042632: edge tensor
      0.000092: initializing solutions matrix
      0.293377: loop
      0.000013: postprocessing (MAX MEMORY: 2.554GB)
  0.006497: postprocess solutions
0.065079: apply inferences
  0.010215: apply
  0.001607: update types
  0.000242: operate
  0.052993: sal
0.022908: reference id 2
0.428964: reference infer 2
  0.030871: facts graph types
  0.030770: convert facts graph
    0.003710: to digraph
    0.026841: flatten types (831 concepts)
    0.000199: quantities
  0.007982: process dynamic rules
  0.356229: match
    0.356146: match
      0.008014: querygen
      0.313476: creating graph tensor (1991 nodes, 7261 edges)
        0.041615: setup
        0.216580: key tensor
        0.009257: target tensor
        0.043645: edge tensor
      0.000092: initializing solutions matrix
      0.034327: loop
      0.000032: postprocessing (MAX MEMORY: 2.389GB)
  0.000124: postprocess solutions
0.000192: reference resolution 2
0.053683: fragment resolution 2
  0.000479: identify previous emora questions
  0.053186: sal
1.105377: dialogue infer 2
  0.030833: facts graph types
  0.032655: convert facts graph
    0.003968: to digraph
    0.028472: flatten types (831 concepts)
    0.000200: quantities
  0.000027: process dynamic rules
  1.031838: match
    1.031758: match
      0.005864: querygen
      0.750166: creating graph tensor (2125 nodes, 7875 edges)
        0.045075: setup
        0.645544: key tensor
        0.010708: target tensor
        0.046185: edge tensor
      0.000094: initializing solutions matrix
      0.275435: loop
      0.000013: postprocessing (MAX MEMORY: 2.797GB)
  0.006670: postprocess solutions
0.061771: apply inferences 2
  0.007988: apply
  0.000665: update types
  0.000263: operate
  0.052835: sal
0.009842: prepare template nlg
0.739044: template infer
  0.031105: facts graph types
  0.032543: convert facts graph
    0.003897: to digraph
    0.028430: flatten types (831 concepts)
    0.000200: quantities
  0.000026: process dynamic rules
  0.669309: match
    0.669228: match
      0.005955: querygen
      0.349662: creating graph tensor (2125 nodes, 7875 edges)
        0.044834: setup
        0.239115: key tensor
        0.010285: target tensor
        0.052912: edge tensor
      0.000093: initializing solutions matrix
      0.313192: loop
      0.000015: postprocessing (MAX MEMORY: 2.797GB)
  0.002846: postprocess solutions
0.001343: template fillers
0.000015: response sel
0.000224: response exp
0.000013: response rules
0.129542: response assembler
  0.000014: response assembly
  0.053988: update sal
  0.002230: decay sal
  0.073293: prune
    0.000017: setup
    0.000849: select keep
    0.000102: delete old spans
    0.054710: setup essentials
    0.007455: identify essentials
    0.009582: remove not keep

[5.13 s] Yeah . Then you can see your colleagues in person instead of working in front of computers all day long ! Are you excited about working in the office ?

User: ARG REQUESTS: []
TRUTH REQUESTS: [('emora', 'request_truth', 'wm4116', 'wm4117')]
CURRENT USER CONCEPTS: {'unknown_noun', 'wm4168', 'wm4161', 'wm4143', 'wm4149', 'wm4183', 'wm4182', 'wm4158', 'wm4181', 'wm4145', 'wm4140', 'wm4188', 'computer', 'user', 'wm4176', 'wm4164', 'day', 'prp', 'wm4177', 'wm4173', 'wm4148', 'wm4175', 'wm4153', 'wm4156', 'wm4187', 'wm4174', 'now', 'unknown_other', 'wm4134'}
FRAGMENT REQUEST MERGES: []
ARG REQUESTS: []
TRUTH REQUESTS: [('emora', 'request_truth', 'wm4116', 'wm4117')]
CURRENT USER CONCEPTS: {'unknown_noun', 'wm4168', 'wm4161', 'wm4143', 'wm4149', 'wm4183', 'wm4182', 'wm4158', 'wm4181', 'wm4145', 'wm4140', 'wm4188', 'computer', 'user', 'wm4176', 'wm4164', 'day', 'prp', 'wm4177', 'wm4173', 'wm4148', 'wm4175', 'wm4153', 'wm4156', 'wm4187', 'wm4174', 'now', 'unknown_other', 'wm4134'}
FRAGMENT REQUEST MERGES: []

Present Options:
	I think having passions for one's job is important . Do you like your job ? (s: 0.41, pr: 0.10)


0.000021: next turn
0.000015: sentence caser
0.112779: elit
0.471663: parse2logic
  0.004396: facts graph types
  0.005920: convert facts graph
    0.001174: to digraph
    0.004669: flatten types (231 concepts)
    0.000064: quantities
  0.000021: process dynamic rules
  0.440150: match
    0.440072: match
      0.000636: querygen
      0.207211: creating graph tensor (297 nodes, 1023 edges)
        0.005421: setup
        0.008220: key tensor
        0.185050: target tensor
        0.008158: edge tensor
      0.000091: initializing solutions matrix
      0.231916: loop
      0.000013: postprocessing (MAX MEMORY: 0.050GB)
  0.004504: postprocess solutions
0.000054: multiword mentions
0.000012: ner mentions
0.008872: mention bridge
0.023037: merge bridge
0.031752: knowledge pull
0.016234: reference id
0.215794: reference infer
  0.024872: facts graph types
  0.027441: convert facts graph
    0.004393: to digraph
    0.022849: flatten types (726 concepts)
    0.000178: quantities
  0.006356: process dynamic rules
  0.154839: match
    0.154761: match
      0.007673: querygen
      0.118109: creating graph tensor (1665 nodes, 6039 edges)
        0.035075: setup
        0.040674: key tensor
        0.007396: target tensor
        0.033163: edge tensor
      0.000090: initializing solutions matrix
      0.028662: loop
      0.000030: postprocessing (MAX MEMORY: 1.656GB)
  0.000008: postprocess solutions
0.000014: reference resolution
0.047874: fragment resolution
  0.000464: identify previous emora questions
  0.001076: find answer
  0.046314: sal
0.345236: dialogue infer
  0.025329: facts graph types
  0.027273: convert facts graph
    0.003563: to digraph
    0.023513: flatten types (726 concepts)
    0.000182: quantities
  0.000026: process dynamic rules
  0.284694: match
    0.284612: match
      0.004986: querygen
      0.152980: creating graph tensor (1785 nodes, 6586 edges)
        0.037787: setup
        0.067599: key tensor
        0.008261: target tensor
        0.037294: edge tensor
      0.000091: initializing solutions matrix
      0.126338: loop
      0.000014: postprocessing (MAX MEMORY: 1.960GB)
  0.005289: postprocess solutions
0.053436: apply inferences
  0.006053: apply
  0.000597: update types
  0.000188: operate
  0.046576: sal
0.016112: reference id 2
0.213206: reference infer 2
  0.025253: facts graph types
  0.025976: convert facts graph
    0.003173: to digraph
    0.022601: flatten types (726 concepts)
    0.000181: quantities
  0.006322: process dynamic rules
  0.153455: match
    0.153375: match
      0.006871: querygen
      0.117584: creating graph tensor (1665 nodes, 6039 edges)
        0.035438: setup
        0.039789: key tensor
        0.007473: target tensor
        0.033080: edge tensor
      0.000090: initializing solutions matrix
      0.028606: loop
      0.000029: postprocessing (MAX MEMORY: 1.656GB)
  0.000009: postprocess solutions
0.000013: reference resolution 2
0.047620: fragment resolution 2
  0.000449: identify previous emora questions
  0.001073: find answer
  0.046079: sal
0.352856: dialogue infer 2
  0.025194: facts graph types
  0.027640: convert facts graph
    0.003305: to digraph
    0.024137: flatten types (726 concepts)
    0.000183: quantities
  0.000027: process dynamic rules
  0.292050: match
    0.291961: match
      0.004346: querygen
      0.160713: creating graph tensor (1785 nodes, 6586 edges)
        0.038433: setup
        0.074248: key tensor
        0.008428: target tensor
        0.037361: edge tensor
      0.000091: initializing solutions matrix
      0.126596: loop
      0.000013: postprocessing (MAX MEMORY: 1.960GB)
  0.005237: postprocess solutions
0.053849: apply inferences 2
  0.006075: apply
  0.000581: update types
  0.000190: operate
  0.046983: sal
0.009919: prepare template nlg
0.635944: template infer
  0.025110: facts graph types
  0.208582: convert facts graph
    0.003316: to digraph
    0.205057: flatten types (726 concepts)
    0.000191: quantities
  0.000027: process dynamic rules
  0.397602: match
    0.397501: match
      0.005476: querygen
      0.230279: creating graph tensor (1785 nodes, 6586 edges)
        0.038413: setup
        0.135733: key tensor
        0.008609: target tensor
        0.045434: edge tensor
      0.000091: initializing solutions matrix
      0.161383: loop
      0.000014: postprocessing (MAX MEMORY: 1.960GB)
  0.001833: postprocess solutions
0.000309: template fillers
0.000014: response sel
0.000192: response exp
0.000014: response rules
0.105962: response assembler
  0.000015: response assembly
  0.046976: update sal
  0.001929: decay sal
  0.057027: prune
    0.000012: setup
    0.000721: select keep
    0.000119: delete old spans
    0.043791: setup essentials
    0.007664: identify essentials
    0.004332: remove not keep

[2.76 s] Okay . I think having passions for one's job is important . Do you like your job ?

User: ARG REQUESTS: []
TRUTH REQUESTS: [('emora', 'request_truth', 'wm3817', 'wm3819')]
CURRENT USER CONCEPTS: {'wm4330', 'wm4319', 'wm4308', 'wm4300', 'wm4331', 'unknown_noun', 'wm4297', 'wm4280', 'wm4325', 'wm4314', 'wm4318', 'wm4298', 'wm4305', 'wm4277', 'wm4304', 'wm4326', 'wm4336', 'wm4320', 'wm4315', 'walk', 'wm4322', 'wm4332', 'wm4293', 'wm4289', 'user', 'wm4278', 'wm4321', 'wm4313', 'prp', 'unknown_verb', 'wm4294', 'now', 'unknown_other', 'take', 'wm4299'}
FRAGMENT REQUEST MERGES: []
ARG REQUESTS: []
TRUTH REQUESTS: [('emora', 'request_truth', 'wm3817', 'wm3819')]
CURRENT USER CONCEPTS: {'wm4330', 'wm4319', 'wm4308', 'wm4300', 'wm4331', 'unknown_noun', 'wm4297', 'wm4280', 'wm4325', 'wm4314', 'wm4318', 'wm4298', 'wm4305', 'wm4277', 'wm4304', 'wm4326', 'wm4336', 'wm4320', 'wm4315', 'walk', 'wm4322', 'wm4332', 'wm4293', 'wm4289', 'user', 'wm4278', 'wm4321', 'wm4313', 'prp', 'unknown_verb', 'wm4294', 'now', 'unknown_other', 'take', 'wm4299'}
FRAGMENT REQUEST MERGES: []

0.000021: next turn
0.000015: sentence caser
0.114671: elit
0.557178: parse2logic
  0.004614: facts graph types
  0.006817: convert facts graph
    0.001342: to digraph
    0.005392: flatten types (260 concepts)
    0.000069: quantities
  0.000021: process dynamic rules
  0.523154: match
    0.523076: match
      0.000756: querygen
      0.162823: creating graph tensor (346 nodes, 1207 edges)
        0.007190: setup
        0.145207: key tensor
        0.001901: target tensor
        0.008119: edge tensor
      0.000085: initializing solutions matrix
      0.359052: loop
      0.000017: postprocessing (MAX MEMORY: 0.068GB)
  0.004031: postprocess solutions
0.000066: multiword mentions
0.000013: ner mentions
0.009414: mention bridge
0.029438: merge bridge
0.034070: knowledge pull
0.016667: reference id
0.264279: reference infer
  0.027265: facts graph types
  0.028568: convert facts graph
    0.003721: to digraph
    0.024642: flatten types (774 concepts)
    0.000186: quantities
  0.005874: process dynamic rules
  0.200014: match
    0.199937: match
      0.007766: querygen
      0.160982: creating graph tensor (1780 nodes, 6469 edges)
        0.037673: setup
        0.067861: key tensor
        0.008008: target tensor
        0.045436: edge tensor
      0.000089: initializing solutions matrix
      0.030875: loop
      0.000029: postprocessing (MAX MEMORY: 1.899GB)
  0.000009: postprocess solutions
0.000014: reference resolution
0.079107: fragment resolution
  0.000457: identify previous emora questions
  0.028354: find answer
  0.050275: sal
0.648672: dialogue infer
  0.027154: facts graph types
  0.030038: convert facts graph
    0.003646: to digraph
    0.026189: flatten types (774 concepts)
    0.000186: quantities
  0.000029: process dynamic rules
  0.583387: match
    0.583303: match
      0.005550: querygen
      0.330388: creating graph tensor (1891 nodes, 6982 edges)
        0.040797: setup
        0.236473: key tensor
        0.009031: target tensor
        0.041836: edge tensor
      0.000088: initializing solutions matrix
      0.247041: loop
      0.000014: postprocessing (MAX MEMORY: 2.202GB)
  0.005123: postprocess solutions
0.056996: apply inferences
  0.005850: apply
  0.000657: update types
  0.000203: operate
  0.050266: sal
0.016087: reference id 2
0.462053: reference infer 2
  0.027134: facts graph types
  0.027879: convert facts graph
    0.003420: to digraph
    0.024251: flatten types (775 concepts)
    0.000187: quantities
  0.005979: process dynamic rules
  0.398406: match
    0.398326: match
      0.007596: querygen
      0.357154: creating graph tensor (1784 nodes, 6485 edges)
        0.227006: setup
        0.081719: key tensor
        0.008598: target tensor
        0.037673: edge tensor
      0.000091: initializing solutions matrix
      0.033248: loop
      0.000031: postprocessing (MAX MEMORY: 1.908GB)
  0.000008: postprocess solutions
0.000013: reference resolution 2
0.079001: fragment resolution 2
  0.000467: identify previous emora questions
  0.028523: find answer
  0.049992: sal
0.987450: dialogue infer 2
  0.027158: facts graph types
  0.029300: convert facts graph
    0.003544: to digraph
    0.025554: flatten types (775 concepts)
    0.000188: quantities
  0.000026: process dynamic rules
  0.922780: match
    0.922700: match
      0.005360: querygen
      0.616337: creating graph tensor (1895 nodes, 6998 edges)
        0.040318: setup
        0.487542: key tensor
        0.009352: target tensor
        0.076643: edge tensor
      0.000094: initializing solutions matrix
      0.300658: loop
      0.000014: postprocessing (MAX MEMORY: 2.212GB)
  0.005189: postprocess solutions
0.056144: apply inferences 2
  0.005564: apply
  0.000638: update types
  0.000202: operate
  0.049722: sal
0.010467: prepare template nlg
0.465867: template infer
  0.027056: facts graph types
  0.029438: convert facts graph
    0.003875: to digraph
    0.025359: flatten types (775 concepts)
    0.000189: quantities
  0.000026: process dynamic rules
  0.404565: match
    0.404487: match
      0.005496: querygen
      0.230989: creating graph tensor (1895 nodes, 6998 edges)
        0.041151: setup
        0.138584: key tensor
        0.008814: target tensor
        0.040177: edge tensor
      0.000089: initializing solutions matrix
      0.167639: loop
      0.000015: postprocessing (MAX MEMORY: 2.212GB)
  0.001863: postprocess solutions
0.000180: template fillers
0.000014: response sel
0.000013: response exp
0.000011: response rules
0.113173: response assembler
  0.000012: response assembly
  0.050159: update sal
  0.002046: decay sal
  0.060940: prune
    0.000013: setup
    0.000794: select keep
    0.000120: delete old spans
    0.047142: setup essentials
    0.007893: identify essentials
    0.004567: remove not keep

[4.00 s] Well, that is quite an idea. But what else do you want to talk about?

User: ARG REQUESTS: []
TRUTH REQUESTS: []
ARG REQUESTS: []
TRUTH REQUESTS: []

0.000020: next turn
0.000014: sentence caser
0.130054: elit
0.626624: parse2logic
  0.002937: facts graph types
  0.004611: convert facts graph
    0.000932: to digraph
    0.003610: flatten types (177 concepts)
    0.000054: quantities
  0.000021: process dynamic rules
  0.603379: match
    0.603300: match
      0.000492: querygen
      0.155069: creating graph tensor (231 nodes, 791 edges)
        0.004862: setup
        0.136766: key tensor
        0.001389: target tensor
        0.011762: edge tensor
      0.000085: initializing solutions matrix
      0.447249: loop
      0.000018: postprocessing (MAX MEMORY: 0.030GB)
  0.002334: postprocess solutions
0.000051: multiword mentions
0.000013: ner mentions
0.007790: mention bridge
0.057815: merge bridge
0.034042: knowledge pull
0.013008: reference id
0.280676: reference infer
  0.027236: facts graph types
  0.028646: convert facts graph
    0.004498: to digraph
    0.023929: flatten types (783 concepts)
    0.000198: quantities
  0.005150: process dynamic rules
  0.217229: match
    0.217151: match
      0.007522: querygen
      0.181506: creating graph tensor (1762 nodes, 6402 edges)
        0.038100: setup
        0.080575: key tensor
        0.008125: target tensor
        0.052638: edge tensor
      0.000088: initializing solutions matrix
      0.027812: loop
      0.000028: postprocessing (MAX MEMORY: 1.860GB)
  0.000008: postprocess solutions
0.000014: reference resolution
0.050509: fragment resolution
  0.000422: identify previous emora questions
  0.050071: sal
0.583536: dialogue infer
  0.027460: facts graph types
  0.029104: convert facts graph
    0.003621: to digraph
    0.025270: flatten types (783 concepts)
    0.000197: quantities
  0.000027: process dynamic rules
  0.519615: match
    0.519538: match
      0.004992: querygen
      0.362647: creating graph tensor (1860 nodes, 6854 edges)
        0.228547: setup
        0.073897: key tensor
        0.008985: target tensor
        0.048952: edge tensor
      0.000091: initializing solutions matrix
      0.151575: loop
      0.000014: postprocessing (MAX MEMORY: 2.123GB)
  0.004651: postprocess solutions
0.056762: apply inferences
  0.005058: apply
  0.000641: update types
  0.000253: operate
  0.050788: sal
0.012893: reference id 2
0.283157: reference infer 2
  0.027301: facts graph types
  0.027736: convert facts graph
    0.003574: to digraph
    0.023960: flatten types (783 concepts)
    0.000182: quantities
  0.005210: process dynamic rules
  0.220241: match
    0.220161: match
      0.007738: querygen
      0.184270: creating graph tensor (1762 nodes, 6402 edges)
        0.036943: setup
        0.080986: key tensor
        0.008929: target tensor
        0.055104: edge tensor
      0.000091: initializing solutions matrix
      0.027833: loop
      0.000030: postprocessing (MAX MEMORY: 1.860GB)
  0.000008: postprocess solutions
0.000014: reference resolution 2
0.051033: fragment resolution 2
  0.000473: identify previous emora questions
  0.050544: sal
0.400573: dialogue infer 2
  0.027360: facts graph types
  0.029820: convert facts graph
    0.003581: to digraph
    0.026020: flatten types (783 concepts)
    0.000202: quantities
  0.000029: process dynamic rules
  0.335848: match
    0.335763: match
      0.005264: querygen
      0.179120: creating graph tensor (1860 nodes, 6854 edges)
        0.041045: setup
        0.078816: key tensor
        0.008970: target tensor
        0.048058: edge tensor
      0.000091: initializing solutions matrix
      0.151068: loop
      0.000014: postprocessing (MAX MEMORY: 2.123GB)
  0.004666: postprocess solutions
0.056288: apply inferences 2
  0.005211: apply
  0.000635: update types
  0.000262: operate
  0.050159: sal
0.010103: prepare template nlg
0.464401: template infer
  0.027335: facts graph types
  0.029552: convert facts graph
    0.003779: to digraph
    0.025575: flatten types (783 concepts)
    0.000184: quantities
  0.000025: process dynamic rules
  0.403146: match
    0.403067: match
      0.004592: querygen
      0.226833: creating graph tensor (1860 nodes, 6854 edges)
        0.039752: setup
        0.134608: key tensor
        0.008722: target tensor
        0.041532: edge tensor
      0.000091: initializing solutions matrix
      0.171271: loop
      0.000016: postprocessing (MAX MEMORY: 2.123GB)
  0.001579: postprocess solutions
0.000172: template fillers
0.000014: response sel
0.000013: response exp
0.000011: response rules
0.113791: response assembler
  0.000012: response assembly
  0.050654: update sal
  0.002097: decay sal
  0.061013: prune
    0.000017: setup
    0.000806: select keep
    0.000115: delete old spans
    0.046866: setup essentials
    0.007846: identify essentials
    0.004771: remove not keep

[3.23 s] Well, that is quite an idea. But what else do you want to talk about?

User: ARG REQUESTS: []
TRUTH REQUESTS: []
ARG REQUESTS: []
TRUTH REQUESTS: []

0.000021: next turn
0.000013: sentence caser
0.109958: elit
0.096727: parse2logic
  0.000614: facts graph types
  0.001050: convert facts graph
    0.000219: to digraph
    0.000796: flatten types (44 concepts)
    0.000022: quantities
  0.000020: process dynamic rules
  0.090735: match
    0.090658: match
      0.000123: querygen
      0.014400: creating graph tensor (51 nodes, 155 edges)
        0.000984: setup
        0.006981: key tensor
        0.000441: target tensor
        0.005932: edge tensor
      0.000074: initializing solutions matrix
      0.075834: loop
      0.000014: postprocessing (MAX MEMORY: 0.002GB)
  0.000695: postprocess solutions
0.000037: multiword mentions
0.000012: ner mentions
0.002239: mention bridge
0.006828: merge bridge
0.030340: knowledge pull
0.010315: reference id
0.396001: reference infer
  0.022926: facts graph types
  0.025220: convert facts graph
    0.003871: to digraph
    0.021162: flatten types (699 concepts)
    0.000169: quantities
  0.005301: process dynamic rules
  0.340324: match
    0.340249: match
      0.006070: querygen
      0.313506: creating graph tensor (1545 nodes, 5611 edges)
        0.032459: setup
        0.239485: key tensor
        0.008070: target tensor
        0.031577: edge tensor
      0.000093: initializing solutions matrix
      0.020358: loop
      0.000028: postprocessing (MAX MEMORY: 1.430GB)
  0.000008: postprocess solutions
0.000014: reference resolution
0.045835: fragment resolution
  0.000410: identify previous emora questions
  0.045409: sal
0.333506: dialogue infer
  0.023000: facts graph types
  0.025884: convert facts graph
    0.003339: to digraph
    0.022362: flatten types (699 concepts)
    0.000168: quantities
  0.000027: process dynamic rules
  0.277516: match
    0.277438: match
      0.004825: querygen
      0.129660: creating graph tensor (1632 nodes, 6008 edges)
        0.035044: setup
        0.047619: key tensor
        0.007887: target tensor
        0.037359: edge tensor
      0.000089: initializing solutions matrix
      0.142644: loop
      0.000014: postprocessing (MAX MEMORY: 1.632GB)
  0.004642: postprocess solutions
0.052192: apply inferences
  0.005054: apply
  0.000621: update types
  0.000196: operate
  0.046300: sal
0.010343: reference id 2
0.211284: reference infer 2
  0.022872: facts graph types
  0.025272: convert facts graph
    0.003290: to digraph
    0.021779: flatten types (699 concepts)
    0.000184: quantities
  0.004779: process dynamic rules
  0.155964: match
    0.155883: match
      0.006367: querygen
      0.128246: creating graph tensor (1545 nodes, 5611 edges)
        0.033749: setup
        0.053272: key tensor
        0.007800: target tensor
        0.031525: edge tensor
      0.000091: initializing solutions matrix
      0.020956: loop
      0.000029: postprocessing (MAX MEMORY: 1.430GB)
  0.000008: postprocess solutions
0.000014: reference resolution 2
0.045973: fragment resolution 2
  0.000416: identify previous emora questions
  0.045540: sal
0.346040: dialogue infer 2
  0.022994: facts graph types
  0.026037: convert facts graph
    0.003227: to digraph
    0.022628: flatten types (699 concepts)
    0.000168: quantities
  0.000027: process dynamic rules
  0.289901: match
    0.289823: match
      0.004004: querygen
      0.131542: creating graph tensor (1632 nodes, 6008 edges)
        0.035280: setup
        0.049021: key tensor
        0.008016: target tensor
        0.037392: edge tensor
      0.000091: initializing solutions matrix
      0.153947: loop
      0.000015: postprocessing (MAX MEMORY: 1.632GB)
  0.004612: postprocess solutions
0.051646: apply inferences 2
  0.005050: apply
  0.000616: update types
  0.000193: operate
  0.045768: sal
0.009494: prepare template nlg
0.392592: template infer
  0.023068: facts graph types
  0.026175: convert facts graph
    0.003272: to digraph
    0.022720: flatten types (699 concepts)
    0.000167: quantities
  0.000025: process dynamic rules
  0.339385: match
    0.339304: match
      0.004193: querygen
      0.158035: creating graph tensor (1632 nodes, 6008 edges)
        0.035380: setup
        0.080858: key tensor
        0.008131: target tensor
        0.031801: edge tensor
      0.000104: initializing solutions matrix
      0.176678: loop
      0.000024: postprocessing (MAX MEMORY: 1.632GB)
  0.001455: postprocess solutions
0.000170: template fillers
0.000013: response sel
0.000013: response exp
0.000012: response rules
0.096047: response assembler
  0.000012: response assembly
  0.045123: update sal
  0.001899: decay sal
  0.048995: prune
    0.000013: setup
    0.000701: select keep
    0.000122: delete old spans
    0.038770: setup essentials
    0.007538: identify essentials
    0.001489: remove not keep

[2.25 s] Well, that is quite an idea. But what else do you want to talk about?

User: ARG REQUESTS: []
TRUTH REQUESTS: []
ARG REQUESTS: []
TRUTH REQUESTS: []

0.000026: next turn
0.000014: sentence caser
0.107949: elit
0.045098: parse2logic
  0.000382: facts graph types
  0.000772: convert facts graph
    0.000134: to digraph
    0.000605: flatten types (26 concepts)
    0.000020: quantities
  0.000021: process dynamic rules
  0.041460: match
    0.041380: match
      0.000088: querygen
      0.005216: creating graph tensor (30 nodes, 82 edges)
        0.000504: setup
        0.001289: key tensor
        0.000352: target tensor
        0.003025: edge tensor
      0.000073: initializing solutions matrix
      0.035802: loop
      0.000013: postprocessing (MAX MEMORY: 0.001GB)
  0.000446: postprocess solutions
0.000033: multiword mentions
0.000012: ner mentions
0.001569: mention bridge
0.005423: merge bridge
0.029514: knowledge pull
0.010225: reference id
0.375270: reference infer
  0.022122: facts graph types
  0.024945: convert facts graph
    0.003343: to digraph
    0.021420: flatten types (685 concepts)
    0.000163: quantities
  0.004694: process dynamic rules
  0.321272: match
    0.321197: match
      0.006759: querygen
      0.294331: creating graph tensor (1522 nodes, 5531 edges)
        0.213717: setup
        0.037993: key tensor
        0.007478: target tensor
        0.033389: edge tensor
      0.000089: initializing solutions matrix
      0.019792: loop
      0.000029: postprocessing (MAX MEMORY: 1.389GB)
  0.000008: postprocess solutions
0.000015: reference resolution
0.045210: fragment resolution
  0.000413: identify previous emora questions
  0.044781: sal
0.390271: dialogue infer
  0.022459: facts graph types
  0.025512: convert facts graph
    0.003429: to digraph
    0.021892: flatten types (685 concepts)
    0.000177: quantities
  0.000026: process dynamic rules
  0.335146: match
    0.335068: match
      0.004579: querygen
      0.172319: creating graph tensor (1609 nodes, 5928 edges)
        0.034330: setup
        0.094209: key tensor
        0.007988: target tensor
        0.033866: edge tensor
      0.000089: initializing solutions matrix
      0.157863: loop
      0.000014: postprocessing (MAX MEMORY: 1.589GB)
  0.004674: postprocess solutions
0.051039: apply inferences
  0.005825: apply
  0.000610: update types
  0.000251: operate
  0.044333: sal
0.010087: reference id 2
0.191343: reference infer 2
  0.022224: facts graph types
  0.024100: convert facts graph
    0.003452: to digraph
    0.020462: flatten types (685 concepts)
    0.000166: quantities
  0.004691: process dynamic rules
  0.138381: match
    0.138302: match
      0.006735: querygen
      0.111509: creating graph tensor (1522 nodes, 5531 edges)
        0.031642: setup
        0.037685: key tensor
        0.007220: target tensor
        0.033305: edge tensor
      0.000086: initializing solutions matrix
      0.019755: loop
      0.000027: postprocessing (MAX MEMORY: 1.389GB)
  0.000008: postprocess solutions
0.000013: reference resolution 2
0.044590: fragment resolution 2
  0.000407: identify previous emora questions
  0.044166: sal
0.389078: dialogue infer 2
  0.022403: facts graph types
  0.025115: convert facts graph
    0.003421: to digraph
    0.021514: flatten types (685 concepts)
    0.000166: quantities
  0.000026: process dynamic rules
  0.334608: match
    0.334532: match
      0.004359: querygen
      0.171947: creating graph tensor (1609 nodes, 5928 edges)
        0.034201: setup
        0.094099: key tensor
        0.007801: target tensor
        0.033887: edge tensor
      0.000090: initializing solutions matrix
      0.157922: loop
      0.000013: postprocessing (MAX MEMORY: 1.589GB)
  0.004606: postprocess solutions
0.050042: apply inferences 2
  0.005235: apply
  0.000605: update types
  0.000230: operate
  0.043953: sal
0.009417: prepare template nlg
0.382884: template infer
  0.022384: facts graph types
  0.025461: convert facts graph
    0.003443: to digraph
    0.021840: flatten types (685 concepts)
    0.000164: quantities
  0.000025: process dynamic rules
  0.331238: match
    0.331160: match
      0.004075: querygen
      0.167186: creating graph tensor (1609 nodes, 5928 edges)
        0.034950: setup
        0.090490: key tensor
        0.007780: target tensor
        0.032073: edge tensor
      0.000087: initializing solutions matrix
      0.159541: loop
      0.000015: postprocessing (MAX MEMORY: 1.589GB)
  0.001458: postprocess solutions
0.000170: template fillers
0.000014: response sel
0.000013: response exp
0.000011: response rules
0.092836: response assembler
  0.000012: response assembly
  0.044573: update sal
  0.001791: decay sal
  0.046445: prune
    0.000016: setup
    0.000704: select keep
    0.000096: delete old spans
    0.036775: setup essentials
    0.007051: identify essentials
    0.001236: remove not keep

[2.23 s] Well, that is quite an idea. But what else do you want to talk about?

User: ARG REQUESTS: []
TRUTH REQUESTS: []
ARG REQUESTS: []
TRUTH REQUESTS: []

React + Present Options:
	Since you like basketball, what's your favorite team? Mine is the L A Lakers. It's too bad they got knocked out first round of the playoffs. (s: 0.14, pr: 1.00)
	Have you played basketball before? Sounds like you enjoy it. (s: 0.26, pr: 1.00)


0.000029: next turn
0.000016: sentence caser
0.115906: elit
0.881509: parse2logic
  0.005260: facts graph types
  0.188938: convert facts graph
    0.001511: to digraph
    0.187327: flatten types (293 concepts)
    0.000083: quantities
  0.000027: process dynamic rules
  0.658715: match
    0.658632: match
      0.001100: querygen
      0.116014: creating graph tensor (387 nodes, 1356 edges)
        0.007911: setup
        0.085242: key tensor
        0.002062: target tensor
        0.020364: edge tensor
      0.000087: initializing solutions matrix
      0.540993: loop
      0.000020: postprocessing (MAX MEMORY: 0.110GB)
  0.004462: postprocess solutions
0.000079: multiword mentions
0.000012: ner mentions
0.013854: mention bridge
0.036077: merge bridge
0.042608: knowledge pull
0.014571: reference id
0.280513: reference infer
  0.031479: facts graph types
  0.031907: convert facts graph
    0.004708: to digraph
    0.026980: flatten types (860 concepts)
    0.000199: quantities
  0.005915: process dynamic rules
  0.208451: match
    0.208369: match
      0.008124: querygen
      0.176947: creating graph tensor (1941 nodes, 7034 edges)
        0.040524: setup
        0.076952: key tensor
        0.008926: target tensor
        0.048324: edge tensor
      0.000089: initializing solutions matrix
      0.022987: loop
      0.000029: postprocessing (MAX MEMORY: 2.247GB)
  0.000008: postprocess solutions
0.000014: reference resolution
0.055559: fragment resolution
  0.000437: identify previous emora questions
  0.055106: sal
1.473909: dialogue infer
  0.031878: facts graph types
  0.032329: convert facts graph
    0.004062: to digraph
    0.028048: flatten types (860 concepts)
    0.000204: quantities
  0.000027: process dynamic rules
  1.401696: match
    1.401614: match
      0.005611: querygen
      0.890461: creating graph tensor (2048 nodes, 7542 edges)
        0.043060: setup
        0.790153: key tensor
        0.010151: target tensor
        0.044462: edge tensor
      0.000093: initializing solutions matrix
      0.505222: loop
      0.000014: postprocessing (MAX MEMORY: 2.571GB)
  0.004825: postprocess solutions
0.061749: apply inferences
  0.005568: apply
  0.000730: update types
  0.000217: operate
  0.055214: sal
0.014244: reference id 2
0.290043: reference infer 2
  0.031814: facts graph types
  0.030612: convert facts graph
    0.004331: to digraph
    0.026064: flatten types (862 concepts)
    0.000198: quantities
  0.006395: process dynamic rules
  0.218374: match
    0.218291: match
      0.007531: querygen
      0.178324: creating graph tensor (1949 nodes, 7065 edges)
        0.041171: setup
        0.083792: key tensor
        0.008767: target tensor
        0.042416: edge tensor
      0.000089: initializing solutions matrix
      0.032111: loop
      0.000028: postprocessing (MAX MEMORY: 2.267GB)
  0.000201: postprocess solutions
0.002129: reference resolution 2
0.054917: fragment resolution 2
  0.000383: identify previous emora questions
  0.054517: sal
2.019731: dialogue infer 2
  0.031452: facts graph types
  0.217695: convert facts graph
    0.004167: to digraph
    0.213287: flatten types (857 concepts)
    0.000223: quantities
  0.000029: process dynamic rules
  1.762416: match
    1.762330: match
      0.006686: querygen
      1.254940: creating graph tensor (2039 nodes, 7509 edges)
        0.043879: setup
        1.152582: key tensor
        0.010551: target tensor
        0.045199: edge tensor
      0.000092: initializing solutions matrix
      0.500383: loop
      0.000014: postprocessing (MAX MEMORY: 2.549GB)
  0.004920: postprocess solutions
0.064923: apply inferences 2
  0.006565: apply
  0.001417: update types
  0.000197: operate
  0.056724: sal
0.010999: prepare template nlg
1.202409: template infer
  0.032395: facts graph types
  0.033340: convert facts graph
    0.004393: to digraph
    0.028723: flatten types (874 concepts)
    0.000209: quantities
  0.000026: process dynamic rules
  1.131512: match
    1.131425: match
      0.005281: querygen
      0.603334: creating graph tensor (2093 nodes, 7716 edges)
        0.045237: setup
        0.497321: key tensor
        0.010064: target tensor
        0.048007: edge tensor
      0.000092: initializing solutions matrix
      0.522291: loop
      0.000021: postprocessing (MAX MEMORY: 2.690GB)
  0.001767: postprocess solutions
0.000365: template fillers
0.000014: response sel
0.000154: response exp
0.000014: response rules
0.132023: response assembler
  0.000015: response assembly
  0.056259: update sal
  0.002297: decay sal
  0.073434: prune
    0.000013: setup
    0.000884: select keep
    0.000098: delete old spans
    0.056162: setup essentials
    0.006321: identify essentials
    0.009472: remove not keep

[6.77 s] Have you played basketball before? Sounds like you enjoy it.

User: ARG REQUESTS: []
TRUTH REQUESTS: [('emora', 'request_truth', 'wm4800', 'wm4803')]
CURRENT USER CONCEPTS: {'girl', 'wm4831', 'wm4826', 'wm4814', 'predicate', 'wm4824', 'user', 'now', 'wm4820', 'wm4825', 'wm4816', 'prp', 'wm4813'}
FRAGMENT REQUEST MERGES: [('wm4824', 'wm4800')]
ARG REQUESTS: []
TRUTH REQUESTS: []

React + Present Options:
	Since you like basketball, what's your favorite team? Mine is the L A Lakers. It's too bad they got knocked out first round of the playoffs. (s: 0.24, pr: 1.00)


0.000019: next turn
0.000014: sentence caser
0.110424: elit
0.232469: parse2logic
  0.001661: facts graph types
  0.002822: convert facts graph
    0.000605: to digraph
    0.002164: flatten types (109 concepts)
    0.000040: quantities
  0.000021: process dynamic rules
  0.216602: match
    0.216520: match
      0.000308: querygen
      0.019247: creating graph tensor (139 nodes, 458 edges)
        0.002495: setup
        0.008620: key tensor
        0.000877: target tensor
        0.007129: edge tensor
      0.000079: initializing solutions matrix
      0.196683: loop
      0.000013: postprocessing (MAX MEMORY: 0.011GB)
  0.003375: postprocess solutions
0.000045: multiword mentions
0.000012: ner mentions
0.003598: mention bridge
0.005947: merge bridge
0.032156: knowledge pull
0.013076: reference id
0.210197: reference infer
  0.022895: facts graph types
  0.025429: convert facts graph
    0.003353: to digraph
    0.021886: flatten types (688 concepts)
    0.000170: quantities
  0.005610: process dynamic rules
  0.154071: match
    0.153992: match
      0.006640: querygen
      0.121769: creating graph tensor (1563 nodes, 5678 edges)
        0.034144: setup
        0.042431: key tensor
        0.007624: target tensor
        0.035767: edge tensor
      0.000089: initializing solutions matrix
      0.025270: loop
      0.000028: postprocessing (MAX MEMORY: 1.464GB)
  0.000008: postprocess solutions
0.000015: reference resolution
0.046437: fragment resolution
  0.000481: identify previous emora questions
  0.001976: find answer
  0.043962: sal
0.416846: dialogue infer
  0.022892: facts graph types
  0.026009: convert facts graph
    0.003493: to digraph
    0.022335: flatten types (684 concepts)
    0.000166: quantities
  0.000026: process dynamic rules
  0.360456: match
    0.360377: match
      0.004815: querygen
      0.192631: creating graph tensor (1658 nodes, 6130 edges)
        0.035013: setup
        0.109760: key tensor
        0.007941: target tensor
        0.037971: edge tensor
      0.000090: initializing solutions matrix
      0.162626: loop
      0.000013: postprocessing (MAX MEMORY: 1.697GB)
  0.004866: postprocess solutions
0.050251: apply inferences
  0.005179: apply
  0.000644: update types
  0.000240: operate
  0.044167: sal
0.012321: reference id 2
0.416507: reference infer 2
  0.022830: facts graph types
  0.024070: convert facts graph
    0.003263: to digraph
    0.020618: flatten types (684 concepts)
    0.000169: quantities
  0.005909: process dynamic rules
  0.361314: match
    0.361233: match
      0.006243: querygen
      0.327496: creating graph tensor (1553 nodes, 5648 edges)
        0.218721: setup
        0.059780: key tensor
        0.007735: target tensor
        0.039393: edge tensor
      0.000090: initializing solutions matrix
      0.027164: loop
      0.000030: postprocessing (MAX MEMORY: 1.448GB)
  0.000008: postprocess solutions
0.000014: reference resolution 2
0.045632: fragment resolution 2
  0.000461: identify previous emora questions
  0.045154: sal
0.392016: dialogue infer 2
  0.023024: facts graph types
  0.026329: convert facts graph
    0.003189: to digraph
    0.022940: flatten types (684 concepts)
    0.000185: quantities
  0.000026: process dynamic rules
  0.335259: match
    0.335180: match
      0.004343: querygen
      0.184289: creating graph tensor (1658 nodes, 6130 edges)
        0.035869: setup
        0.100319: key tensor
        0.008360: target tensor
        0.037829: edge tensor
      0.000090: initializing solutions matrix
      0.146237: loop
      0.000014: postprocessing (MAX MEMORY: 1.697GB)
  0.004904: postprocess solutions
0.050573: apply inferences 2
  0.005370: apply
  0.000638: update types
  0.000223: operate
  0.044322: sal
0.008366: prepare template nlg
0.459260: template infer
  0.022961: facts graph types
  0.025980: convert facts graph
    0.003459: to digraph
    0.022335: flatten types (684 concepts)
    0.000171: quantities
  0.000025: process dynamic rules
  0.406529: match
    0.406451: match
      0.004745: querygen
      0.174742: creating graph tensor (1658 nodes, 6130 edges)
        0.035207: setup
        0.045428: key tensor
        0.007694: target tensor
        0.084365: edge tensor
      0.000091: initializing solutions matrix
      0.226569: loop
      0.000016: postprocessing (MAX MEMORY: 1.697GB)
  0.001183: postprocess solutions
0.000255: template fillers
0.000013: response sel
0.000123: response exp
0.000014: response rules
0.095947: response assembler
  0.000016: response assembly
  0.044466: update sal
  0.001793: decay sal
  0.049658: prune
    0.000017: setup
    0.000720: select keep
    0.000088: delete old spans
    0.039360: setup essentials
    0.006285: identify essentials
    0.002639: remove not keep

[2.60 s] Since you like basketball, what's your favorite team? Mine is the L A Lakers. It's too bad they got knocked out first round of the playoffs.

User: ARG REQUESTS: [('emora', 'request', 'wm4801', 'wm4805')]
TRUTH REQUESTS: []
CURRENT USER CONCEPTS: {'wm4896', 'wm4885', 'wm4868', 'wm4918', 'wm4899', 'wm4874', 'wm4963', 'wm4913', 'wm4920', 'but', 'unknown_noun', 'wm4900', 'wm4907', 'past', 'wm4949', 'wm4944', 'wm4890', 'wm4927', 'wm4905', 'school', 'wm4971', 'wm4908', 'wm4952', 'wm4873', 'living_thing', 'wm4964', 'wm4934', 'wm4956', 'wm4902', 'wm4953', 'wm4901', 'wm4924', 'wm4895', 'wm4932', 'wm4870', 'wm4939', 'wm4929', 'wm4923', 'wm4912', 'user', 'wm4943', 'prp', 'unknown_verb', 'wm4914', 'wm4919', 'wm4879', 'wm4911', 'wm4894', 'wm4906', 'wm4945', 'now', 'unknown_other', 'unknown_adj'}
FRAGMENT REQUEST MERGES: []
ARG REQUESTS: [('emora', 'request', 'wm4801', 'wm4805')]
TRUTH REQUESTS: []
CURRENT USER CONCEPTS: {'wm4896', 'wm4885', 'wm4868', 'wm4918', 'wm4899', 'wm4874', 'wm4963', 'wm4913', 'wm4920', 'but', 'unknown_noun', 'wm4900', 'wm4907', 'past', 'wm4949', 'wm4944', 'wm4890', 'wm4927', 'wm4905', 'school', 'wm4971', 'wm4908', 'wm4952', 'wm4873', 'living_thing', 'wm4964', 'wm4934', 'wm4956', 'wm4902', 'wm4953', 'wm4901', 'wm4924', 'wm4895', 'wm4932', 'wm4870', 'wm4939', 'wm4929', 'wm4923', 'wm4912', 'user', 'wm4943', 'prp', 'unknown_verb', 'wm4914', 'wm4919', 'wm4879', 'wm4911', 'wm4894', 'wm4906', 'wm4945', 'now', 'unknown_other', 'unknown_adj'}
FRAGMENT REQUEST MERGES: []

React + Present Options:
	Out of all sports, what's your favorite? I like football, baseball, tennis, and soccer, but basketball is my favorite. (s: 0.33, pr: 1.00)


0.000020: next turn
0.000015: sentence caser
0.118255: elit
1.224097: parse2logic
  0.005622: facts graph types
  0.008124: convert facts graph
    0.001545: to digraph
    0.006489: flatten types (305 concepts)
    0.000076: quantities
  0.000021: process dynamic rules
  1.178309: match
    1.178226: match
      0.001035: querygen
      0.466331: creating graph tensor (419 nodes, 1470 edges)
        0.008782: setup
        0.441159: key tensor
        0.002407: target tensor
        0.013494: edge tensor
      0.000088: initializing solutions matrix
      0.710572: loop
      0.000014: postprocessing (MAX MEMORY: 0.101GB)
  0.006661: postprocess solutions
0.000076: multiword mentions
0.000013: ner mentions
0.015058: mention bridge
0.022468: merge bridge
0.036681: knowledge pull
0.014922: reference id
0.265210: reference infer
  0.030343: facts graph types
  0.030652: convert facts graph
    0.004500: to digraph
    0.025931: flatten types (827 concepts)
    0.000201: quantities
  0.006352: process dynamic rules
  0.195278: match
    0.195199: match
      0.008237: querygen
      0.152524: creating graph tensor (1913 nodes, 6940 edges)
        0.039728: setup
        0.057440: key tensor
        0.008554: target tensor
        0.044841: edge tensor
      0.000089: initializing solutions matrix
      0.034122: loop
      0.000030: postprocessing (MAX MEMORY: 2.186GB)
  0.000008: postprocess solutions
0.000015: reference resolution
0.084419: fragment resolution
  0.000482: identify previous emora questions
  0.031671: find answer
  0.052247: sal
0.863870: dialogue infer
  0.030588: facts graph types
  0.032241: convert facts graph
    0.004023: to digraph
    0.028002: flatten types (827 concepts)
    0.000201: quantities
  0.000026: process dynamic rules
  0.792771: match
    0.792687: match
      0.005873: querygen
      0.526996: creating graph tensor (2027 nodes, 7487 edges)
        0.236979: setup
        0.173195: key tensor
        0.009871: target tensor
        0.104280: edge tensor
      0.000094: initializing solutions matrix
      0.259498: loop
      0.000014: postprocessing (MAX MEMORY: 2.531GB)
  0.005154: postprocess solutions
0.061604: apply inferences
  0.006635: apply
  0.000667: update types
  0.000211: operate
  0.054070: sal
0.014251: reference id 2
0.293132: reference infer 2
  0.031115: facts graph types
  0.030113: convert facts graph
    0.004261: to digraph
    0.025626: flatten types (835 concepts)
    0.000205: quantities
  0.007067: process dynamic rules
  0.221899: match
    0.221817: match
      0.007876: querygen
      0.181084: creating graph tensor (1945 nodes, 7060 edges)
        0.041335: setup
        0.086221: key tensor
        0.008972: target tensor
        0.042245: edge tensor
      0.000091: initializing solutions matrix
      0.032535: loop
      0.000030: postprocessing (MAX MEMORY: 2.262GB)
  0.000144: postprocess solutions
0.000015: reference resolution 2
0.085661: fragment resolution 2
  0.000508: identify previous emora questions
  0.032088: find answer
  0.053046: sal
0.573076: dialogue infer 2
  0.031102: facts graph types
  0.032141: convert facts graph
    0.004206: to digraph
    0.027716: flatten types (835 concepts)
    0.000204: quantities
  0.000026: process dynamic rules
  0.501530: match
    0.501448: match
      0.005685: querygen
      0.270531: creating graph tensor (2065 nodes, 7635 edges)
        0.043842: setup
        0.165190: key tensor
        0.009771: target tensor
        0.049186: edge tensor
      0.000091: initializing solutions matrix
      0.224925: loop
      0.000014: postprocessing (MAX MEMORY: 2.631GB)
  0.005198: postprocess solutions
0.064095: apply inferences 2
  0.008096: apply
  0.000849: update types
  0.000437: operate
  0.054693: sal
0.009382: prepare template nlg
0.622703: template infer
  0.031832: facts graph types
  0.032516: convert facts graph
    0.003882: to digraph
    0.028403: flatten types (851 concepts)
    0.000216: quantities
  0.000025: process dynamic rules
  0.553643: match
    0.553563: match
      0.006090: querygen
      0.369801: creating graph tensor (2122 nodes, 7848 edges)
        0.045444: setup
        0.072411: key tensor
        0.009792: target tensor
        0.239494: edge tensor
      0.000098: initializing solutions matrix
      0.177279: loop
      0.000015: postprocessing (MAX MEMORY: 2.780GB)
  0.001553: postprocess solutions
0.000376: template fillers
0.000021: response sel
0.000104: response exp
0.000026: response rules
0.132116: response assembler
  0.000015: response assembly
  0.054748: update sal
  0.002225: decay sal
  0.075112: prune
    0.000013: setup
    0.000844: select keep
    0.000109: delete old spans
    0.057055: setup essentials
    0.006389: identify essentials
    0.010232: remove not keep

[4.50 s] Out of all sports, what's your favorite? I like football, baseball, tennis, and soccer, but basketball is my favorite.

User: ARG REQUESTS: []
TRUTH REQUESTS: []
ARG REQUESTS: []
TRUTH REQUESTS: []

0.000030: next turn
0.000015: sentence caser
0.113988: elit
0.403568: parse2logic
  0.004694: facts graph types
  0.006923: convert facts graph
    0.001324: to digraph
    0.005515: flatten types (263 concepts)
    0.000070: quantities
  0.000021: process dynamic rules
  0.368087: match
    0.368008: match
      0.000778: querygen
      0.061066: creating graph tensor (352 nodes, 1232 edges)
        0.007524: setup
        0.040021: key tensor
        0.001784: target tensor
        0.011406: edge tensor
      0.000085: initializing solutions matrix
      0.305725: loop
      0.000018: postprocessing (MAX MEMORY: 0.071GB)
  0.005131: postprocess solutions
0.000165: multiword mentions
0.000118: ner mentions
0.007236: mention bridge
0.018451: merge bridge
0.031151: knowledge pull
0.013315: reference id
0.215710: reference infer
  0.023505: facts graph types
  0.025876: convert facts graph
    0.003236: to digraph
    0.022438: flatten types (697 concepts)
    0.000182: quantities
  0.006375: process dynamic rules
  0.157458: match
    0.157380: match
      0.006852: querygen
      0.117323: creating graph tensor (1597 nodes, 5813 edges)
        0.034930: setup
        0.042302: key tensor
        0.007319: target tensor
        0.031073: edge tensor
      0.000088: initializing solutions matrix
      0.032891: loop
      0.000031: postprocessing (MAX MEMORY: 1.533GB)
  0.000245: postprocess solutions
0.000106: reference resolution
0.045585: fragment resolution
  0.000424: identify previous emora questions
  0.045146: sal
0.372795: dialogue infer
  0.023517: facts graph types
  0.026604: convert facts graph
    0.003517: to digraph
    0.022896: flatten types (697 concepts)
    0.000176: quantities
  0.000027: process dynamic rules
  0.315191: match
    0.315113: match
      0.005027: querygen
      0.161276: creating graph tensor (1711 nodes, 6337 edges)
        0.036555: setup
        0.061204: key tensor
        0.007728: target tensor
        0.053787: edge tensor
      0.000091: initializing solutions matrix
      0.148503: loop
      0.000014: postprocessing (MAX MEMORY: 1.812GB)
  0.004982: postprocess solutions
0.052022: apply inferences
  0.005693: apply
  0.000576: update types
  0.000189: operate
  0.045542: sal
0.011693: reference id 2
0.214311: reference infer 2
  0.023439: facts graph types
  0.025068: convert facts graph
    0.003081: to digraph
    0.021782: flatten types (697 concepts)
    0.000184: quantities
  0.006319: process dynamic rules
  0.156969: match
    0.156890: match
      0.007235: querygen
      0.116442: creating graph tensor (1597 nodes, 5813 edges)
        0.033378: setup
        0.042936: key tensor
        0.007228: target tensor
        0.031146: edge tensor
      0.000087: initializing solutions matrix
      0.032902: loop
      0.000031: postprocessing (MAX MEMORY: 1.533GB)
  0.000246: postprocess solutions
0.000115: reference resolution 2
0.045843: fragment resolution 2
  0.000471: identify previous emora questions
  0.045355: sal
0.373074: dialogue infer 2
  0.023504: facts graph types
  0.026870: convert facts graph
    0.003241: to digraph
    0.023440: flatten types (697 concepts)
    0.000175: quantities
  0.000026: process dynamic rules
  0.315153: match
    0.315074: match
      0.004210: querygen
      0.162718: creating graph tensor (1711 nodes, 6337 edges)
        0.037414: setup
        0.061674: key tensor
        0.007847: target tensor
        0.053739: edge tensor
      0.000091: initializing solutions matrix
      0.147834: loop
      0.000014: postprocessing (MAX MEMORY: 1.812GB)
  0.004992: postprocess solutions
0.051644: apply inferences 2
  0.005821: apply
  0.000582: update types
  0.000192: operate
  0.045031: sal
0.008206: prepare template nlg
0.528008: template infer
  0.023713: facts graph types
  0.026662: convert facts graph
    0.003431: to digraph
    0.023042: flatten types (697 concepts)
    0.000174: quantities
  0.000026: process dynamic rules
  0.473380: match
    0.473299: match
      0.190858: querygen
      0.137985: creating graph tensor (1711 nodes, 6337 edges)
        0.037757: setup
        0.053122: key tensor
        0.008438: target tensor
        0.036722: edge tensor
      0.000091: initializing solutions matrix
      0.144085: loop
      0.000015: postprocessing (MAX MEMORY: 1.812GB)
  0.001545: postprocess solutions
0.000269: template fillers
0.000014: response sel
0.000013: response exp
0.000012: response rules
0.100347: response assembler
  0.000012: response assembly
  0.046322: update sal
  0.001946: decay sal
  0.052050: prune
    0.000013: setup
    0.000795: select keep
    0.000114: delete old spans
    0.041304: setup essentials
    0.007014: identify essentials
    0.002411: remove not keep

[2.61 s] Well, that is quite an idea. But what else do you want to talk about?

User: ARG REQUESTS: []
TRUTH REQUESTS: []
ARG REQUESTS: []
TRUTH REQUESTS: []

0.000021: next turn
0.000014: sentence caser
0.109129: elit
0.235725: parse2logic
  0.001518: facts graph types
  0.002595: convert facts graph
    0.000540: to digraph
    0.002003: flatten types (100 concepts)
    0.000038: quantities
  0.000021: process dynamic rules
  0.223310: match
    0.223230: match
      0.000300: querygen
      0.019554: creating graph tensor (131 nodes, 433 edges)
        0.002412: setup
        0.004269: key tensor
        0.000806: target tensor
        0.011933: edge tensor
      0.000080: initializing solutions matrix
      0.203002: loop
      0.000015: postprocessing (MAX MEMORY: 0.010GB)
  0.001412: postprocess solutions
0.000040: multiword mentions
0.000012: ner mentions
0.002635: mention bridge
0.009937: merge bridge
0.030578: knowledge pull
0.011720: reference id
0.197702: reference infer
  0.022024: facts graph types
  0.024813: convert facts graph
    0.003232: to digraph
    0.021389: flatten types (672 concepts)
    0.000171: quantities
  0.006370: process dynamic rules
  0.142111: match
    0.142034: match
      0.006879: querygen
      0.104504: creating graph tensor (1508 nodes, 5495 edges)
        0.032562: setup
        0.033751: key tensor
        0.007354: target tensor
        0.029284: edge tensor
      0.000087: initializing solutions matrix
      0.030341: loop
      0.000029: postprocessing (MAX MEMORY: 1.370GB)
  0.000241: postprocess solutions
0.000106: reference resolution
0.044757: fragment resolution
  0.000405: identify previous emora questions
  0.044336: sal
0.316391: dialogue infer
  0.021928: facts graph types
  0.025827: convert facts graph
    0.003271: to digraph
    0.022373: flatten types (672 concepts)
    0.000169: quantities
  0.000027: process dynamic rules
  0.261135: match
    0.261061: match
      0.004023: querygen
      0.126599: creating graph tensor (1624 nodes, 6019 edges)
        0.035914: setup
        0.044258: key tensor
        0.007873: target tensor
        0.036770: edge tensor
      0.000088: initializing solutions matrix
      0.130137: loop
      0.000013: postprocessing (MAX MEMORY: 1.635GB)
  0.004991: postprocess solutions
0.051126: apply inferences
  0.005663: apply
  0.000555: update types
  0.000201: operate
  0.044688: sal
0.011654: reference id 2
0.193034: reference infer 2
  0.022127: facts graph types
  0.023744: convert facts graph
    0.002975: to digraph
    0.020582: flatten types (672 concepts)
    0.000166: quantities
  0.006375: process dynamic rules
  0.138518: match
    0.138442: match
      0.006921: querygen
      0.100851: creating graph tensor (1508 nodes, 5495 edges)
        0.031625: setup
        0.031037: key tensor
        0.007231: target tensor
        0.029322: edge tensor
      0.000089: initializing solutions matrix
      0.030357: loop
      0.000030: postprocessing (MAX MEMORY: 1.370GB)
  0.000242: postprocess solutions
0.000105: reference resolution 2
0.044608: fragment resolution 2
  0.000401: identify previous emora questions
  0.044191: sal
0.504850: dialogue infer 2
  0.021919: facts graph types
  0.025658: convert facts graph
    0.003227: to digraph
    0.022250: flatten types (672 concepts)
    0.000167: quantities
  0.000025: process dynamic rules
  0.449849: match
    0.449773: match
      0.004011: querygen
      0.313928: creating graph tensor (1624 nodes, 6019 edges)
        0.035878: setup
        0.043949: key tensor
        0.194992: target tensor
        0.037122: edge tensor
      0.000091: initializing solutions matrix
      0.131522: loop
      0.000015: postprocessing (MAX MEMORY: 1.635GB)
  0.004986: postprocess solutions
0.050901: apply inferences 2
  0.005909: apply
  0.000549: update types
  0.000188: operate
  0.044236: sal
0.008007: prepare template nlg
0.338206: template infer
  0.022182: facts graph types
  0.025617: convert facts graph
    0.003401: to digraph
    0.022034: flatten types (672 concepts)
    0.000167: quantities
  0.000024: process dynamic rules
  0.286225: match
    0.286145: match
      0.004865: querygen
      0.139401: creating graph tensor (1624 nodes, 6019 edges)
        0.034509: setup
        0.059820: key tensor
        0.007926: target tensor
        0.035051: edge tensor
      0.000093: initializing solutions matrix
      0.141494: loop
      0.000015: postprocessing (MAX MEMORY: 1.635GB)
  0.001566: postprocess solutions
0.000259: template fillers
0.000014: response sel
0.000013: response exp
0.000011: response rules
0.095187: response assembler
  0.000012: response assembly
  0.044649: update sal
  0.001797: decay sal
  0.048712: prune
    0.000014: setup
    0.000700: select keep
    0.000116: delete old spans
    0.038640: setup essentials
    0.006984: identify essentials
    0.001887: remove not keep

[2.26 s] Well, that is quite an idea. But what else do you want to talk about?

User: ARG REQUESTS: []
TRUTH REQUESTS: []
ARG REQUESTS: []
TRUTH REQUESTS: []

Present Options:
	Do you like the trip ? I have actually traveled to many places . I like most of my trips , but sometimes unpleasant things still happen . The virtual world can be unpredictable . (s: 0.10, pr: 0.10)
	How is your trip ? I hope everything goes well for you . (s: 0.26, pr: 0.10)
	What do you like to do for trips ? I love going to beaches for my vacations . (s: 0.08, pr: 0.50)


0.000021: next turn
0.000014: sentence caser
0.113943: elit
0.409018: parse2logic
  0.004600: facts graph types
  0.007251: convert facts graph
    0.001801: to digraph
    0.005367: flatten types (260 concepts)
    0.000069: quantities
  0.000021: process dynamic rules
  0.372260: match
    0.372182: match
      0.000733: querygen
      0.029279: creating graph tensor (342 nodes, 1189 edges)
        0.006475: setup
        0.006384: key tensor
        0.002260: target tensor
        0.013870: edge tensor
      0.000084: initializing solutions matrix
      0.341732: loop
      0.000016: postprocessing (MAX MEMORY: 0.067GB)
  0.005307: postprocess solutions
0.000065: multiword mentions
0.000012: ner mentions
0.010293: mention bridge
0.027317: merge bridge
0.033777: knowledge pull
0.012107: reference id
0.374758: reference infer
  0.026685: facts graph types
  0.028181: convert facts graph
    0.004388: to digraph
    0.023588: flatten types (770 concepts)
    0.000185: quantities
  0.006763: process dynamic rules
  0.310487: match
    0.310408: match
      0.007167: querygen
      0.267414: creating graph tensor (1750 nodes, 6374 edges)
        0.037999: setup
        0.183700: key tensor
        0.008142: target tensor
        0.035470: edge tensor
      0.000089: initializing solutions matrix
      0.035510: loop
      0.000030: postprocessing (MAX MEMORY: 1.843GB)
  0.000191: postprocess solutions
0.000112: reference resolution
0.050012: fragment resolution
  0.000412: identify previous emora questions
  0.049584: sal
0.396109: dialogue infer
  0.026775: facts graph types
  0.028799: convert facts graph
    0.003864: to digraph
    0.024736: flatten types (770 concepts)
    0.000184: quantities
  0.000026: process dynamic rules
  0.332844: match
    0.332764: match
      0.005152: querygen
      0.189698: creating graph tensor (1859 nodes, 6870 edges)
        0.040003: setup
        0.096502: key tensor
        0.008519: target tensor
        0.042491: edge tensor
      0.000091: initializing solutions matrix
      0.137611: loop
      0.000014: postprocessing (MAX MEMORY: 2.131GB)
  0.005014: postprocess solutions
0.056926: apply inferences
  0.006128: apply
  0.000590: update types
  0.000249: operate
  0.049939: sal
0.011909: reference id 2
0.507215: reference infer 2
  0.026934: facts graph types
  0.027236: convert facts graph
    0.003869: to digraph
    0.023162: flatten types (771 concepts)
    0.000186: quantities
  0.006598: process dynamic rules
  0.443702: match
    0.443624: match
      0.006770: querygen
      0.399761: creating graph tensor (1754 nodes, 6390 edges)
        0.227369: setup
        0.126390: key tensor
        0.008713: target tensor
        0.035105: edge tensor
      0.000092: initializing solutions matrix
      0.036762: loop
      0.000031: postprocessing (MAX MEMORY: 1.852GB)
  0.000191: postprocess solutions
0.000111: reference resolution 2
0.050363: fragment resolution 2
  0.000414: identify previous emora questions
  0.049932: sal
0.361662: dialogue infer 2
  0.026939: facts graph types
  0.029043: convert facts graph
    0.003538: to digraph
    0.025307: flatten types (771 concepts)
    0.000185: quantities
  0.000038: process dynamic rules
  0.297444: match
    0.297365: match
      0.005264: querygen
      0.163580: creating graph tensor (1863 nodes, 6886 edges)
        0.039242: setup
        0.072922: key tensor
        0.008608: target tensor
        0.040650: edge tensor
      0.000089: initializing solutions matrix
      0.128216: loop
      0.000013: postprocessing (MAX MEMORY: 2.141GB)
  0.005467: postprocess solutions
0.061696: apply inferences 2
  0.009704: apply
  0.000954: update types
  0.000232: operate
  0.050786: sal
0.008900: prepare template nlg
0.461792: template infer
  0.028303: facts graph types
  0.030730: convert facts graph
    0.003911: to digraph
    0.026608: flatten types (800 concepts)
    0.000196: quantities
  0.000024: process dynamic rules
  0.397479: match
    0.397398: match
      0.004999: querygen
      0.216778: creating graph tensor (1946 nodes, 7199 edges)
        0.041893: setup
        0.122176: key tensor
        0.009269: target tensor
        0.041138: edge tensor
      0.000091: initializing solutions matrix
      0.175253: loop
      0.000014: postprocessing (MAX MEMORY: 2.339GB)
  0.002197: postprocess solutions
0.001710: template fillers
0.000015: response sel
0.000168: response exp
0.000014: response rules
0.122224: response assembler
  0.000015: response assembly
  0.051947: update sal
  0.002123: decay sal
  0.068124: prune
    0.000017: setup
    0.000827: select keep
    0.000118: delete old spans
    0.050779: setup essentials
    0.007968: identify essentials
    0.007814: remove not keep

[3.07 s] I see . What do you like to do for trips ? I love going to beaches for my vacations .

User: ARG REQUESTS: [('emora', 'request', 'wm5455', 'wm5457')]
TRUTH REQUESTS: []
CURRENT USER CONCEPTS: {'wm5512', 'wm5470', 'wm5503', 'wm5495', 'unknown_noun', 'wm5498', 'past', 'wm5468', 'wm5513', 'wm5522', 'gpe_ner', 'wm5487', 'wm5491', 'wm5509', 'wm5474', 'wm5520', 'have', '"mexico"', 'china', 'user', 'wm5502', 'prp', 'wm5473', 'france', 'wm5521', 'wm5492', 'wm5469', 'wm5501', 'wm5482'}
FRAGMENT REQUEST MERGES: [('wm5473', 'wm5455')]
ARG REQUESTS: []
TRUTH REQUESTS: []

React + Present Options:
	That actually sounds really good to me . I'll have to try that for some vacation . Sounds fun ! (s: 0.17, pr: 0.50)
	Oh , wonderful ! One of my friends traveled to China before the pandemic . She was able to see giant pandas and try the hot pot in Szechuan . She said it was a lot of fun . (s: 0.11, pr: 1.00)


Present Options:
	Do you like the trip ? I have actually traveled to many places . I like most of my trips , but sometimes unpleasant things still happen . The virtual world can be unpredictable . (s: 0.23, pr: 0.10)
	How is your trip ? I hope everything goes well for you . (s: 0.28, pr: 0.10)


0.000019: next turn
0.000015: sentence caser
0.115248: elit
0.693249: parse2logic
  0.003239: facts graph types
  0.005205: convert facts graph
    0.001001: to digraph
    0.004134: flatten types (191 concepts)
    0.000056: quantities
  0.000021: process dynamic rules
  0.666287: match
    0.666210: match
      0.000580: querygen
      0.175828: creating graph tensor (269 nodes, 937 edges)
        0.005882: setup
        0.157068: key tensor
        0.001558: target tensor
        0.010969: edge tensor
      0.000086: initializing solutions matrix
      0.489276: loop
      0.000023: postprocessing (MAX MEMORY: 0.042GB)
  0.002768: postprocess solutions
0.000069: multiword mentions
0.000239: ner mentions
0.009285: mention bridge
0.019225: merge bridge
0.043529: knowledge pull
0.016837: reference id
0.259908: reference infer
  0.026967: facts graph types
  0.028369: convert facts graph
    0.004228: to digraph
    0.023932: flatten types (766 concepts)
    0.000189: quantities
  0.006949: process dynamic rules
  0.195180: match
    0.195098: match
      0.007249: querygen
      0.154315: creating graph tensor (1721 nodes, 6266 edges)
        0.036672: setup
        0.072123: key tensor
        0.007649: target tensor
        0.035969: edge tensor
      0.000104: initializing solutions matrix
      0.033205: loop
      0.000031: postprocessing (MAX MEMORY: 1.781GB)
  0.000117: postprocess solutions
0.000126: reference resolution
0.081236: fragment resolution
  0.000431: identify previous emora questions
  0.031266: find answer
  0.049519: sal
0.567063: dialogue infer
  0.026758: facts graph types
  0.028886: convert facts graph
    0.003831: to digraph
    0.024853: flatten types (762 concepts)
    0.000188: quantities
  0.000028: process dynamic rules
  0.502940: match
    0.502860: match
      0.005477: querygen
      0.354235: creating graph tensor (1839 nodes, 6792 edges)
        0.230166: setup
        0.074688: key tensor
        0.008730: target tensor
        0.038382: edge tensor
      0.000093: initializing solutions matrix
      0.142832: loop
      0.000014: postprocessing (MAX MEMORY: 2.084GB)
  0.005767: postprocess solutions
0.060763: apply inferences
  0.008471: apply
  0.001040: update types
  0.000191: operate
  0.051039: sal
0.014446: reference id 2
0.463532: reference infer 2
  0.027431: facts graph types
  0.028463: convert facts graph
    0.003716: to digraph
    0.024539: flatten types (775 concepts)
    0.000186: quantities
  0.006092: process dynamic rules
  0.398788: match
    0.398705: match
      0.007686: querygen
      0.358369: creating graph tensor (1761 nodes, 6428 edges)
        0.037872: setup
        0.274681: key tensor
        0.008210: target tensor
        0.035488: edge tensor
      0.000090: initializing solutions matrix
      0.032324: loop
      0.000030: postprocessing (MAX MEMORY: 1.873GB)
  0.000119: postprocess solutions
0.000123: reference resolution 2
0.051090: fragment resolution 2
  0.000476: identify previous emora questions
  0.050598: sal
0.451462: dialogue infer 2
  0.027256: facts graph types
  0.029400: convert facts graph
    0.003736: to digraph
    0.025462: flatten types (775 concepts)
    0.000188: quantities
  0.000027: process dynamic rules
  0.385916: match
    0.385835: match
      0.004770: querygen
      0.188808: creating graph tensor (1874 nodes, 6922 edges)
        0.040488: setup
        0.094964: key tensor
        0.008899: target tensor
        0.042193: edge tensor
      0.000089: initializing solutions matrix
      0.191930: loop
      0.000014: postprocessing (MAX MEMORY: 2.164GB)
  0.005908: postprocess solutions
0.065962: apply inferences 2
  0.008956: apply
  0.002457: update types
  0.000222: operate
  0.054308: sal
0.010714: prepare template nlg
0.607645: template infer
  0.029834: facts graph types
  0.032426: convert facts graph
    0.004173: to digraph
    0.028033: flatten types (826 concepts)
    0.000202: quantities
  0.000029: process dynamic rules
  0.539589: match
    0.539502: match
      0.005694: querygen
      0.281834: creating graph tensor (2025 nodes, 7487 edges)
        0.043927: setup
        0.183017: key tensor
        0.009683: target tensor
        0.042763: edge tensor
      0.000090: initializing solutions matrix
      0.251553: loop
      0.000017: postprocessing (MAX MEMORY: 2.530GB)
  0.002685: postprocess solutions
0.001720: template fillers
0.000015: response sel
0.000358: response exp
0.000014: response rules
0.128887: response assembler
  0.000015: response assembly
  0.055326: update sal
  0.002249: decay sal
  0.071282: prune
    0.000013: setup
    0.000854: select keep
    0.000130: delete old spans
    0.052927: setup essentials
    0.005953: identify essentials
    0.010969: remove not keep

[3.66 s] Oh , wonderful ! One of my friends traveled to China before the pandemic . She was able to see giant pandas and try the hot pot in Szechuan . She said it was a lot of fun .

User: ARG REQUESTS: []
TRUTH REQUESTS: []
ARG REQUESTS: []
TRUTH REQUESTS: []

0.000021: next turn
0.000014: sentence caser
0.137135: elit
0.217288: parse2logic
  0.001901: facts graph types
  0.002937: convert facts graph
    0.000591: to digraph
    0.002290: flatten types (116 concepts)
    0.000042: quantities
  0.000022: process dynamic rules
  0.203758: match
    0.203679: match
      0.000328: querygen
      0.027154: creating graph tensor (148 nodes, 490 edges)
        0.002629: setup
        0.012037: key tensor
        0.001408: target tensor
        0.010942: edge tensor
      0.000083: initializing solutions matrix
      0.175786: loop
      0.000016: postprocessing (MAX MEMORY: 0.012GB)
  0.001289: postprocess solutions
0.000051: multiword mentions
0.000142: ner mentions
0.002344: mention bridge
0.003737: merge bridge
0.031649: knowledge pull
0.005356: reference id
0.682298: reference infer
  0.018345: facts graph types
  0.022961: convert facts graph
    0.003825: to digraph
    0.018967: flatten types (605 concepts)
    0.000151: quantities
  0.001774: process dynamic rules
  0.637042: match
    0.636957: match
      0.005077: querygen
      0.583975: creating graph tensor (1344 nodes, 4918 edges)
        0.216568: setup
        0.329247: key tensor
        0.007312: target tensor
        0.029078: edge tensor
      0.000091: initializing solutions matrix
      0.047557: loop
      0.000027: postprocessing (MAX MEMORY: 1.096GB)
  0.000123: postprocess solutions
0.000123: reference resolution
0.040909: fragment resolution
  0.000344: identify previous emora questions
  0.040547: sal
0.267460: dialogue infer
  0.018297: facts graph types
  0.022644: convert facts graph
    0.002954: to digraph
    0.019522: flatten types (605 concepts)
    0.000153: quantities
  0.000025: process dynamic rules
  0.221183: match
    0.221105: match
      0.003456: querygen
      0.104414: creating graph tensor (1377 nodes, 5072 edges)
        0.029632: setup
        0.037855: key tensor
        0.006968: target tensor
        0.028489: edge tensor
      0.000089: initializing solutions matrix
      0.112934: loop
      0.000013: postprocessing (MAX MEMORY: 1.164GB)
  0.003300: postprocess solutions
0.045515: apply inferences
  0.004679: apply
  0.000697: update types
  0.000179: operate
  0.039939: sal
0.005176: reference id 2
0.281893: reference infer 2
  0.018469: facts graph types
  0.021841: convert facts graph
    0.002856: to digraph
    0.018816: flatten types (607 concepts)
    0.000151: quantities
  0.001745: process dynamic rules
  0.237903: match
    0.237820: match
      0.004752: querygen
      0.213160: creating graph tensor (1351 nodes, 4945 edges)
        0.028469: setup
        0.148499: key tensor
        0.007139: target tensor
        0.027444: edge tensor
      0.000089: initializing solutions matrix
      0.019604: loop
      0.000024: postprocessing (MAX MEMORY: 1.108GB)
  0.000123: postprocess solutions
0.000109: reference resolution 2
0.040640: fragment resolution 2
  0.000312: identify previous emora questions
  0.040313: sal
0.328169: dialogue infer 2
  0.018480: facts graph types
  0.022161: convert facts graph
    0.003047: to digraph
    0.018947: flatten types (607 concepts)
    0.000154: quantities
  0.000026: process dynamic rules
  0.282145: match
    0.282070: match
      0.003460: querygen
      0.156322: creating graph tensor (1384 nodes, 5099 edges)
        0.029913: setup
        0.088594: key tensor
        0.007178: target tensor
        0.028990: edge tensor
      0.000089: initializing solutions matrix
      0.121989: loop
      0.000013: postprocessing (MAX MEMORY: 1.176GB)
  0.003338: postprocess solutions
0.048739: apply inferences 2
  0.005850: apply
  0.000679: update types
  0.000183: operate
  0.042009: sal
0.008704: prepare template nlg
0.392300: template infer
  0.019457: facts graph types
  0.023108: convert facts graph
    0.003062: to digraph
    0.019875: flatten types (628 concepts)
    0.000155: quantities
  0.000026: process dynamic rules
  0.346102: match
    0.346024: match
      0.004214: querygen
      0.118678: creating graph tensor (1461 nodes, 5398 edges)
        0.031228: setup
        0.048065: key tensor
        0.007324: target tensor
        0.030434: edge tensor
      0.000090: initializing solutions matrix
      0.222729: loop
      0.000017: postprocessing (MAX MEMORY: 1.317GB)
  0.001385: postprocess solutions
0.000187: template fillers
0.000015: response sel
0.000014: response exp
0.000013: response rules
0.088546: response assembler
  0.000014: response assembly
  0.042449: update sal
  0.001654: decay sal
  0.044413: prune
    0.000014: setup
    0.000669: select keep
    0.000129: delete old spans
    0.032096: setup essentials
    0.005042: identify essentials
    0.006138: remove not keep

[2.63 s] Well, that is quite an idea. But what else do you want to talk about?

User: ARG REQUESTS: []
TRUTH REQUESTS: []
ARG REQUESTS: []
TRUTH REQUESTS: []

0.000021: next turn
0.000013: sentence caser
0.111044: elit
0.043717: parse2logic
  0.000350: facts graph types
  0.000874: convert facts graph
    0.000366: to digraph
    0.000477: flatten types (26 concepts)
    0.000020: quantities
  0.000020: process dynamic rules
  0.039917: match
    0.039839: match
      0.000086: querygen
      0.005228: creating graph tensor (30 nodes, 82 edges)
        0.000497: setup
        0.001296: key tensor
        0.000357: target tensor
        0.003032: edge tensor
      0.000073: initializing solutions matrix
      0.034240: loop
      0.000013: postprocessing (MAX MEMORY: 0.001GB)
  0.000444: postprocess solutions
0.000034: multiword mentions
0.000012: ner mentions
0.001545: mention bridge
0.002956: merge bridge
0.023742: knowledge pull
0.000979: reference id
0.185893: reference infer
  0.013542: facts graph types
  0.018026: convert facts graph
    0.003091: to digraph
    0.014789: flatten types (502 concepts)
    0.000130: quantities
  0.001035: process dynamic rules
  0.151887: match
    0.151821: match
      0.003372: querygen
      0.140141: creating graph tensor (1074 nodes, 3933 edges)
        0.022278: setup
        0.090201: key tensor
        0.005780: target tensor
        0.020695: edge tensor
      0.000089: initializing solutions matrix
      0.008022: loop
      0.000021: postprocessing (MAX MEMORY: 0.702GB)
  0.000008: postprocess solutions
0.000013: reference resolution
0.034015: fragment resolution
  0.000247: identify previous emora questions
  0.033751: sal
0.432441: dialogue infer
  0.013592: facts graph types
  0.017787: convert facts graph
    0.002495: to digraph
    0.015147: flatten types (502 concepts)
    0.000130: quantities
  0.000026: process dynamic rules
  0.397568: match
    0.397482: match
      0.002508: querygen
      0.281464: creating graph tensor (1081 nodes, 3967 edges)
        0.202290: setup
        0.043537: key tensor
        0.005407: target tensor
        0.029070: edge tensor
      0.000090: initializing solutions matrix
      0.113168: loop
      0.000014: postprocessing (MAX MEMORY: 0.714GB)
  0.001808: postprocess solutions
0.038306: apply inferences
  0.003066: apply
  0.000619: update types
  0.000222: operate
  0.034379: sal
0.000996: reference id 2
0.151181: reference infer 2
  0.013750: facts graph types
  0.018015: convert facts graph
    0.002640: to digraph
    0.015227: flatten types (504 concepts)
    0.000132: quantities
  0.000548: process dynamic rules
  0.117518: match
    0.117447: match
      0.003407: querygen
      0.105733: creating graph tensor (1081 nodes, 3960 edges)
        0.022221: setup
        0.050211: key tensor
        0.005540: target tensor
        0.026674: edge tensor
      0.000086: initializing solutions matrix
      0.008023: loop
      0.000020: postprocessing (MAX MEMORY: 0.711GB)
  0.000008: postprocess solutions
0.000013: reference resolution 2
0.034103: fragment resolution 2
  0.000244: identify previous emora questions
  0.033843: sal
0.258438: dialogue infer 2
  0.013906: facts graph types
  0.017891: convert facts graph
    0.002493: to digraph
    0.015253: flatten types (504 concepts)
    0.000132: quantities
  0.000026: process dynamic rules
  0.223274: match
    0.223203: match
      0.002546: querygen
      0.109309: creating graph tensor (1088 nodes, 3994 edges)
        0.022578: setup
        0.058206: key tensor
        0.005430: target tensor
        0.021940: edge tensor
      0.000090: initializing solutions matrix
      0.110994: loop
      0.000016: postprocessing (MAX MEMORY: 0.723GB)
  0.001814: postprocess solutions
0.040620: apply inferences 2
  0.004201: apply
  0.000610: update types
  0.000219: operate
  0.035570: sal
0.007879: prepare template nlg
0.385182: template infer
  0.014959: facts graph types
  0.019024: convert facts graph
    0.002599: to digraph
    0.016266: flatten types (525 concepts)
    0.000136: quantities
  0.000025: process dynamic rules
  0.348439: match
    0.348358: match
      0.002846: querygen
      0.135045: creating graph tensor (1165 nodes, 4293 edges)
        0.024077: setup
        0.078645: key tensor
        0.006034: target tensor
        0.025046: edge tensor
      0.000104: initializing solutions matrix
      0.210067: loop
      0.000016: postprocessing (MAX MEMORY: 0.834GB)
  0.001015: postprocess solutions
0.000139: template fillers
0.000013: response sel
0.000013: response exp
0.000011: response rules
0.067957: response assembler
  0.000012: response assembly
  0.035786: update sal
  0.001371: decay sal
  0.030771: prune
    0.000015: setup
    0.000576: select keep
    0.000105: delete old spans
    0.022770: setup essentials
    0.004815: identify essentials
    0.002019: remove not keep

[1.82 s] Well, that is quite an idea. But what else do you want to talk about?

User: ARG REQUESTS: []
TRUTH REQUESTS: []
ARG REQUESTS: []
TRUTH REQUESTS: []

0.000028: next turn
0.000014: sentence caser
0.113125: elit
0.232105: parse2logic
  0.001778: facts graph types
  0.003072: convert facts graph
    0.000628: to digraph
    0.002390: flatten types (116 concepts)
    0.000040: quantities
  0.000021: process dynamic rules
  0.216721: match
    0.216645: match
      0.000325: querygen
      0.031594: creating graph tensor (152 nodes, 507 edges)
        0.002730: setup
        0.016831: key tensor
        0.000922: target tensor
        0.010957: edge tensor
      0.000080: initializing solutions matrix
      0.184355: loop
      0.000015: postprocessing (MAX MEMORY: 0.013GB)
  0.002339: postprocess solutions
0.000042: multiword mentions
0.000012: ner mentions
0.005042: mention bridge
0.007646: merge bridge
0.025611: knowledge pull
0.000956: reference id
0.206213: reference infer
  0.015691: facts graph types
  0.019758: convert facts graph
    0.002831: to digraph
    0.016771: flatten types (542 concepts)
    0.000141: quantities
  0.000540: process dynamic rules
  0.168592: match
    0.168522: match
      0.004547: querygen
      0.155613: creating graph tensor (1179 nodes, 4315 edges)
        0.024577: setup
        0.095581: key tensor
        0.006469: target tensor
        0.027617: edge tensor
      0.000089: initializing solutions matrix
      0.008050: loop
      0.000036: postprocessing (MAX MEMORY: 0.845GB)
  0.000008: postprocess solutions
0.000014: reference resolution
0.035863: fragment resolution
  0.000247: identify previous emora questions
  0.035600: sal
0.320693: dialogue infer
  0.015455: facts graph types
  0.019428: convert facts graph
    0.002629: to digraph
    0.016645: flatten types (542 concepts)
    0.000140: quantities
  0.000025: process dynamic rules
  0.282220: match
    0.282147: match
      0.002722: querygen
      0.128040: creating graph tensor (1186 nodes, 4349 edges)
        0.024485: setup
        0.073214: key tensor
        0.005827: target tensor
        0.023215: edge tensor
      0.000088: initializing solutions matrix
      0.151024: loop
      0.000015: postprocessing (MAX MEMORY: 0.857GB)
  0.001834: postprocess solutions
0.039486: apply inferences
  0.002819: apply
  0.000620: update types
  0.000169: operate
  0.035859: sal
0.001036: reference id 2
0.207303: reference infer 2
  0.015496: facts graph types
  0.019005: convert facts graph
    0.002668: to digraph
    0.016183: flatten types (542 concepts)
    0.000138: quantities
  0.000505: process dynamic rules
  0.170614: match
    0.170540: match
      0.003666: querygen
      0.158516: creating graph tensor (1179 nodes, 4315 edges)
        0.025240: setup
        0.097751: key tensor
        0.006365: target tensor
        0.027709: edge tensor
      0.000090: initializing solutions matrix
      0.008063: loop
      0.000021: postprocessing (MAX MEMORY: 0.845GB)
  0.000008: postprocess solutions
0.000013: reference resolution 2
0.212931: fragment resolution 2
  0.000253: identify previous emora questions
  0.212661: sal
0.327412: dialogue infer 2
  0.015763: facts graph types
  0.019820: convert facts graph
    0.002719: to digraph
    0.016947: flatten types (542 concepts)
    0.000139: quantities
  0.000026: process dynamic rules
  0.288219: match
    0.288136: match
      0.003188: querygen
      0.136280: creating graph tensor (1186 nodes, 4349 edges)
        0.025756: setup
        0.079081: key tensor
        0.006315: target tensor
        0.023745: edge tensor
      0.000087: initializing solutions matrix
      0.148313: loop
      0.000015: postprocessing (MAX MEMORY: 0.857GB)
  0.001826: postprocess solutions
0.039549: apply inferences 2
  0.002767: apply
  0.000619: update types
  0.000169: operate
  0.035973: sal
0.008069: prepare template nlg
0.386241: template infer
  0.015488: facts graph types
  0.019487: convert facts graph
    0.002820: to digraph
    0.016512: flatten types (542 concepts)
    0.000140: quantities
  0.000025: process dynamic rules
  0.348534: match
    0.348459: match
      0.002791: querygen
      0.142589: creating graph tensor (1186 nodes, 4349 edges)
        0.025141: setup
        0.081584: key tensor
        0.005970: target tensor
        0.028548: edge tensor
      0.000087: initializing solutions matrix
      0.202692: loop
      0.000016: postprocessing (MAX MEMORY: 0.857GB)
  0.000934: postprocess solutions
0.000104: template fillers
0.000014: response sel
0.000013: response exp
0.000012: response rules
0.069340: response assembler
  0.000012: response assembly
  0.035684: update sal
  0.001410: decay sal
  0.032217: prune
    0.000010: setup
    0.000566: select keep
    0.000113: delete old spans
    0.024795: setup essentials
    0.004999: identify essentials
    0.001471: remove not keep

[2.24 s] Well, that is quite an idea. But what else do you want to talk about?

User:
Process finished with exit code 0
