
/* Has Pet */

time(do(user, e/event(object())), today)
r/request(emora, e)
user_aware(r)
-> today_activity_emora_share ->
time(walk(emora, emora_dog), today)
h:<time(h/have(user, p/pet()), now)>
request_truth(emora, h)
;

t/time(h/have(user, p/pet()), now)
category(p)
user_aware(h)
-> q_ask_pet_type ->
op_more_info(p, h)
request(emora, p)
;

time(h/have(user, X/pet()), now)
user_aware(h)
-> user_has_pet ->
i:<i/property(X)>
request(emora, i)
;

prop_i/property(pt/pet())
exists(prop_i)
req/request(emora, prop_i)
user_aware(req)
-> do_with_pet ->
pred:<like(user, pred/event(object())) with(pred, pt)>
request(emora, pred)
;


energetic(X/pet())
have(user, X)
-> energy_handful ->
t:<t/think(user, handful(X))>
request_truth(emora, t)
;

think(user, handful(X/pet()))
-> crazy_pet_event ->
e:<e/event(X) crazy(e)>
request(emora, e)
;

prop/property(pt/pet())
r/request(emora, prop)
user_aware(r)
-> ask_fave_animal ->
a:<time(possess(user, a/animal()), now) time(favorite(a), now)>
request(emora, a)
;

like(x/person(), animal())
->
a:<time(possess(user, a/animal()), now) time(favorite(a), now)>
request(emora, a)
;

time(possess(user, a/animal()), now)
r/request(emora, a)
time(favorite(a), now)
user_aware(r)
->
time(agree(emora, cool(a)), now)
time(cause(fast(cheetah), like(emora, cheetah)), now)
;

time(like(user, z/zoo()), now)
->
oft:<v/visit(user, z) time(oft/often(v), now)>
request_truth(emora, oft)
;

v/visit(user, z/zoo())
often(v)
->
cause(funny(flamingo, appearance), like(emora, flamingo))
possess(user, a/activity()) in(a, z)
favorite(a)
request(emora, a)
;

v/visit(user, z/zoo())
not(often(v))
->
cause(funny(flamingo, appearance), like(emora, flamingo))
possess(user, a/activity()) in(a, z)
favorite(a)
request(emora, a)
;

agr/agree(emora, cool(a/animal()))
user_aware(agr)
->
l:<time(l/like(x/person(), zoo), now)>
request_truth(emora, l)
;

/* Does Not Have Pet */

time(h/have(user, p/pet()), now)
not(h)
-> not_have_pet ->
w:<time(w/want(user, p2/pet()), now)>
request_truth(emora, w)
;

time(w/want(user, p/pet()), now)
not(w)
-> not_want_pet ->
l:<time(l/like(user, a/animal()), now)>
request_truth(emora, l)
;

time(like(user, a/animal()), now)
time(w/want(user, p/pet()), now)
not(w)
->
pred:<time(cause(pred/predicate(), w), now)>
request(emora, pred)
;

time(l/like(user, a/animal()), now)
not(l)
time(w/want(user, p/pet()), now)
not(w)
->
pred:<time(cause(pred/predicate(), l), now)>
request(emora, pred)
;






/* Common Sense */

like(X/pet(), run(X))
->
energetic(X)
;

have(X/pet(), energy())
->
energetic(X)
;


like(X/pet(), nap(X))
->
lazy(X)
;

time(like(X/pet(), fetch(X)), now)
->
playful(X)
healthy(X)
fun(X)
;

time(like(X/pet(), play(X)), now)
->
playful(X)
fun(X)
;

time(like(X/pet(), walk(X)), now)
->
healthy(X)
;

like(X/pet(), hide(X))
->
shy(X)
;

fat(X/pet())
->
lazy(X)
;

type(X/object(), park)
->
n:<locate(X, l/location()) n/near(l, h/home()) have(user, h)>
request_truth(emora, n)

s:<s/size(X)>
request(emora, s)

love(emora, P/park())
type(P, group)
;

large(X/park())
->
c/crowded(X)
not(c)
;

small(X/park())
->
C/crowded(X)
;

Z/chew(X/pet(), Y/object())
have(user, Y)
->
esympathy(emora, Z)
;