/* Methods for entering sports component */
t/time(l/like(user, activity), now)
user_aware(l)
-> person_likes_activity ->
request_truth(emora, like(user, sport()))
;

t/time(l/like(user, sport), now)
user_aware(l)
-> person_likes_sports ->
pl:<pl/play(user,sport)>
request_truth(emora, pl)
;

/* Plays some sport */
t/time(pl/play(user, s/sport()), now)
category(s)
user_aware(pl)
-> person_plays_sport ->
op_more_info(s, pl)
request(emora, s)
;

/* Plays specific sport */
t/time(pl/play(user, football), today)
user_aware(pl)
-> person_plays_football ->
i:<i/property(football)>
request(emora,i)
;

t/time(pl/play(user, baseball), today)
user_aware(pl)
-> person_plays_baseball ->
i:<i/property(baseball)>
request(emora,i)
;

t/time(pl/play(user, soccer), today)
user_aware(pl)
-> person_plays_soccer ->
i:<i/property(soccer)>
request(emora,i)
;

t/time(pl/play(user, tennis), today)
user_aware(pl)
-> person_plays_tennis ->
i:<i/property(tennis)>
request(emora,i)
;

t/time(pl/play(user, b/basketball()), today)
user_aware(pl)
-> person_plays_basketball ->
i:<i/property(b)>
request(emora,i)
;

/* In General if Play Sports */
pl/play(user, s/sport())
user_aware(pl)
-> user_plays_known_sport ->
request_truth(property(user, athlete()))
;

/* Wants to Play Sports */
t/time(w/want(user, pl/play(user, s/sport())), now)
category(s)
user_aware(w)
-> Person_wants_to_play_some_sport ->
op_more_info(s, w)
request(emora, s)
;

/* Wants to Play Specific Sport */
t/time(w/want(user, pl/play(user, football)), now)
user_aware(w)
-> Person_wants_to_play_football ->
p:<c/want(user, pl) cause(p/predicate(), c)>
request(me, p)
;

t/time(w/want(user, pl/play(user, soccer)), now)
user_aware(w)
-> Person_wants_to_play_soccer ->
p:<c/want(user, pl) cause(p/predicate(), c)>
request(me, p)
;

t/time(w/want(user, pl/play(user, tennis)), now)
user_aware(w)
-> Person_wants_to_play_tennis ->
p:<c/want(user, pl) cause(p/predicate(), c)>
request(me, p)
;

t/time(w/want(user, pl/play(user, basketball)), now)
user_aware(w)
-> Person_wants_to_play_basketball ->
p:<c/want(user, pl) cause(p/predicate(), c)>
request(me, p)
;

/* Does Not Play Sports */
time(pl/play(user, s/sport()), now)
pl{"confidence": -1}
-> not_play_sport ->
w:<time(w/want(user, play(user, sp/sport())), now)>
request_truth(emora, w)
;

/* Does not want to play Sports */
time(w/want(user, play(user, s/sport())), now)
w{"confidence": -1}
-> not_want_to_play_sports ->
b:<time(b/be(user, fd/foodie()), now)>
request_truth(emora, b)
;

/* Common Sense */
t/time(play(user, s/sport()), today)
->
energetic(user)
healthy(user)
;

t/time(play(user, s/sport()), now)
->
energetic(user)
healthy(user)
;

time(do(user, p/predicate()), today)
->
time(p, today)
;