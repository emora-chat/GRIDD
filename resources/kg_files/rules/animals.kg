/* General Animals / Zoo */

prop/property(pt/pet())
r/request(emora, prop)
user_aware(r)
-> ask_fave_animal ->
a:<time(possess(user, a/animal()), now)>
time(favorite(a), now)
request(emora, a)
;

like(x/person(), animal())
->
a:<time(possess(user, a/animal()), now)>
time(favorite(a), now)
request(emora, a)
;

time(possess(user, a/animal()), now)
r/request(emora, a)
time(f/favorite(a), now)
req_sat(r)
->
time(agree(emora, cool(a)), now)
pred:<time(cause(pred/predicate(), f), now)>
request(emora, pred)
;

time(like(user, z/zoo()), now)
->
oft:<v/visit(user, z) time(oft/often(v), now)>
request_truth(emora, oft)
;

time(like(user, zoo), now)
->
oft:<v/visit(user, z/zoo()) time(oft/often(v), now)>
request_truth(emora, oft)
;

v/visit(user, z/zoo())
often(v)
->
cause(funny(flamingo, appearance), like(emora, flamingo))
a:<possess(user, a/activity())>
in(a, z)
favorite(a)
request(emora, a)
;

v/visit(user, z/zoo())
not(often(v))
->
cause(funny(flamingo, appearance), like(emora, flamingo))
a:<possess(user, a/activity())>
in(a, z)
favorite(a)
request(emora, a)
;

animals__t
time(l2/like(user, a/animal()), now)
->
l:<time(l/like(x/person(), zoo), now)>
request_truth(emora, l)
;

time(like(user, a/animal()), now)
time(w/want(user, p/pet()), now)
not(w)
->
pred:<time(cause(pred/predicate(), w), now)>
request(emora, pred)
;

time(l/like(user, a/animal()), now)
not(l)
time(w/want(user, p/pet()), now)
not(w)
->
pred:<time(cause(pred/predicate(), l), now)>
request(emora, pred)
;

time(l/like(user, a/animal()), now)
not(l)
time(c/cause(pred/predicate(), l), now)
r/request(emora, pred)
user_aware(r)
->
think(emora, diverse(animal))
;

time(l/like(user, a/animal()), now)
time(c/cause(pred/predicate(), w/want(user, p/pet())), now)
not(w)
r/request(emora, pred)
user_aware(r)
->
think(emora, awesome(animal))
;

time(l/like(user, a/animal()), now)
_specific(a)
uturn(l, 0)
->
time(agree(emora, cool(a)), now)
time(possess(user, a), now)
time(f/favorite(a), now)
pred:<time(cause(pred/predicate(), f), now)>
request(emora, pred)

;

cause(pred/predicate(), favorite(a/animal()))
r/request(emora, pred)
user_aware(r)
->
time(cause(fast(cheetah), like(emora, cheetah)), now)
;

h/have(user, a/animal())
not(h)
favorite(a)
->
time(cause(fast(cheetah), like(emora, cheetah)), now)
;

h/have(user, favorite())
not(h)
uturn(h, 0)
r/request(emora, ani/animal())
eturn(r, 1)
->
time(agree(emora, cool(ani)), now)
time(cause(fast(cheetah), like(emora, cheetah)), now)
;
