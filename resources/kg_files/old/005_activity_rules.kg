
g/go(user, object())
->
p:<with(g, p/person())>
request(emora, p)
;

buy(A/person(), B/entity())
-> ownership ->
possess(A, B)
;

E/activity(user)
type(E, learnable)
-> learnable_activity ->
l/learn(emora, E)
w/want(emora, l)
always(w)
p:<time(s/start(user, E), past) cause(p/predicate(), s)>
request(emora, p)
;

E/activity(user)
type(E, leisure)
-> leisure_activity ->
sounds(E, fun)
p:<l2/like(user, p/predicate(object())) about(l2, E)>
request(emora, p)
;

E/activity(user)
type(E, self_improvement)
-> self_improvement_activity ->
r/relax(emora)
after(r, do(emora, a/activity()))
similar_to(a, E)
l/like(emora, r)
p:<like(user, p/predicate(object())) to(p, relax(user))>
request(emora, p)
;