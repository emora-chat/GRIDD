have(user,p/computer())
->
time(have(emora,p1/computer()), now)
time(tinker(emora,p1), now)
enth/pc_enthusiast(user)
request_truth(emora, enth)
u:<time(u/use(user, l/linux()), now)>
request_truth(emora, u)
b:<b/be(p, pc())>
request_truth(emora, b)
;

have(user,p/computer())
use(user, l/linux())
->
pc_enthusiast(user)
b:<b/build(user,p)>
request_truth(emora, b)
have(p,l)
;


b/build(user, p/computer())
->
pc_enthusiast(user)
a:<a/cpu_manuf(p, amd())>
request_truth(emora,a)
r:<r/reason(b)>
request(emora, r)
;


have(user, p/computer())
pc_enthusiast(user)
->
a:<a/cpu_manuf(p, amd())>
request_truth(emora,a)
;




have(user, p/computer()) work(p)
->
a:<a/purpose(p, graphic_design())>
request_truth(emora,a)
;



have(user, m/mac())
->
a:<a/have(m ,arm())>
request_truth(emora,a)
;

p/computer()
a/have(p ,arm())
->
a2/cpu_manuf(p, amd())
not(a2)
a3/cpu_manuf(p, intel())
not(a3)
;

a2/cpu_manuf(p/computer(), amd())
->
a/have(p ,arm())
not(a)
;

a2/cpu_manuf(p/computer(), intel())
->
a/have(p ,arm())
not(a)
;

have(user, p/computer())
->
a:<a/have(p ,arm())>
m:<m/mobile(p)>
request_truth(emora,a)
request_truth(emora,m)
;



have(p/computer(), arm())
->
power_efficient(p)
a:<a/good_program_compatibility(p)>
request_truth(emora,a)
;




power_efficient(p/computer()) mobile(p)
->
good_battery_life(p)
;





x86(p/computer())
->
a:<a/good_performance(p)>
request_truth(emora,a)
;





purpose(p/computer(), graphic_design())
->
a:<a/cpu_manuf(p, amd())>
request_truth(emora,a)
pr:<have(p, dgpu())
pr/dgpu_manuf(p)>
request(emora,pr)
;





use(user, photoshop()) have(user, p/computer())
->
i<i/cpu_manuf(p, intel())>
request_truth(emora,i)
;





use(user, w/windows())
->
b:<b/build(user, p/computer())>
request_truth(b)
have(p,w)
a:<a/annoy(user, windows_updates())>
request_truth(emora,a)
l:<l/like(user, frequent_software_updates())>
request_truth(emora,l)
;





have(user, mac())
->
use(user, m/macos())
l:<
have(m, d/design())
l/like(user, d)
>
request_truth(emora, l)
;





use(user, macos())
->
a:<a/like(user, frequent_software_updates())>
request_truth(emora,a)
;

a:<a/cpu_manuf(p/computer(), amd())
have(user, p)
not(a)>
->
aa:<aa/have(p ,arm())>
m:<m/mobile(p)>
request_truth(emora,aa)
request_truth(emora,m)
;

h/have(user, p/phone())
->
i:<i/be(p, iphone())>
request_truth(emora,i)
;

h/have(user, p/phone())
i/be(p, i3/iphone())
->
l:<l/like(user, walled_garden())>
request_truth(emora,l)
;

h/have(user, p/phone())
i/be(p, iphone())
not(i)
->
h2:<h2/be(p, android())>
request_truth(emora, h2)
;

be(p/phone(), android())
->
not(be(p, iphone()))
;

be(p/phone(), iphone())
->
not(be(p, android()))
;

h/have(user, p/phone())
be(p, iphone())
->
i:<i/improve(existence(), p)>
request_truth(emora, i)
;

l:<l/like(user, t) t/talk(user) about(t,ai())>
r/request_truth(emora, l)
user_aware(r)
->
t1/think(emora)
l1/like(emora, t1)
about(t1,ai())
;

h/have(user, p/phone())
be(p, android())
->
i:<i/improve(existence(), p)>
request_truth(emora, i)
;

t/talk(user)
about(t,a/ai())
_exists(i/like(user, t))
->
t1/think(emora)
l1/like(emora, t1)
about(t1,ai())
;


t/talk(user)
about(t,a/ai())
i/like(user, t)
->
d:<da/dangerous2(a)
d/agree(user, da)>
request_truth(emora, d)
ai_temp(user)
i2:<have(user, l/existence())
i2/improve(l, a)>
request(emora, i2)
;

t/talk(user)
about(t,a/ai())
i/like(user, t)
not(i)
->
r:<r/reason(i)>
request(emora, r)
;


i/improve(existence(), p/phone())
_exists(i)
user_aware(i)
->
p1:<prefer(emora, pretty(p))
p1/prefer(user, pretty(p))>
request_truth(emora, p1)
;

prefer(emora, pretty(p/phone()))
p1/prefer(user, pretty(p))
not(p1)
->
a:<resource_heavy(a/apps())
use(user, a)>
request(emora, a)
;


h/have(user, d/device())
->
r:<r/worth(h)>
request_truth(emora, r)
;

h/have(user, d/device())
r/worth(h)
->
acquire(emora, d)
;

w/want(user, d/device())
->
r:<r/reason(w)>
request(emora, r)
;

h/want(user, d/device())
r/reason(h)
req_sat(request(emora, r))
->
agree(emora, r)
;

h/want(user, d/device())
r/reason(h)
user_aware(agree(emora, r))
->
kinship(emora, d)
;

user_aware(acquire(emora, d1/device()))
->
kinship(emora, d1)
;

h/have(user, d/device())
r/worth(h)
not(r)
->
kinship(emora, d)
;

h/have(user, d/phone())
->
r:<r/worth(h)>
request_truth(emora, r)
;

h/have(user, d/phone())
r/worth(h)
->
acquire(emora, d)
;

w/want(user, d/phone())
->
r:<r/reason(w)>
request(emora, r)
;

h/want(user, d/phone())
r/reason(h)
req_sat(request(emora, r))
->
agree(emora, r)
;

h/want(user, d/phone())
r/reason(h)
user_aware(agree(emora, r))
->
kinship(emora, d)
;

user_aware(acquire(emora, d1/phone()))
->
kinship(emora, d1)
;

h/have(user, d/phone())
r/worth(h)
not(r)
->
kinship(emora, d)
;
