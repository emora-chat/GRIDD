nsbj(X/past_tense(), Y/pos())
obj(X, Z/pos())
-> dobj_past_verb ->
is_type(X)
p/X(Y,Z)
time(p, past)
focus(p)
center(X)
;

nsbj(X/present_tense(), Y/pos())
obj(X, Z/pos())
-> dobj_pres_verb ->
is_type(X)
p/X(Y,Z)
time(p, now)
focus(p)
center(X)
;

nsbj(X/noun(), Y/pos())
obj(X, Z/pos())
lv(X, U/past_tense())
-> light_verb_past ->
is_type(X)
p/X(Y,Z)
time(p, past)
focus(p)
center(X)
;

nsbj(X/noun(), Y/pos())
obj(X, Z/pos())
lv(X, U/present_tense())
-> light_verb_present ->
is_type(X)
p/X(Y,Z)
time(p, present)
focus(p)
center(X)
;

nsbj(X/past_tense(), Y/pos())
comp(X, Z/pos())
-> outer_comp_verb_past ->
is_type(X)
p/X(Y,Z)
time(p,past)
focus(p)
center(X)
;

nsbj(X/present_tense(), Y/pos())
comp(X, Z/pos())
-> outer_comp_verb_present ->
is_type(X)
p/X(Y,Z)
time(p,present)
focus(p)
center(X)
;

nsbj(X/verb(), Y/pos())
comp(X, Z/pos())
nsbj(Z, B/pos())
obj(Z, A/pos())
-> inner_comp_with_nsbj_obj_verb ->
is_type(Z)
p/Z(B,A)
focus(p)
center(Z)
;

nsbj(X/verb(), Y/pos())
comp(X, Z/pos())
nsbj(Z, A/pos())
-> inner_comp_with_nsbj_verb ->
is_type(Z)
p/Z(A)
focus(p)
center(Z)
;

nsbj(X/verb(), Y/pos())
comp(X, Z/pos())
obj(Z, A/pos())
-> inner_comp_with_obj_verb ->
is_type(Z)
p/Z(Y,A)
focus(p)
center(Z)
;

nsbj(X/verb(), Y/pos())
comp(X, Z/pos())
-> inner_comp_verb ->
is_type(Z)
p/Z(Y)
focus(p)
center(Z)
;

nsbj(X/past_tense(), Y/pos())
-> no_obj_past_verb ->
is_type(X)
p/X(Y)
time(p, past)
focus(p)
center(X)
;

ppmod(X/pos(), Y/pos())
case(Y, Z/pos())
-> preposition_phrase ->
is_type(Z)
p/Z(X,Y)
focus(p)
center(Z)
;

det(X/pos(), Y/dt())
ltype(Y, ref_det)
-> ref_determiner ->
is_type(X)
focus(inst/X())
center(X)
referential(inst)
;

det(X/pos(), Y/dt())
ltype(Y, inst_det)
-> inst_determiner ->
is_type(X)
focus(inst/X())
center(X)
instantiative(inst)
;

det(X/pos(), Y/dt())
-> determiner ->
is_type(X)
focus(X())
center(X)
;

attr(X/pos(), Y/pos())
-> general_attribute ->
p/property(X,Y)
focus(p)
center(Y)
;

poss(X/pos(), Y/pos())
-> obj_of_possessive ->
is_type(X)
focus(X())
center(X)
;

poss(X/pos(), Y/pos())
-> agent_of_possessive ->
p/possess(Y, X)
focus(p)
center(Y)
;

adv(X/pos(), Y/pos())
-> adv ->
p/qualifier(X, Y)
focus(p)
center(Y)
;

com(X/pos(), Y/pos())
-> compound_concept ->
p/compound(Y, X)
focus(p)
center(Y)
;

X/noun()
-> concept ->
focus(X)
center(X)
;