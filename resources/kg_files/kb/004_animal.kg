init_ask_pet=init()
;

animal = (living_thing)
pet = (animal)
;

dog = (pet)
puppy = (dog)
cat = (pet)
kitten = (cat)
fish = (pet)
hamster = (pet)
;

animal_event=(event)
bite=(animal_event)
scratch=(animal_event)
escape=(animal_event)
animal_noise=(animal_event)
[hiss, purr, bark, growl, meow]=(animal_noise)
bother=(animal_event)
expr("distract", bother)
steal=(animal_event)
chew=(animal_event)
;

emotion=(property)
[sick,healthy,happy,sad,scared,lonely,angry]=(emotion)
expr("ill", sick)
expr("fit", healthy)
expr("joyful, upbeat", happy)
expr("upset, depressed", sad)
expr("terrified, afraid", scared)
expr("lonely", lonely)
expr("mad", angry)
;

physical_trait=(property)
size=(property)
[small,large,average]=(size)
expr("tiny", small)
expr("big, huge", large)
expr("normal, typical", average)
[slender,fat,young,old,cute,ugly]=(physical_trait)
expr("thin, skinny, scrawny", slender)
expr("obese, chunky", fat)
expr("young", young)
expr("elderly", old)
expr("adorable", cute)
expr("unattractive", ugly)

personality_trait=(property)
[p_personality_trait, n_personality_trait]=(personality_trait)
[obedient,sweet,smart,fun,playful,energetic]=(p_personality_trait)
expr("kind, nice, loving, sweetheart", sweet)
expr("intelligent", smart)
expr("lively, spunky, rambunctious", energetic)
[mean,jealous,lazy,annoying,stupid]=(n_personality_trait)
expr("bothersome, nuisance", annoying)
expr("dumb, idiotic", stupid)
[friendly,shy,mischevious,crazy]=(personality_trait)
expr("social, outgoing", friendly)
expr("introvert", shy)
expr("tricky", mischevious)
expr("spaz", crazy)

crowded=(property)
expr("cramped, packed", crowded)

handful=(property)
energy=(entity)
;

activity=(event)
[walk,play,fetch,cuddle,sit]=(activity)
expr("snuggle", cuddle)

[stalk,nap,groom,climb,hide,run]=(activity)
expr("climb", climb)
expr("hunt", stalk)
expr("sleep", nap)
expr("clean", groom)
;

veterinarian=(person)
expr("vet", veterinarian)
;

trick = (predicate)
sit = (trick)
stay = (trick)
heel = (trick)
fetch = (trick)
lay_down = (trick)
roll_over = (trick)
speak = (trick)
;

treat=(entity)
;

time(have(emora, emora_dog=dog()), now)
large(emora_dog)
white(emora_dog)
friendly(emora_dog)
mischevious(emora_dog)
like(emora_dog, t/treat())
type(t, group)

time(w2/want(emora, c/cat()), past)
time(w2, always)

;
