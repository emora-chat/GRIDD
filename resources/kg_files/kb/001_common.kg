name=(entity)
expr("name", name)

person = (entity)
expr(["person"], person)
socialbot = (entity)
expr(["socialbot"], socialbot)

user=person()
expr(["i", "me", "my", "mine"], user)
emora=socialbot()
expr(["you", "your", "yours"], emora)

time = (predicate)
expr(["time", "when"], time)

datetime = (entity)
expr(["datetime"], datetime)
yesterday=datetime()
expr(["yesterday"], yesterday)
tomorrow=datetime()
expr(["tomorrow"], tomorrow)
today=datetime()
expr(["today"], today)
now=datetime()
expr(["now"], now)
past=datetime()
expr(["past"], past)
future=datetime()
expr(["future"], future)

in = (predicate)
expr(["in", "inside"], in)
to = (predicate)
expr(["to"], to)
for = (predicate)
expr(["for"], for)
of = (predicate)
expr(["of"], of)
from = (predicate)
expr(["from"], from)
over = (predicate)
expr(["over"], over)
under = (predicate)
expr(["under", "beneath"], under)
on = (predicate)
expr(["on"], on)
into = (predicate)
expr("into", into)
with = (predicate)
expr("with", with)
around = (predicate)
expr("around", around)

locate = (predicate)
expr(["where"], locate)
cause = (predicate)
expr(["why"], cause)
qualifier = (predicate)
expr(["how"], qualifier)

possess = (predicate)
expr(["possess"], possess)

request = (predicate, nonassert)
request_truth = (predicate, nonassert)

what = (entity)
expr(["what"], what)
who = (entity)
expr(["who"], who)

not = (object)
expr(["not", "nt"], not)

can = (object)
expr(["can", "ca"], can)
could = (object)
expr(["could"], could)
shall = (object)
expr(["shall"], shall)
should = (object)
expr(["should"], should)
will = (object)
expr(["will"], will)
would = (object)
expr(["would"], would)
may = (object)
expr(["may"], may)
might = (object)
expr(["might"], might)
must = (object)
expr(["must"], must)

be = (predicate)
expr(["be"], be)
do = (predicate)
expr(["do"], do)
have = (predicate)
expr(["have"], have)
;

event = (predicate)
go = (event)
expr("go", go)

;

color=(property)
expr("color", color)
white=(color)
expr("white", white)
black=(color)
expr("black", black)
brown=(color)
expr("brown", brown)
red=(color)
expr("red", red)
green=(color)
expr("green", green)
blue=(color)
expr("blue", blue)
yellow=(color)
expr("yellow", yellow)
orange=(color)
expr("orange", orange)
purple=(color)
expr("purple", purple)
pink=(color)
expr("pink", pink)

happy=(property)
expr("happy", happy)

;